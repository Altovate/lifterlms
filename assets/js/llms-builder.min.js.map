{"version":3,"sources":["../../../config-wrap-start-default.js","../vendor/almond.js","underscore.js","backbone.js","jquery.js","../vendor/backbone.collectionView.js","../vendor/backbone-forms.js","../vendor/backbone.trackit.js","Models/Image.js","Models/_Relationships.js","Models/QuestionChoice.js","Collections/QuestionChoices.js","Models/QuestionType.js","Models/Question.js","Collections/Questions.js","Models/Quiz.js","Models/_Utilities.js","Models/Lesson.js","Collections/Lessons.js","Collections/QuestionTypes.js","Models/Section.js","Collections/Sections.js","Collections/loader.js","Models/Course.js","Models/loader.js","Controllers/Construct.js","Controllers/Debug.js","Controllers/Sync.js","Views/Editors/wysiwyg.js","Views/_Editable.js","Views/_Shiftable.js","Views/Lesson.js","Views/_Receivable.js","Views/LessonList.js","Views/Section.js","Views/SectionList.js","Views/Course.js","Views/LessonEditor.js","Views/Popover.js","Views/QuizHeader.js","Views/QuestionType.js","Views/QuestionBank.js","Views/QuestionChoice.js","Views/QuestionChoiceList.js","Views/Question.js","Views/QuestionList.js","Views/_Subview.js","Views/Quiz.js","Views/Editor.js","Views/LessonSearch.js","Views/Elements.js","Views/Utilities.js","Views/Sidebar.js","main.js"],"names":["$","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","normalizedBaseParts","baseParts","split","map","config","starMap","length","nodeIdCompat","jsSuffixRegExp","test","replace","charAt","slice","concat","splice","join","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","indexOf","substring","makeRelParts","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","relParts","plugin","parts","relResourceName","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","_","Backbone","root","factory","Zepto","this","_normalizeOptionDeclarations","optionDeclarations","normalizedOptionDeclarations","isArray","each","thisOptionDeclaration","thisOptionName","thisOptionRequired","thisOptionDefaultValue","isString","isObject","first","keys","isFunction","clone","required","isUndefined","defaultValue","mDefaultModelViewConstructor","View","kOptionsRequiringRerendering","kStylesForEmptyListCaption","background","border","box-shadow","CollectionView","extend","tagName","events","mousedown > li, tbody > tr > td","dblclick > li, tbody > tr > td","click","click ul.collection-view, table.collection-view","keydown","spawnMessages","focus","passMessages","*","initializationOptions","collection","modelView","modelViewOptions","itemTemplate","itemTemplateFunction","selectable","clickToSelect","selectableModelsFilter","visibleModelsFilter","sortableModelsFilter","selectMultiple","clickToToggle","processKeyEvents","sortable","sortableOptions","reuseModelViews","detachedRendering","emptyListCaption","initialize","options","ViewOptions","add","setOptions","Collection","_hasBeenRendered","_isBackboneCourierAvailable","Courier","$el","data","addClass","attr","selectedItems","_updateItemTemplate","_registerCollectionEvents","viewManager","ChildViewContainer","_onOptionsChanged","changedOptions","originalOptions","_this","rerender","changedOptionKey","newVal","oldVal","stopListening","setSelectedModel","by","setSelectedModels","removeAttr","_setupSortable","reapplyFilter","view","remove","contains","render","setOption","optionName","optionValue","optionHash","getSelectedModel","getSelectedModels","referenceBy","items","item","get","curLineNumber","_getVisibleItemEls","is","findByModel","newSelectedItems","silent","newSelectedCids","thisModel","cid","pluck","model","thisItemEl","oldSelectedModels","oldSelectedCids","_convertStringsToInts","_validateSelection","newSelectedModels","_containSameElements","_addSelectedClassToSelectedItems","spawn","selectedModels","trigger","updateDependentControls","newSelectedItem","getView","reference","itemElements","_saveSelection","modelViewContainerEl","_getContainerEl","oldViewManager","thisModelView","detach","empty","fragmentContainer","document","createDocumentFragment","findByModelCid","_createNewModelView","_getModelViewOptions","_insertAndRenderModelView","append","_showEmptyListCaptionIfAppropriate","_restoreSelection","forceRerenderOnNextSortEvent","_removeEmptyListCaption","emptyListString","$emptyListCaptionEl","$varEl","_isRenderedAsList","wrapAll","parent","css","find","parentElOrDocumentFragment","atIndex","thisModelViewWrapped","_wrapModelView","nodeType","appendChild","numberOfModelViewsCurrentlyInDOM","children","eq","before","hide","hideThisModelView","toggle","toggleClass","whichFilter","notVisible","_modelViewHasWrapperLI","closest","notSortable","notSelectable","_removeModelView","_validateSelectionAndRender","listenTo","_isRenderedAsTable","tbody","_getClickedItemId","theEvent","clickedItemId","clickedItemEl","currentTarget","clickedItem","isNumeric","parseInt","itemTemplateHtml","html","template","modelReferenceIds","models","intersection","filter","thisItemId","savedSelection","offset","oldItemsIdsWithSelectedClass","itemsIdsFromWhichSelectedClassNeedsToBeRemoved","without","removeClass","itemsIdsFromWhichSelectedClassNeedsToBeAdded","_reorderCollectionBasedOnHTML","thisModelCid","sort","comparator","_getModelViewConstructor","modelViewConstructor","newModelView","collectionListView","collectionView","modelViewWrapperEl","theArray","thisEl","thisElAsNumber","arrayA","arrayB","toLowerCase","_charCodes","upArrow","downArrow","axis","distance","forcePlaceholderSize","start","bind","_sortStart","change","_sortChange","stop","_sortStop","receive","_receive","over","_over","result","event","ui","modelBeingSorted","newIndex","senderListEl","sender","senderCollectionListView","modelReceived","at","_onKeydown","trap","currentOffset","which","_listItem_onMousedown","clickedModel","metaKeyPressed","ctrlKey","metaKey","thisMethod","shiftKey","firstSelectedItemIndex","thisItemModel","clickedItemIndex","shiftKeyRootSelectedItemIndex","minSelectedItemIndex","Math","min","maxSelectedItemIndex","max","thisIndex","selection","window","getSelection","sel","removeAllRanges","union","_listItem_onDoubleClick","_listBackground_onClick","target","setDefaultModelViewConstructor","theConstructor","optionsDeclarationsProperty","optionsThatWereChanged","optionsThatWereChangedPreviousValues","thisOptionProperties","oldValue","newValue","onOptionsChanged","getOptions","optionsNames","pick","Container","views","_views","_indexByModel","_indexByCustom","_updateLength","customIndex","viewCid","modelCid","findByCid","findByCustom","findByIndex","values","findIndexByCid","any","key","method","tail","size","methods","toArray","Form","submit","self","submitButton","schema","constructor","Fieldset","Field","NestedField","selectedFields","fields","fieldSchema","createField","fieldsetSchema","fieldsets","itemSchema","createFieldset","legend","form","idPrefix","field","editor","handleEditorEvent","formEvent","Array","hasFocus","templateData","$form","trim","el","$container","fieldset","setElement","className","attributes","validate","errors","error","skipModelValidate","modelErrors","getValue","isDictionary","_others","val","setError","tmpErr","isEmpty","commit","validateOptions","modelError","set","setValue","getEditor","getFieldAt","blur","focusedField","editors","templateSettings","evaluate","interpolate","escape","validators","errMessages","regexp","number","range","email","url","match","type","message","err","RegExp","flags","numberMessage","numberCheck","parseFloat","attrs","createSchema","$fieldset","errorClassName","createEditor","title","createTitle","createEditorId","constructorFn","isNumber","isNull","str","toUpperCase","help","titleHTML","fieldAttrs","editorAttrs","editorId","noField","$field","fieldClass","disable","$input","enable","clearError","msg","hasNestedForm","last","Editor","Base","getName","editorClass","formValues","getValidator","every","validator","isRegExp","Text","previousValue","keyup","keypress","determineChange","select","dataType","currentValue","TextArea","Password","Number","step","onKeyPress","delayedDetermineChange","charCode","String","fromCharCode","preventDefault","isNaN","Hidden","Checkbox","Select","renderOptions","fetch","success","$select","_getOptionsHtml","_arrayToHtml","_collectionToHtml","newOptions","opts","_objectToHtml","array","label","toString","option","group","optgroup","text","Radio","change input[type=radio]","focus input[type=radio]","blur input[type=radio]","getTemplate","checked","labelHTML","Checkboxes","groupNumber","click input[type=checkbox]","focus input[type=checkbox]","blur input[type=checkbox]","itemHtml","originalId","close","subSchema","NestedForm","nestedForm","_observeFormEvents","on","NestedModel","nestedModel","modelInstance","fieldTemplate","Date","change select","updateHidden","focus select","blur select","Self","today","monthNames","showMonthNames","yearStart","getFullYear","yearEnd","isDate","date","setSeconds","setMilliseconds","datesOptions","monthsOptions","month","yearRange","yearsOptions","year","dates","months","years","$date","$month","$year","$hidden","getDate","getMonth","toISOString","DateTime","DateEditor","minsInterval","dateEditor","pad","hoursOptions","hour","minsOptions","hours","mins","$hour","$min","setHours","setMinutes","getHours","getMinutes","VERSION","unsavedModels","updateUnsavedModels","_unsavedChanges","m","findWhere","getPrompt","fnName","prompt","rest","evaluateModelFn","fn","isBoolean","_unsavedConfig","History","navigate","wrap","oldNav","fragment","confirm","onbeforeunload","Model","unsaved","_trackingChanges","_originalAttrs","startTracking","unloadRouterPrompt","unloadWindowPrompt","_resetTracking","_triggerUnsavedChanges","stopTracking","restartTracking","resetAttributes","unsavedAttributes","changed","old","isEqual","oldSet","sync","oldSync","oldSuccess","textStatus","jqXHR","defaults","enabled","src","relationship_defaults","relationships","init_relationships","rels","get_relationships","set_parent","child_data","child_key","conditional","child","child_val","lookup","llms_builder","construct","get_model","class","get_collection","_maybe_set_parent_reference","child_model","get_child_props","props","get_parent","Image","Relationships","choice","uniqueId","choice_type","correct","marker","question_id","is_selectable","get_choice_selectable","update_order","update_correct","count_correct","get_correct","siblings","question","get_choice_markers","choices","clarifications","default_choices","description","icon","image","keywords","placeholder","points","video","get_keywords","_get_choice_option","get_choice_type","get_min_choices","get_max_choices","get_multi_choices","Questions","QuestionChoices","QuestionType","questions","question_type","content","description_enabled","multi_choices","menu_order","parent_id","video_enabled","video_src","_expanded","_ensure_min_choices","delay","update_points","add_choice","pubSub","before_save","atts","sync_type","get_type_index","curr_type","get_type_iterator","get_qid","get_parent_question","is_in_group","get_parent_quiz","get_points","get_points_percentage","total","toFixed","update_parent","Lesson","Question","LLMS","l10n","translate","lesson_id","status","allowed_attempts","limit_attempts","limit_time","passing_percent","random_answers","time_limit","show_correct_answer","_points","permalink","_show_settings","get_total_points","add_question","get_edit_post_link","has_temp_id","admin_url","Quiz","Utilities","parents","quiz","order","parent_course","course","parent_section","edit_url","view_url","audio_embed","video_embed","free_lesson","quiz_enabled","_forceSync","get_course","add_quiz","lesson","Lessons","lessons","_selected","add_lesson","get_next","circular","_get_sibling","get_prev","direction","sibling_index","section","QuestionTypes","Sections","sections","add_section","add_existing_lesson","action","get_selected_section","selected","Course","QuestionChoice","Section","Collections","Models","console","log","settings","add_error_msg","check_for_changes","changes","get_unsaved_changes","has_unsaved_changes","saving","debug","do_ajax_save","Ajax","action_type","course_id","JSON","stringify","beforeSend","xhr","responseText","res","process_removals","process_updates","get_changed_attributes","exclude","omit","get_changes_to_object","object","changed_atts","model_changes","maybe_restart_tracking","removals","detached","trash","trashed","coll","info","process_object_updates","main_data","orig_id","updates","autosave","check_interval","check_interval_ms","trash_items","save_now","wp","heartbeat","connectNow","set_check_interval","ms","clearInterval","setInterval","statusText","load_tinymce","_get_id","getDefaultSettings","mediaButtons","tinymce","toolbar1","toolbar2","setup","on_ready","unload_tinymce","getContent","media_lib","click .llms-add-image","click a[href=\"#llms-edit-slug\"]","click a[href=\"#llms-remove-image\"]","change .llms-editable-select select","change .llms-switch input[type=\"checkbox\"]","change .llms-editable-img-select input","focusout .llms-input","keydown .llms-input","get_allowed_tags","get_content","hasClass","$html","not","replaceWith","innerHTML","has_changed","is_valid","_validate_url","CourseModel","slug","Spinner","r","init_formatting_els","formatting","ed","Quill","modules","toolbar","keyboard","bindings","tab","handler","context","13","theme","delta","oldDelta","source","init_selects","llmsSelect2","width","on_blur","stopPropagation","save_edits","revert_edits","on_select","multi","$selected","on_img_select","on_keydown","keyCode","open_media_lib","uploader","param","media","post","frames","file_frame","button","multiple","attachment","state","toJSON","sizes","open","remove_image","toggle_switch","init_editor","on_editor_ready","make_slug_editable","$btn","$link","prevAll","prev","full_url","short_url","color","pointer-events","text-decoration","show","$ed","$parent","$label","prependTo","a","createElement","href","host","location","maybe_hide_shiftable_buttons","shift","old_index","new_index","shift_down","shift_up","Editable","Shiftable","data-id","data-section-id","click .detach--lesson","click .edit-lesson","click .edit-quiz","click .section-prev","click .section-next","click .shift-up--lesson","click .shift-down--lesson","click .trash--lesson","open_lesson_editor","open_quiz_editor","section_next","_move_to_section","section_prev","to_section","from_coll","helper","LessonView","Receivable","connectWith","cursor","handle","sortable_start","sortable_stop","LessonListView","click .expand","click .collapse","click .shift-up--section","click .shift-down--section","click .trash--section","mouseenter .llms-lessons","toggle_expanded","lessonListView","on_lesson_add","dragTimeout","expand","collapse","active_lesson_change","maybe_hide_trash_button","current","previous","update","on_mouseenter","SectionView","mousedown > li.llms-section > .llms-builder-header .llms-headline","click ul.collection-view","SectionListView","sectionListView","active_section_change","on_section_add","on_section_toggle","expand_section","placement","style","animation","closeable","backdrop","onShow","onHide","container","webuiPopover","click a[href=\"#llms-quiz-settings\"]","change_events","toggle_settings","click .llms-add-question","QuestionView","change input[name=\"correct\"]","click .llms-action-icon[href=\"#llms-add-choice\"]","click .llms-action-icon[href=\"#llms-del-choice\"]","maybe_disable_buttons","del_choice","toggle_correct","ChoiceView","ChoiceListView","click .clone--question","click .delete--question","click .expand--question","click .collapse--question","change input[name=\"question_points\"]","render_points_percentage","multi_choices_toggle","choiceListView","questionListView","get_question_list","_get_question_clone","choice_clone","delete","selector","subscriptions","get_subview","events_subscribe","func","events_unsubscribe","off","remove_subview","instance","remove_subviews","undelegateEvents","render_subviews","view_data","render_subview","set_state","QuizModel","Popover","QuizHeader","QuestionBank","QuestionList","Subview","header","bank","list","click #llms-enable-quiz","click #llms-show-question-bank","click .bulk-toggle","last_group","$questions","animate","scrollTop","bulk_toggle","expanded","enable_quiz","show_tools","pop","dismissible","LessonEditor","click .llms-editor-nav a[href=\"#llms-editor-close\"]","click .llms-editor-nav a:not([href=\"#llms-editor-close\"])","SidebarView","close_editor","switch_tab","select2:select","params","ajax","ajaxurl","term","page","_ajax_nonce","wp_ajax_data","nonce","dropdownParent","escapeMarkup","markup","templateResult","render_result","loading","$side","$main","course_title","LessonSearch","click #llms-new-section","click #llms-new-lesson","click #llms-existing-lesson","CourseView","draggable","appendTo","cancel","connectToSortable","add_new_section","add_new_lesson","$els","click #llms-collapse-all","click #llms-expand-all","collapse_all","expand_all","Elements","elements","utilities","click #llms-save-button","click #llms-exit-button","click .llms-builder-error","changes_made","heartbeat_send","heartbeat_tick","on_lesson_select","on_editor_close","$saveButton","add_error","$err","prepend","clear_errors","exit_now","data-status","disabled","txt","is_editor_active","lesson_model","Forms","CV","TrackIt","Construct","Debug","Sync","WysiwygEditor","Wysiwyg","Events","Sidebar","sidebar"],"mappings":"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","file":"llms-builder.min.js","sourcesContent":["(function($){\n","/**\n * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/almond/LICENSE\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n\tvar main, req, makeMap, handlers,\n\t\tdefined = {},\n\t\twaiting = {},\n\t\tconfig = {},\n\t\tdefining = {},\n\t\thasOwn = Object.prototype.hasOwnProperty,\n\t\taps = [].slice,\n\t\tjsSuffixRegExp = /\\.js$/;\n\n\tfunction hasProp(obj, prop) {\n\t\treturn hasOwn.call(obj, prop);\n\t}\n\n\t/**\n\t * Given a relative module name, like ./something, normalize it to\n\t * a real name that can be mapped to a path.\n\t * @param {String} name the relative name\n\t * @param {String} baseName a real name that the name arg is relative\n\t * to.\n\t * @returns {String} normalized name\n\t */\n\tfunction normalize(name, baseName) {\n\t\tvar nameParts, nameSegment, mapValue, foundMap, lastIndex,\n\t\t\tfoundI, foundStarMap, starI, i, j, part, normalizedBaseParts,\n\t\t\tbaseParts = baseName && baseName.split(\"/\"),\n\t\t\tmap = config.map,\n\t\t\tstarMap = (map && map['*']) || {};\n\n\t\t//Adjust any relative paths.\n\t\tif (name) {\n\t\t\tname = name.split('/');\n\t\t\tlastIndex = name.length - 1;\n\n\t\t\t// If wanting node ID compatibility, strip .js from end\n\t\t\t// of IDs. Have to do this here, and not in nameToUrl\n\t\t\t// because node allows either .js or non .js to map\n\t\t\t// to same file.\n\t\t\tif (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n\t\t\t\tname[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n\t\t\t}\n\n\t\t\t// Starts with a '.' so need the baseName\n\t\t\tif (name[0].charAt(0) === '.' && baseParts) {\n\t\t\t\t//Convert baseName to array, and lop off the last part,\n\t\t\t\t//so that . matches that 'directory' and not name of the baseName's\n\t\t\t\t//module. For instance, baseName of 'one/two/three', maps to\n\t\t\t\t//'one/two/three.js', but we want the directory, 'one/two' for\n\t\t\t\t//this normalization.\n\t\t\t\tnormalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n\t\t\t\tname = normalizedBaseParts.concat(name);\n\t\t\t}\n\n\t\t\t//start trimDots\n\t\t\tfor (i = 0; i < name.length; i++) {\n\t\t\t\tpart = name[i];\n\t\t\t\tif (part === '.') {\n\t\t\t\t\tname.splice(i, 1);\n\t\t\t\t\ti -= 1;\n\t\t\t\t} else if (part === '..') {\n\t\t\t\t\t// If at the start, or previous value is still ..,\n\t\t\t\t\t// keep them so that when converted to a path it may\n\t\t\t\t\t// still work when converted to a path, even though\n\t\t\t\t\t// as an ID it is less than ideal. In larger point\n\t\t\t\t\t// releases, may be better to just kick out an error.\n\t\t\t\t\tif (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (i > 0) {\n\t\t\t\t\t\tname.splice(i - 1, 2);\n\t\t\t\t\t\ti -= 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//end trimDots\n\n\t\t\tname = name.join('/');\n\t\t}\n\n\t\t//Apply map config if available.\n\t\tif ((baseParts || starMap) && map) {\n\t\t\tnameParts = name.split('/');\n\n\t\t\tfor (i = nameParts.length; i > 0; i -= 1) {\n\t\t\t\tnameSegment = nameParts.slice(0, i).join(\"/\");\n\n\t\t\t\tif (baseParts) {\n\t\t\t\t\t//Find the longest baseName segment match in the config.\n\t\t\t\t\t//So, do joins on the biggest to smallest lengths of baseParts.\n\t\t\t\t\tfor (j = baseParts.length; j > 0; j -= 1) {\n\t\t\t\t\t\tmapValue = map[baseParts.slice(0, j).join('/')];\n\n\t\t\t\t\t\t//baseName segment has  config, find if it has one for\n\t\t\t\t\t\t//this name.\n\t\t\t\t\t\tif (mapValue) {\n\t\t\t\t\t\t\tmapValue = mapValue[nameSegment];\n\t\t\t\t\t\t\tif (mapValue) {\n\t\t\t\t\t\t\t\t//Match, update name to the new value.\n\t\t\t\t\t\t\t\tfoundMap = mapValue;\n\t\t\t\t\t\t\t\tfoundI = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (foundMap) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//Check for a star map match, but just hold on to it,\n\t\t\t\t//if there is a shorter segment match later in a matching\n\t\t\t\t//config, then favor over this star map.\n\t\t\t\tif (!foundStarMap && starMap && starMap[nameSegment]) {\n\t\t\t\t\tfoundStarMap = starMap[nameSegment];\n\t\t\t\t\tstarI = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!foundMap && foundStarMap) {\n\t\t\t\tfoundMap = foundStarMap;\n\t\t\t\tfoundI = starI;\n\t\t\t}\n\n\t\t\tif (foundMap) {\n\t\t\t\tnameParts.splice(0, foundI, foundMap);\n\t\t\t\tname = nameParts.join('/');\n\t\t\t}\n\t\t}\n\n\t\treturn name;\n\t}\n\n\tfunction makeRequire(relName, forceSync) {\n\t\treturn function () {\n\t\t\t//A version of a require function that passes a moduleName\n\t\t\t//value for items that may need to\n\t\t\t//look up paths relative to the moduleName\n\t\t\tvar args = aps.call(arguments, 0);\n\n\t\t\t//If first arg is not require('string'), and there is only\n\t\t\t//one arg, it is the array form without a callback. Insert\n\t\t\t//a null so that the following concat is correct.\n\t\t\tif (typeof args[0] !== 'string' && args.length === 1) {\n\t\t\t\targs.push(null);\n\t\t\t}\n\t\t\treturn req.apply(undef, args.concat([relName, forceSync]));\n\t\t};\n\t}\n\n\tfunction makeNormalize(relName) {\n\t\treturn function (name) {\n\t\t\treturn normalize(name, relName);\n\t\t};\n\t}\n\n\tfunction makeLoad(depName) {\n\t\treturn function (value) {\n\t\t\tdefined[depName] = value;\n\t\t};\n\t}\n\n\tfunction callDep(name) {\n\t\tif (hasProp(waiting, name)) {\n\t\t\tvar args = waiting[name];\n\t\t\tdelete waiting[name];\n\t\t\tdefining[name] = true;\n\t\t\tmain.apply(undef, args);\n\t\t}\n\n\t\tif (!hasProp(defined, name) && !hasProp(defining, name)) {\n\t\t\tthrow new Error('No ' + name);\n\t\t}\n\t\treturn defined[name];\n\t}\n\n\t//Turns a plugin!resource to [plugin, resource]\n\t//with the plugin being undefined if the name\n\t//did not have a plugin prefix.\n\tfunction splitPrefix(name) {\n\t\tvar prefix,\n\t\t\tindex = name ? name.indexOf('!') : -1;\n\t\tif (index > -1) {\n\t\t\tprefix = name.substring(0, index);\n\t\t\tname = name.substring(index + 1, name.length);\n\t\t}\n\t\treturn [prefix, name];\n\t}\n\n\t//Creates a parts array for a relName where first part is plugin ID,\n\t//second part is resource ID. Assumes relName has already been normalized.\n\tfunction makeRelParts(relName) {\n\t\treturn relName ? splitPrefix(relName) : [];\n\t}\n\n\t/**\n\t * Makes a name map, normalizing the name, and using a plugin\n\t * for normalization if necessary. Grabs a ref to plugin\n\t * too, as an optimization.\n\t */\n\tmakeMap = function (name, relParts) {\n\t\tvar plugin,\n\t\t\tparts = splitPrefix(name),\n\t\t\tprefix = parts[0],\n\t\t\trelResourceName = relParts[1];\n\n\t\tname = parts[1];\n\n\t\tif (prefix) {\n\t\t\tprefix = normalize(prefix, relResourceName);\n\t\t\tplugin = callDep(prefix);\n\t\t}\n\n\t\t//Normalize according\n\t\tif (prefix) {\n\t\t\tif (plugin && plugin.normalize) {\n\t\t\t\tname = plugin.normalize(name, makeNormalize(relResourceName));\n\t\t\t} else {\n\t\t\t\tname = normalize(name, relResourceName);\n\t\t\t}\n\t\t} else {\n\t\t\tname = normalize(name, relResourceName);\n\t\t\tparts = splitPrefix(name);\n\t\t\tprefix = parts[0];\n\t\t\tname = parts[1];\n\t\t\tif (prefix) {\n\t\t\t\tplugin = callDep(prefix);\n\t\t\t}\n\t\t}\n\n\t\t//Using ridiculous property names for space reasons\n\t\treturn {\n\t\t\tf: prefix ? prefix + '!' + name : name, //fullName\n\t\t\tn: name,\n\t\t\tpr: prefix,\n\t\t\tp: plugin\n\t\t};\n\t};\n\n\tfunction makeConfig(name) {\n\t\treturn function () {\n\t\t\treturn (config && config.config && config.config[name]) || {};\n\t\t};\n\t}\n\n\thandlers = {\n\t\trequire: function (name) {\n\t\t\treturn makeRequire(name);\n\t\t},\n\t\texports: function (name) {\n\t\t\tvar e = defined[name];\n\t\t\tif (typeof e !== 'undefined') {\n\t\t\t\treturn e;\n\t\t\t} else {\n\t\t\t\treturn (defined[name] = {});\n\t\t\t}\n\t\t},\n\t\tmodule: function (name) {\n\t\t\treturn {\n\t\t\t\tid: name,\n\t\t\t\turi: '',\n\t\t\t\texports: defined[name],\n\t\t\t\tconfig: makeConfig(name)\n\t\t\t};\n\t\t}\n\t};\n\n\tmain = function (name, deps, callback, relName) {\n\t\tvar cjsModule, depName, ret, map, i, relParts,\n\t\t\targs = [],\n\t\t\tcallbackType = typeof callback,\n\t\t\tusingExports;\n\n\t\t//Use name if no relName\n\t\trelName = relName || name;\n\t\trelParts = makeRelParts(relName);\n\n\t\t//Call the callback to define the module, if necessary.\n\t\tif (callbackType === 'undefined' || callbackType === 'function') {\n\t\t\t//Pull out the defined dependencies and pass the ordered\n\t\t\t//values to the callback.\n\t\t\t//Default to [require, exports, module] if no deps\n\t\t\tdeps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n\t\t\tfor (i = 0; i < deps.length; i += 1) {\n\t\t\t\tmap = makeMap(deps[i], relParts);\n\t\t\t\tdepName = map.f;\n\n\t\t\t\t//Fast path CommonJS standard dependencies.\n\t\t\t\tif (depName === \"require\") {\n\t\t\t\t\targs[i] = handlers.require(name);\n\t\t\t\t} else if (depName === \"exports\") {\n\t\t\t\t\t//CommonJS module spec 1.1\n\t\t\t\t\targs[i] = handlers.exports(name);\n\t\t\t\t\tusingExports = true;\n\t\t\t\t} else if (depName === \"module\") {\n\t\t\t\t\t//CommonJS module spec 1.1\n\t\t\t\t\tcjsModule = args[i] = handlers.module(name);\n\t\t\t\t} else if (hasProp(defined, depName) ||\n\t\t\t\t\t\t   hasProp(waiting, depName) ||\n\t\t\t\t\t\t   hasProp(defining, depName)) {\n\t\t\t\t\targs[i] = callDep(depName);\n\t\t\t\t} else if (map.p) {\n\t\t\t\t\tmap.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n\t\t\t\t\targs[i] = defined[depName];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(name + ' missing ' + depName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tret = callback ? callback.apply(defined[name], args) : undefined;\n\n\t\t\tif (name) {\n\t\t\t\t//If setting exports via \"module\" is in play,\n\t\t\t\t//favor that over return value and exports. After that,\n\t\t\t\t//favor a non-undefined return value over exports use.\n\t\t\t\tif (cjsModule && cjsModule.exports !== undef &&\n\t\t\t\t\t\tcjsModule.exports !== defined[name]) {\n\t\t\t\t\tdefined[name] = cjsModule.exports;\n\t\t\t\t} else if (ret !== undef || !usingExports) {\n\t\t\t\t\t//Use the return value from the function.\n\t\t\t\t\tdefined[name] = ret;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (name) {\n\t\t\t//May just be an object definition for the module. Only\n\t\t\t//worry about defining if have a module name.\n\t\t\tdefined[name] = callback;\n\t\t}\n\t};\n\n\trequirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n\t\tif (typeof deps === \"string\") {\n\t\t\tif (handlers[deps]) {\n\t\t\t\t//callback in this case is really relName\n\t\t\t\treturn handlers[deps](callback);\n\t\t\t}\n\t\t\t//Just return the module wanted. In this scenario, the\n\t\t\t//deps arg is the module name, and second arg (if passed)\n\t\t\t//is just the relName.\n\t\t\t//Normalize module name, if it contains . or ..\n\t\t\treturn callDep(makeMap(deps, makeRelParts(callback)).f);\n\t\t} else if (!deps.splice) {\n\t\t\t//deps is a config object, not an array.\n\t\t\tconfig = deps;\n\t\t\tif (config.deps) {\n\t\t\t\treq(config.deps, config.callback);\n\t\t\t}\n\t\t\tif (!callback) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (callback.splice) {\n\t\t\t\t//callback is an array, which means it is a dependency list.\n\t\t\t\t//Adjust args if there are dependencies\n\t\t\t\tdeps = callback;\n\t\t\t\tcallback = relName;\n\t\t\t\trelName = null;\n\t\t\t} else {\n\t\t\t\tdeps = undef;\n\t\t\t}\n\t\t}\n\n\t\t//Support require(['a'])\n\t\tcallback = callback || function () {};\n\n\t\t//If relName is a function, it is an errback handler,\n\t\t//so remove it.\n\t\tif (typeof relName === 'function') {\n\t\t\trelName = forceSync;\n\t\t\tforceSync = alt;\n\t\t}\n\n\t\t//Simulate async callback;\n\t\tif (forceSync) {\n\t\t\tmain(undef, deps, callback, relName);\n\t\t} else {\n\t\t\t//Using a non-zero value because of concern for what old browsers\n\t\t\t//do, and latest browsers \"upgrade\" to 4 if lower value is used:\n\t\t\t//http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n\t\t\t//If want a value immediately, use require('id') instead -- something\n\t\t\t//that works in almond on the global level, but not guaranteed and\n\t\t\t//unlikely to work in other AMD implementations.\n\t\t\tsetTimeout(function () {\n\t\t\t\tmain(undef, deps, callback, relName);\n\t\t\t}, 4);\n\t\t}\n\n\t\treturn req;\n\t};\n\n\t/**\n\t * Just drops the config on the floor, but returns req in case\n\t * the config return value is used.\n\t */\n\treq.config = function (cfg) {\n\t\treturn req(cfg);\n\t};\n\n\t/**\n\t * Expose module registry for debugging and tooling\n\t */\n\trequirejs._defined = defined;\n\n\tdefine = function (name, deps, callback) {\n\t\tif (typeof name !== 'string') {\n\t\t\tthrow new Error('See almond README: incorrect module build, no module name');\n\t\t}\n\n\t\t//This module may not have dependencies\n\t\tif (!deps.splice) {\n\t\t\t//deps is not an array, so probably means\n\t\t\t//an object literal or factory function for\n\t\t\t//the value. Adjust args.\n\t\t\tcallback = deps;\n\t\t\tdeps = [];\n\t\t}\n\n\t\tif (!hasProp(defined, name) && !hasProp(waiting, name)) {\n\t\t\twaiting[name] = [name, deps, callback];\n\t\t}\n\t};\n\n\tdefine.amd = {\n\t\tjQuery: true\n\t};\n}());\n\ndefine(\"../vendor/almond\", function(){});\n\n","/**\n * Returns the WordPress-loaded version of Underscore for use with things that need it and use Require.\n * @return   obj\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'underscore',[],function() {\n\treturn _;\n} );\n\n","/**\n * Returns the WordPress-loaded version of Backbone for use with things that need it and use Require.\n * @return   obj\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'backbone',[],function() {\n\treturn Backbone;\n} );\n\n","/**\n * Returns the WordPress-loaded version of Underscore for use with things that need it and use Require.\n * @return   obj\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'jquery',[],function() {\n\treturn jQuery;\n} );\n\n","/*!\n* Backbone.CollectionView, v1.3.4\n* Copyright (c)2013 Rotunda Software, LLC.\n* Distributed under MIT license\n* http://github.com/rotundasoftware/backbone-collection-view\n*/\n\n( function( root, factory ) {\n\t// UMD wrapper\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( '../vendor/backbone.collectionView',[ 'underscore', 'backbone', 'jquery' ], factory );\n\t} else if ( typeof exports !== 'undefined' ) {\n\t\t// Node/CommonJS\n\t\tmodule.exports = factory( require('underscore' ), require( 'backbone' ), require( 'backbone' ).$ );\n\t} else {\n\t\t// Browser globals\n\t\tfactory( root._, root.Backbone, ( root.jQuery || root.Zepto || root.$ ) );\n\t}\n}( this, function( _, Backbone, $ ) {\n\tvar mDefaultModelViewConstructor = Backbone.View;\n\n\tvar kDefaultReferenceBy = \"model\";\n\n\tvar kOptionsRequiringRerendering = [ \"collection\", \"modelView\", \"modelViewOptions\", \"itemTemplate\", \"itemTemplateFunction\", \"detachedRendering\" ];\n\n\tvar kStylesForEmptyListCaption = {\n\t\t\"background\" : \"transparent\",\n\t\t\"border\" : \"none\",\n\t\t\"box-shadow\" : \"none\"\n\t};\n\n\tBackbone.CollectionView = Backbone.View.extend( {\n\n\t\ttagName : \"ul\",\n\n\t\tevents : {\n\t\t\t\"mousedown > li, tbody > tr > td\" : \"_listItem_onMousedown\",\n\t\t\t\"dblclick > li, tbody > tr > td\" : \"_listItem_onDoubleClick\",\n\t\t\t\"click\" : \"_listBackground_onClick\",\n\t\t\t\"click ul.collection-view, table.collection-view\" : \"_listBackground_onClick\",\n\t\t\t\"keydown\" : \"_onKeydown\"\n\t\t},\n\n\t\t// only used if Backbone.Courier is available\n\t\tspawnMessages : {\n\t\t\t\"focus\" : \"focus\"\n\t\t},\n\n\t\t//only used if Backbone.Courier is available\n\t\tpassMessages : { \"*\" : \".\" },\n\n\t\t// viewOption definitions with default values.\n\t\tinitializationOptions : [\n\t\t\t{ \"collection\" : null },\n\t\t\t{ \"modelView\" : null },\n\t\t\t{ \"modelViewOptions\" : {} },\n\t\t\t{ \"itemTemplate\" : null },\n\t\t\t{ \"itemTemplateFunction\" : null },\n\t\t\t{ \"selectable\" : true },\n\t\t\t{ \"clickToSelect\" : true },\n\t\t\t{ \"selectableModelsFilter\" : null },\n\t\t\t{ \"visibleModelsFilter\" : null },\n\t\t\t{ \"sortableModelsFilter\" : null },\n\t\t\t{ \"selectMultiple\" : false },\n\t\t\t{ \"clickToToggle\" : false },\n\t\t\t{ \"processKeyEvents\" : true },\n\t\t\t{ \"sortable\" : false },\n\t\t\t{ \"sortableOptions\" : null },\n\t\t\t{ \"reuseModelViews\" : true },\n\t\t\t{ \"detachedRendering\" : false },\n\t\t\t{ \"emptyListCaption\" : null }\n\t\t],\n\n\t\tinitialize : function( options ) {\n\t\t\tBackbone.ViewOptions.add( this, \"initializationOptions\" ); // setup the ViewOptions functionality.\n\t\t\tthis.setOptions( options ); // and make use of any provided options\n\n\t\t\tif( ! this.collection ) this.collection = new Backbone.Collection();\n\n\t\t\tthis._hasBeenRendered = false;\n\n\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\tBackbone.Courier.add( this );\n\t\t\t}\n\n\t\t\tthis.$el.data( \"view\", this ); // needed for connected sortable lists\n\t\t\tthis.$el.addClass( \"collection-view collection-list\" ); // collection-list is in there for legacy purposes\n\t\t\tif( this.selectable ) this.$el.addClass( \"selectable\" );\n\n\t\t\tif( this.selectable && this.processKeyEvents )\n\t\t\t\tthis.$el.attr( \"tabindex\", 0 ); // so we get keyboard events\n\n\t\t\tthis.selectedItems = [];\n\n\t\t\tthis._updateItemTemplate();\n\n\t\t\tif( this.collection )\n\t\t\t\tthis._registerCollectionEvents();\n\n\t\t\tthis.viewManager = new ChildViewContainer();\n\t\t},\n\n\t\t_onOptionsChanged : function( changedOptions, originalOptions ) {\n\t\t\tvar _this = this;\n\t\t\tvar rerender = false;\n\n\t\t\t_.each( _.keys( changedOptions ), function( changedOptionKey ) {\n\t\t\t\tvar newVal = changedOptions[ changedOptionKey ];\n\t\t\t\tvar oldVal = originalOptions[ changedOptionKey ];\n\t\t\t\tswitch( changedOptionKey ) {\n\t\t\t\t\tcase \"collection\" :\n\t\t\t\t\t\tif ( newVal !== oldVal ) {\n\t\t\t\t\t\t\t_this.stopListening( oldVal );\n\t\t\t\t\t\t\t_this._registerCollectionEvents();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"selectMultiple\" :\n\t\t\t\t\t\tif( ! newVal && _this.selectedItems.length > 1 )\n\t\t\t\t\t\t\t_this.setSelectedModel( _.first( _this.selectedItems ), { by : \"cid\" } );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"selectable\" :\n\t\t\t\t\t\tif( ! newVal && _this.selectedItems.length > 0 )\n\t\t\t\t\t\t\t_this.setSelectedModels( [] );\n\n\t\t\t\t\t\tif( newVal && this.processKeyEvents ) _this.$el.attr( \"tabindex\", 0 ); // so we get keyboard events\n\t\t\t\t\t\telse _this.$el.removeAttr( \"tabindex\", 0 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sortable\" :\n\t\t\t\t\t\tchangedOptions.sortable ? _this._setupSortable() : _this.$el.sortable( \"destroy\" );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"selectableModelsFilter\" :\n\t\t\t\t\t\t_this.reapplyFilter( 'selectableModels' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sortableOptions\" :\n\t\t\t\t\t\t_this.$el.sortable( \"destroy\" );\n\t\t\t\t\t\t_this._setupSortable();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sortableModelsFilter\" :\n\t\t\t\t\t\t_this.reapplyFilter( 'sortableModels' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"visibleModelsFilter\" :\n\t\t\t\t\t\t_this.reapplyFilter( 'visibleModels' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"itemTemplate\" :\n\t\t\t\t\t\t_this._updateItemTemplate();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"processKeyEvents\" :\n\t\t\t\t\t\tif( newVal && this.selectable ) _this.$el.attr( \"tabindex\", 0 ); // so we get keyboard events\n\t\t\t\t\t\telse _this.$el.removeAttr( \"tabindex\", 0 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"modelView\" :\n\t\t\t\t\t\t//need to remove all old view instances\n\t\t\t\t\t\t_this.viewManager.each( function( view ) {\n\t\t\t\t\t\t\t_this.viewManager.remove( view );\n\t\t\t\t\t\t\t// destroy the View itself\n\t\t\t\t\t\t\tview.remove();\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif( _.contains( kOptionsRequiringRerendering, changedOptionKey ) ) rerender = true;\n\t\t\t} );\n\n\t\t\tif( this._hasBeenRendered && rerender ) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t},\n\n\t\tsetOption : function( optionName, optionValue ) { // now is mearly a wrapper around backbone.viewOptions' setOptions()\n\t\t\tvar optionHash = {};\n\t\t\toptionHash[ optionName ] = optionValue;\n\t\t\tthis.setOptions( optionHash );\n\t\t},\n\n\t\tgetSelectedModel : function( options ) {\n\t\t\treturn this.selectedItems.length ? _.first( this.getSelectedModels( options ) ) : null;\n\t\t},\n\n\t\tgetSelectedModels : function ( options ) {\n\t\t\tvar _this = this;\n\n\t\t\toptions = _.extend( {}, {\n\t\t\t\tby : kDefaultReferenceBy\n\t\t\t}, options );\n\n\t\t\tvar referenceBy = options.by;\n\t\t\tvar items = [];\n\n\t\t\tswitch( referenceBy ) {\n\t\t\t\tcase \"id\" :\n\t\t\t\t\t_.each( this.selectedItems, function ( item ) {\n\t\t\t\t\t\titems.push( _this.collection.get( item ).id );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"cid\" :\n\t\t\t\t\titems = items.concat( this.selectedItems );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"offset\" :\n\t\t\t\t\tvar curLineNumber = 0;\n\n\t\t\t\t\tvar itemElements = this._getVisibleItemEls();\n\n\t\t\t\t\titemElements.each( function() {\n\t\t\t\t\t\tvar thisItemEl = $( this );\n\t\t\t\t\t\tif( thisItemEl.is( \".selected\" ) )\n\t\t\t\t\t\t\titems.push( curLineNumber );\n\t\t\t\t\t\tcurLineNumber++;\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"model\" :\n\t\t\t\t\t_.each( this.selectedItems, function ( item ) {\n\t\t\t\t\t\titems.push( _this.collection.get( item ) );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"view\" :\n\t\t\t\t\t_.each( this.selectedItems, function ( item ) {\n\t\t\t\t\t\titems.push( _this.viewManager.findByModel( _this.collection.get( item ) ) );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error( \"Invalid referenceBy option: \" + referenceBy );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn items;\n\n\t\t},\n\n\t\tsetSelectedModels : function( newSelectedItems, options ) {\n\t\t\tif( ! _.isArray( newSelectedItems ) ) throw \"Invalid parameter value\";\n\t\t\tif( ! this.selectable && newSelectedItems.length > 0 ) return; // used to throw error, but there are some circumstances in which a list can be selectable at times and not at others, don't want to have to worry about catching errors\n\n\t\t\toptions = _.extend( {}, {\n\t\t\t\tsilent : false,\n\t\t\t\tby : kDefaultReferenceBy\n\t\t\t}, options );\n\n\t\t\tvar referenceBy = options.by;\n\t\t\tvar newSelectedCids = [];\n\n\t\t\tswitch( referenceBy ) {\n\t\t\t\tcase \"cid\" :\n\t\t\t\t\tnewSelectedCids = newSelectedItems;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"id\" :\n\t\t\t\t\tthis.collection.each( function( thisModel ) {\n\t\t\t\t\t\tif( _.contains( newSelectedItems, thisModel.id ) ) newSelectedCids.push( thisModel.cid );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"model\" :\n\t\t\t\t\tnewSelectedCids = _.pluck( newSelectedItems, \"cid\" );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"view\" :\n\t\t\t\t\t_.each( newSelectedItems, function( item ) {\n\t\t\t\t\t\tnewSelectedCids.push( item.model.cid );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"offset\" :\n\t\t\t\t\tvar curLineNumber = 0;\n\t\t\t\t\tvar selectedItems = [];\n\n\t\t\t\t\tvar itemElements = this._getVisibleItemEls();\n\t\t\t\t\titemElements.each( function() {\n\t\t\t\t\t\tvar thisItemEl = $( this );\n\t\t\t\t\t\tif( _.contains( newSelectedItems, curLineNumber ) )\n\t\t\t\t\t\t\tnewSelectedCids.push( thisItemEl.attr( \"data-model-cid\" ) );\n\t\t\t\t\t\tcurLineNumber++;\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error( \"Invalid referenceBy option: \" + referenceBy );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar oldSelectedModels = this.getSelectedModels();\n\t\t\tvar oldSelectedCids = _.clone( this.selectedItems );\n\n\t\t\tthis.selectedItems = this._convertStringsToInts( newSelectedCids );\n\t\t\tthis._validateSelection();\n\n\t\t\tvar newSelectedModels = this.getSelectedModels();\n\n\t\t\tif( ! this._containSameElements( oldSelectedCids, this.selectedItems ) )\n\t\t\t{\n\t\t\t\tthis._addSelectedClassToSelectedItems( oldSelectedCids );\n\n\t\t\t\tif( ! options.silent )\n\t\t\t\t{\n\t\t\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\t\t\tthis.spawn( \"selectionChanged\", {\n\t\t\t\t\t\t\tselectedModels : newSelectedModels,\n\t\t\t\t\t\t\toldSelectedModels : oldSelectedModels\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else this.trigger( \"selectionChanged\", newSelectedModels, oldSelectedModels );\n\t\t\t\t}\n\n\t\t\t\tthis.updateDependentControls();\n\t\t\t}\n\t\t},\n\n\t\tsetSelectedModel : function( newSelectedItem, options ) {\n\t\t\tif( ! newSelectedItem && newSelectedItem !== 0 )\n\t\t\t\tthis.setSelectedModels( [], options );\n\t\t\telse\n\t\t\t\tthis.setSelectedModels( [ newSelectedItem ], options );\n\t\t},\n\n\t\tgetView : function( reference, options ) {\n\t\t\toptions = _.extend( {}, {\n\t\t\t\tby : kDefaultReferenceBy\n\t\t\t}, options );\n\n\t\t\tswitch( options.by ) {\n\t\t\t\tcase \"id\" :\n\t\t\t\tcase \"cid\" :\n\t\t\t\t\tvar model = this.collection.get( reference ) || null;\n\t\t\t\t\treturn model && this.viewManager.findByModel( model );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"offset\" :\n\t\t\t\t\tvar itemElements = this._getVisibleItemEls();\n\t\t\t\t\treturn $( itemElements.get( reference ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"model\" :\n\t\t\t\t\treturn this.viewManager.findByModel( reference );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error( \"Invalid referenceBy option: \" + referenceBy );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\trender : function() {\n\t\t\tvar _this = this;\n\n\t\t\tthis._hasBeenRendered = true;\n\n\t\t\tif( this.selectable ) this._saveSelection();\n\n\t\t\tvar modelViewContainerEl;\n\n\t\t\t// If collection view element is a table and it has a tbody\n\t\t\t// within it, render the model views inside of the tbody\n\t\t\tmodelViewContainerEl = this._getContainerEl();\n\n\t\t\tvar oldViewManager = this.viewManager;\n\t\t\tthis.viewManager = new ChildViewContainer();\n\n\t\t\t// detach each of our subviews that we have already created to represent models\n\t\t\t// in the collection. We are going to re-use the ones that represent models that\n\t\t\t// are still here, instead of creating new ones, so that we don't loose state\n\t\t\t// information in the views.\n\t\t\toldViewManager.each( function( thisModelView ) {\n\t\t\t\t// to boost performance, only detach those views that will be sticking around.\n\t\t\t\t// we won't need the other ones later, so no need to detach them individually.\n\t\t\t\tif( this.reuseModelViews && this.collection.get( thisModelView.model.cid ) ) {\n\t\t\t\t\tthisModelView.$el.detach();\n\t\t\t\t} else thisModelView.remove();\n\t\t\t}, this );\n\n\t\t\tmodelViewContainerEl.empty();\n\t\t\tvar fragmentContainer;\n\n\t\t\tif( this.detachedRendering )\n\t\t\t\tfragmentContainer = document.createDocumentFragment();\n\n\t\t\tthis.collection.each( function( thisModel ) {\n\t\t\t\tvar thisModelView = oldViewManager.findByModelCid( thisModel.cid );\n\t\t\t\tif( ! this.reuseModelViews || _.isUndefined( thisModelView ) ) {\n\t\t\t\t\t// if the model view has not already been created on a\n\t\t\t\t\t// previous render then create and initialize it now.\n\t\t\t\t\tthisModelView = this._createNewModelView( thisModel, this._getModelViewOptions( thisModel ) );\n\t\t\t\t}\n\n\t\t\t\tthis._insertAndRenderModelView( thisModelView, fragmentContainer || modelViewContainerEl );\n\t\t\t}, this );\n\n\t\t\tif( this.detachedRendering )\n\t\t\t\tmodelViewContainerEl.append( fragmentContainer );\n\n\t\t\tif( this.sortable ) this._setupSortable();\n\n\t\t\tthis._showEmptyListCaptionIfAppropriate();\n\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"render\" );\n\t\t\telse this.trigger( \"render\" );\n\n\t\t\tif( this.selectable ) {\n\t\t\t\tthis._restoreSelection();\n\t\t\t\tthis.updateDependentControls();\n\t\t\t}\n\n\t\t\tthis.forceRerenderOnNextSortEvent = false;\n\t\t},\n\n\t\t_showEmptyListCaptionIfAppropriate : function ( ) {\n\t\t\tthis._removeEmptyListCaption();\n\n\t\t\tif( this.emptyListCaption ) {\n\t\t\t\tvar visibleEls = this._getVisibleItemEls();\n\n\t\t\t\tif( visibleEls.length === 0 ) {\n\t\t\t\t\tvar emptyListString;\n\n\t\t\t\t\tif( _.isFunction( this.emptyListCaption ) )\n\t\t\t\t\t\temptyListString = this.emptyListCaption();\n\t\t\t\t\telse\n\t\t\t\t\t\temptyListString = this.emptyListCaption;\n\n\t\t\t\t\tvar $emptyListCaptionEl;\n\t\t\t\t\tvar $varEl = $( \"<var class='empty-list-caption'>\" + emptyListString + \"</var>\" );\n\n\t\t\t\t\t// need to wrap the empty caption to make it fit the rendered list structure (either with an li or a tr td)\n\t\t\t\t\tif( this._isRenderedAsList() )\n\t\t\t\t\t\t$emptyListCaptionEl = $varEl.wrapAll( \"<li class='not-sortable'></li>\" ).parent().css( kStylesForEmptyListCaption );\n\t\t\t\t\telse\n\t\t\t\t\t\t$emptyListCaptionEl = $varEl.wrapAll( \"<tr class='not-sortable'><td colspan='1000'></td></tr>\" ).parent().parent().css( kStylesForEmptyListCaption );\n\n\t\t\t\t\tthis._getContainerEl().append( $emptyListCaptionEl );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_removeEmptyListCaption : function( ) {\n\t\t\tif( this._isRenderedAsList() )\n\t\t\t\tthis._getContainerEl().find( \"> li > var.empty-list-caption\" ).parent().remove();\n\t\t\telse\n\t\t\t\tthis._getContainerEl().find( \"> tr > td > var.empty-list-caption\" ).parent().parent().remove();\n\t\t},\n\n\t\t// Render a single model view in container object \"parentElOrDocumentFragment\", which is either\n\t\t// a documentFragment or a jquery object. optional arg atIndex is not support for document fragments.\n\t\t_insertAndRenderModelView : function( modelView, parentElOrDocumentFragment, atIndex ) {\n\t\t\tvar thisModelViewWrapped = this._wrapModelView( modelView );\n\n\t\t\tif( parentElOrDocumentFragment.nodeType === 11 ) // if we are inserting into a document fragment, we need to use the DOM appendChild method\n\t\t\t\tparentElOrDocumentFragment.appendChild( thisModelViewWrapped.get( 0 ) );\n\t\t\telse {\n\t\t\t\tvar numberOfModelViewsCurrentlyInDOM = parentElOrDocumentFragment.children().length;\n\t\t\t\tif( ! _.isUndefined( atIndex ) && atIndex >= 0 && atIndex < numberOfModelViewsCurrentlyInDOM )\n\t\t\t\t\t// note this.collection.length might be greater than parentElOrDocumentFragment.children().length here\n\t\t\t\t\tparentElOrDocumentFragment.children().eq( atIndex ).before( thisModelViewWrapped );\n\t\t\t\telse {\n\t\t\t\t\t// if we are attempting to insert a modelView in an position that is beyond what is currently in the\n\t\t\t\t\t// DOM, then make a note that we need to re-render the collection view on the next sort event. If we dont\n\t\t\t\t\t// force this re-render, we can end up with modelViews in the wrong order when the collection defines\n\t\t\t\t\t// a comparator and multiple models are added at once. See https://github.com/rotundasoftware/backbone.collectionView/issues/69\n\t\t\t\t\tif( ! _.isUndefined( atIndex ) && atIndex > numberOfModelViewsCurrentlyInDOM ) this.forceRerenderOnNextSortEvent = true;\n\n\t\t\t\t\tparentElOrDocumentFragment.append( thisModelViewWrapped );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.viewManager.add( modelView );\n\n\t\t\t// we have to render the modelView after it has been put in context, as opposed to in the\n\t\t\t// initialize function of the modelView, because some rendering might be dependent on\n\t\t\t// the modelView's context in the DOM tree. For example, if the modelView stretch()'s itself,\n\t\t\t// it must be in full context in the DOM tree or else the stretch will not behave as intended.\n\t\t\tvar renderResult = modelView.render();\n\n\t\t\t// return false from the view's render function to hide this item\n\t\t\tif( renderResult === false ) {\n\t\t\t\tthisModelViewWrapped.hide();\n\t\t\t\tthisModelViewWrapped.addClass( \"not-visible\" );\n\t\t\t}\n\n\t\t\tvar hideThisModelView = false;\n\t\t\tif( _.isFunction( this.visibleModelsFilter ) )\n\t\t\t\thideThisModelView = ! this.visibleModelsFilter( modelView.model );\n\n\t\t\tif( thisModelViewWrapped.children().length === 1 )\n\t\t\t\tthisModelViewWrapped.toggle( ! hideThisModelView );\n\t\t\telse modelView.$el.toggle( ! hideThisModelView );\n\n\t\t\tthisModelViewWrapped.toggleClass( \"not-visible\", hideThisModelView );\n\n\t\t\tif( ! hideThisModelView && this.emptyListCaption ) this._removeEmptyListCaption();\n\t\t},\n\n\t\tupdateDependentControls : function() {\n\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\tthis.spawn( \"updateDependentControls\", {\n\t\t\t\t\tselectedModels : this.getSelectedModels()\n\t\t\t\t} );\n\t\t\t} else this.trigger( \"updateDependentControls\", this.getSelectedModels() );\n\t\t},\n\n\t\t// Override `Backbone.View.remove` to also destroy all Views in `viewManager`\n\t\tremove : function() {\n\t\t\tthis.viewManager.each( function( view ) {\n\t\t\t\tview.remove();\n\t\t\t} );\n\n\t\t\tBackbone.View.prototype.remove.apply( this, arguments );\n\t\t},\n\n\t\treapplyFilter : function( whichFilter ) {\n\t\t\tvar _this = this;\n\n\t\t\tif( ! _.contains( [ \"selectableModels\", \"sortableModels\", \"visibleModels\" ], whichFilter ) ) {\n\t\t\t\tthrow new Error( \"Invalid filter identifier supplied to reapplyFilter: \" + whichFilter );\n\t\t\t}\n\n\t\t\tswitch( whichFilter ) {\n\t\t\t\tcase \"visibleModels\":\n\t\t\t\t\t_this.viewManager.each( function( thisModelView ) {\n\t\t\t\t\t\tvar notVisible = _this.visibleModelsFilter && ! _this.visibleModelsFilter.call( _this, thisModelView.model );\n\n\t\t\t\t\t\tthisModelView.$el.toggleClass( \"not-visible\", notVisible );\n\t\t\t\t\t\tif( _this._modelViewHasWrapperLI( thisModelView ) ) {\n\t\t\t\t\t\t\tthisModelView.$el.closest( \"li\" ).toggleClass( \"not-visible\", notVisible ).toggle( ! notVisible );\n\t\t\t\t\t\t} else thisModelView.$el.toggle( ! notVisible );\n\t\t\t\t\t} );\n\n\t\t\t\t\tthis._showEmptyListCaptionIfAppropriate();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sortableModels\":\n\t\t\t\t\t_this.$el.sortable( \"destroy\" );\n\n\t\t\t\t\t_this.viewManager.each( function( thisModelView ) {\n\t\t\t\t\t\tvar notSortable = _this.sortableModelsFilter && ! _this.sortableModelsFilter.call( _this, thisModelView.model );\n\n\t\t\t\t\t\tthisModelView.$el.toggleClass( \"not-sortable\", notSortable );\n\t\t\t\t\t\tif( _this._modelViewHasWrapperLI( thisModelView ) ) {\n\t\t\t\t\t\t\tthisModelView.$el.closest( \"li\" ).toggleClass( \"not-sortable\", notSortable );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\t_this._setupSortable();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"selectableModels\":\n\t\t\t\t\t_this.viewManager.each( function( thisModelView ) {\n\t\t\t\t\t\tvar notSelectable = _this.selectableModelsFilter && ! _this.selectableModelsFilter.call( _this, thisModelView.model );\n\n\t\t\t\t\t\tthisModelView.$el.toggleClass( \"not-selectable\", notSelectable );\n\t\t\t\t\t\tif( _this._modelViewHasWrapperLI( thisModelView ) ) {\n\t\t\t\t\t\t\tthisModelView.$el.closest( \"li\" ).toggleClass( \"not-selectable\", notSelectable );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\t_this._validateSelection();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// A method to remove the view relating to model.\n\t\t_removeModelView : function( modelView ) {\n\t\t\tif( this.selectable ) this._saveSelection();\n\n\t\t\tthis.viewManager.remove( modelView ); // Remove the view from the viewManager\n\t\t\tif( this._modelViewHasWrapperLI( modelView ) ) modelView.$el.parent().remove(); // Remove the li wrapper from the DOM\n\t\t\tmodelView.remove(); // Remove the view from the DOM and stop listening to events\n\n\t\t\tif( this.selectable ) this._restoreSelection();\n\n\t\t\tthis._showEmptyListCaptionIfAppropriate();\n\t\t},\n\n\t\t_validateSelectionAndRender : function() {\n\t\t\tthis._validateSelection();\n\t\t\tthis.render();\n\t\t},\n\n\t\t_registerCollectionEvents : function() {\n\n\t\t\tthis.listenTo( this.collection, \"add\", function( model ) {\n\t\t\t\tvar modelView;\n\t\t\t\tif( this._hasBeenRendered ) {\n\t\t\t\t\tmodelView = this._createNewModelView( model, this._getModelViewOptions( model ) );\n\t\t\t\t\tthis._insertAndRenderModelView( modelView, this._getContainerEl(), this.collection.indexOf( model ) );\n\t\t\t\t}\n\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"add\", modelView );\n\t\t\t\telse this.trigger( \"add\", modelView );\n\t\t\t} );\n\n\t\t\tthis.listenTo( this.collection, \"remove\", function( model ) {\n\t\t\t\tvar modelView;\n\n\t\t\t\tif( this._hasBeenRendered ) {\n\t\t\t\t\tmodelView = this.viewManager.findByModelCid( model.cid );\n\t\t\t\t\tthis._removeModelView( modelView );\n\t\t\t\t}\n\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"remove\" );\n\t\t\t\telse this.trigger( \"remove\" );\n\t\t\t} );\n\n\t\t\tthis.listenTo( this.collection, \"reset\", function() {\n\t\t\t\tif( this._hasBeenRendered ) this.render();\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"reset\" );\n\t\t\t\telse this.trigger( \"reset\" );\n\t\t\t} );\n\n\t\t\t// we should not be listening to change events on the model as a default behavior. the models\n\t\t\t// should be responsible for re-rendering themselves if necessary, and if the collection does\n\t\t\t// also need to re-render as a result of a model change, this should be handled by overriding\n\t\t\t// this method. by default the collection view should not re-render in response to model changes\n\t\t\t// this.listenTo( this.collection, \"change\", function( model ) {\n\t\t\t// \tif( this._hasBeenRendered ) this.viewManager.findByModel( model ).render();\n\t\t\t// \tif( this._isBackboneCourierAvailable() )\n\t\t\t// \t\tthis.spawn( \"change\", { model : model } );\n\t\t\t// } );\n\n\t\t\tthis.listenTo( this.collection, \"sort\", function( collection, options ) {\n\t\t\t\tif( this._hasBeenRendered && ( options.add !== true || this.forceRerenderOnNextSortEvent ) ) this.render();\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"sort\" );\n\t\t\t\telse this.trigger( \"sort\" );\n\t\t\t} );\n\t\t},\n\n\t\t_getContainerEl : function() {\n\t\t\tif ( this._isRenderedAsTable() ) {\n\t\t\t\t// not all tables have a tbody, so we test\n\t\t\t\tvar tbody = this.$el.find( \"> tbody\" );\n\t\t\t\tif ( tbody.length > 0 )\n\t\t\t\t\treturn tbody;\n\t\t\t}\n\t\t\treturn this.$el;\n\t\t},\n\n\t\t_getClickedItemId : function( theEvent ) {\n\t\t\tvar clickedItemId = null;\n\n\t\t\t// important to use currentTarget as opposed to target, since we could be bubbling\n\t\t\t// an event that took place within another collectionList\n\t\t\tvar clickedItemEl = $( theEvent.currentTarget );\n\t\t\tif( clickedItemEl.closest( \".collection-view\" ).get(0) !== this.$el.get(0) ) return;\n\n\t\t\t// determine which list item was clicked. If we clicked in the blank area\n\t\t\t// underneath all the elements, we want to know that too, since in this\n\t\t\t// case we will want to deselect all elements. so check to see if the clicked\n\t\t\t// DOM element is the list itself to find that out.\n\t\t\tvar clickedItem = clickedItemEl.closest( \"[data-model-cid]\" );\n\t\t\tif( clickedItem.length > 0 )\n\t\t\t{\n\t\t\t\tclickedItemId = clickedItem.attr( \"data-model-cid\" );\n\t\t\t\tif( $.isNumeric( clickedItemId ) ) clickedItemId = parseInt( clickedItemId, 10 );\n\t\t\t}\n\n\t\t\treturn clickedItemId;\n\t\t},\n\n\t\t_updateItemTemplate : function() {\n\t\t\tvar itemTemplateHtml;\n\t\t\tif( this.itemTemplate )\n\t\t\t{\n\t\t\t\tif( $( this.itemTemplate ).length === 0 )\n\t\t\t\t\tthrow \"Could not find item template from selector: \" + this.itemTemplate;\n\n\t\t\t\titemTemplateHtml = $( this.itemTemplate ).html();\n\t\t\t}\n\t\t\telse\n\t\t\t\titemTemplateHtml = this.$( \".item-template\" ).html();\n\n\t\t\tif( itemTemplateHtml ) this.itemTemplateFunction = _.template( itemTemplateHtml );\n\n\t\t},\n\n\t\t_validateSelection : function() {\n\t\t\t// note can't use the collection's proxy to underscore because \"cid\" is not an attribute,\n\t\t\t// but an element of the model object itself.\n\t\t\tvar modelReferenceIds = _.pluck( this.collection.models, \"cid\" );\n\t\t\tthis.selectedItems = _.intersection( modelReferenceIds, this.selectedItems );\n\n\t\t\tif( _.isFunction( this.selectableModelsFilter ) )\n\t\t\t{\n\t\t\t\tthis.selectedItems = _.filter( this.selectedItems, function( thisItemId ) {\n\t\t\t\t\treturn this.selectableModelsFilter.call( this, this.collection.get( thisItemId ) );\n\t\t\t\t}, this );\n\t\t\t}\n\t\t},\n\n\t\t_saveSelection : function() {\n\t\t\t// save the current selection. use restoreSelection() to restore the selection to the state it was in the last time saveSelection() was called.\n\t\t\tif( ! this.selectable ) throw \"Attempt to save selection on non-selectable list\";\n\t\t\tthis.savedSelection = {\n\t\t\t\titems : _.clone( this.selectedItems ),\n\t\t\t\toffset : this.getSelectedModel( { by : \"offset\" } )\n\t\t\t};\n\t\t},\n\n\t\t_restoreSelection : function() {\n\t\t\tif( ! this.savedSelection ) throw \"Attempt to restore selection but no selection has been saved!\";\n\n\t\t\t// reset selectedItems to empty so that we \"redraw\" all \"selected\" classes\n\t\t\t// when we set our new selection. We do this because it is likely that our\n\t\t\t// contents have been refreshed, and we have thus lost all old \"selected\" classes.\n\t\t\tthis.setSelectedModels( [], { silent : true } );\n\n\t\t\tif( this.savedSelection.items.length > 0 )\n\t\t\t{\n\t\t\t\t// first try to restore the old selected items using their reference ids.\n\t\t\t\tthis.setSelectedModels( this.savedSelection.items, { by : \"cid\", silent : true } );\n\n\t\t\t\t// all the items with the saved reference ids have been removed from the list.\n\t\t\t\t// ok. try to restore the selection based on the offset that used to be selected.\n\t\t\t\t// this is the expected behavior after a item is deleted from a list (i.e. select\n\t\t\t\t// the line that immediately follows the deleted line).\n\t\t\t\tif( this.selectedItems.length === 0 )\n\t\t\t\t\tthis.setSelectedModel( this.savedSelection.offset, { by : \"offset\" } );\n\n\t\t\t\t// Trigger a selection changed if the previously selected items were not all found\n\t\t\t\tif (this.selectedItems.length !== this.savedSelection.items.length)\n\t\t\t\t{\n\t\t\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\t\t\tthis.spawn( \"selectionChanged\", {\n\t\t\t\t\t\t\tselectedModels : this.getSelectedModels(),\n\t\t\t\t\t\t\toldSelectedModels : []\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else this.trigger( \"selectionChanged\", this.getSelectedModels(), [] );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_addSelectedClassToSelectedItems : function( oldItemsIdsWithSelectedClass ) {\n\t\t\tif( _.isUndefined( oldItemsIdsWithSelectedClass ) ) oldItemsIdsWithSelectedClass = [];\n\n\t\t\t// oldItemsIdsWithSelectedClass is used for optimization purposes only. If this info is supplied then we\n\t\t\t// only have to add / remove the \"selected\" class from those items that \"selected\" state has changed.\n\n\t\t\tvar itemsIdsFromWhichSelectedClassNeedsToBeRemoved = oldItemsIdsWithSelectedClass;\n\t\t\titemsIdsFromWhichSelectedClassNeedsToBeRemoved = _.without( itemsIdsFromWhichSelectedClassNeedsToBeRemoved, this.selectedItems );\n\n\t\t\t_.each( itemsIdsFromWhichSelectedClassNeedsToBeRemoved, function( thisItemId ) {\n\t\t\t\tthis._getContainerEl().find( \"[data-model-cid=\" + thisItemId + \"]\" ).removeClass( \"selected\" );\n\n\t\t\t\tif( this._isRenderedAsList() ) {\n\t\t\t\t\tthis._getContainerEl().find( \"li[data-model-cid=\" + thisItemId + \"] > *\" ).removeClass( \"selected\" );\n\t\t\t\t}\n\t\t\t}, this );\n\n\t\t\tvar itemsIdsFromWhichSelectedClassNeedsToBeAdded = this.selectedItems;\n\t\t\titemsIdsFromWhichSelectedClassNeedsToBeAdded = _.without( itemsIdsFromWhichSelectedClassNeedsToBeAdded, oldItemsIdsWithSelectedClass );\n\n\t\t\t_.each( itemsIdsFromWhichSelectedClassNeedsToBeAdded, function( thisItemId ) {\n\t\t\t\tthis._getContainerEl().find( \"[data-model-cid=\" + thisItemId + \"]\" ).addClass( \"selected\" );\n\n\t\t\t\tif( this._isRenderedAsList() ) {\n\t\t\t\t\tthis._getContainerEl().find( \"li[data-model-cid=\" + thisItemId + \"] > *\" ).addClass( \"selected\" );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t},\n\n\t\t_reorderCollectionBasedOnHTML : function() {\n\n\t\t\tvar _this = this;\n\n\t\t\tthis._getContainerEl().children().each( function() {\n\t\t\t\tvar thisModelCid = $( this ).attr( \"data-model-cid\" );\n\n\t\t\t\tif( thisModelCid )\n\t\t\t\t{\n\t\t\t\t\t// remove the current model and then add it back (at the end of the collection).\n\t\t\t\t\t// When we are done looping through all models, they will be in the correct order.\n\t\t\t\t\tvar thisModel = _this.collection.get( thisModelCid );\n\t\t\t\t\tif( thisModel )\n\t\t\t\t\t{\n\t\t\t\t\t\t_this.collection.remove( thisModel, { silent : true } );\n\t\t\t\t\t\t_this.collection.add( thisModel, { silent : true, sort : ! _this.collection.comparator } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( this._isBackboneCourierAvailable() ) this.spawn( \"reorder\" );\n\t\t\telse this.collection.trigger( \"reorder\" );\n\n\t\t\tif( this.collection.comparator ) this.collection.sort();\n\n\t\t},\n\n\t\t_getModelViewConstructor : function( thisModel ) {\n\t\t\treturn this.modelView || mDefaultModelViewConstructor;\n\t\t},\n\n\t\t_getModelViewOptions : function( thisModel ) {\n\t\t\tvar modelViewOptions = this.modelViewOptions;\n\t\t\tif( _.isFunction( modelViewOptions ) ) modelViewOptions = modelViewOptions( thisModel );\n\n\t\t\treturn _.extend( { model : thisModel }, modelViewOptions );\n\t\t},\n\n\t\t_createNewModelView : function( model, modelViewOptions ) {\n\t\t\tvar modelViewConstructor = this._getModelViewConstructor( model );\n\t\t\tif( _.isUndefined( modelViewConstructor ) ) throw \"Could not find modelView constructor for model\";\n\n\t\t\tvar newModelView = new( modelViewConstructor )( modelViewOptions );\n\t\t\tnewModelView.collectionListView = newModelView.collectionView = this;  // collectionListView for legacy\n\n\t\t\treturn newModelView;\n\t\t},\n\n\t\t_wrapModelView : function( modelView ) {\n\t\t\tvar _this = this;\n\n\t\t\t// we use items client ids as opposed to real ids, since we may not have a representation\n\t\t\t// of these models on the server\n\t\t\tvar modelViewWrapperEl;\n\n\t\t\tif( this._isRenderedAsTable() ) {\n\t\t\t\t// if we are rendering the collection in a table, the template $el is a tr so we just need to set the data-model-cid\n\t\t\t\tmodelViewWrapperEl = modelView.$el;\n\t\t\t\tmodelView.$el.attr( \"data-model-cid\", modelView.model.cid );\n\t\t\t}\n\t\t\telse if( this._isRenderedAsList() ) {\n\t\t\t\t// if we are rendering the collection in a list, we need wrap each item in an <li></li> (if its not already an <li>)\n\t\t\t\t// and set the data-model-cid\n\t\t\t\tif( modelView.$el.is( \"li\" ) ) {\n\t\t\t\t\tmodelViewWrapperEl = modelView.$el;\n\t\t\t\t\tmodelView.$el.attr( \"data-model-cid\", modelView.model.cid );\n\t\t\t\t} else {\n\t\t\t\t\tmodelViewWrapperEl = modelView.$el.wrapAll( \"<li data-model-cid='\" + modelView.model.cid + \"'></li>\" ).parent();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( _.isFunction( this.sortableModelsFilter ) )\n\t\t\t\tif( ! this.sortableModelsFilter.call( _this, modelView.model ) ) {\n\t\t\t\t\tmodelViewWrapperEl.addClass( \"not-sortable\" );\n\t\t\t\t\tmodelView.$el.addClass( \"not-selectable\" );\n\t\t\t\t}\n\n\t\t\tif( _.isFunction( this.selectableModelsFilter ) )\n\t\t\t\tif( ! this.selectableModelsFilter.call( _this, modelView.model ) ) {\n\t\t\t\t\tmodelViewWrapperEl.addClass( \"not-selectable\" );\n\t\t\t\t\tmodelView.$el.addClass( \"not-selectable\" );\n\t\t\t\t}\n\n\t\t\treturn modelViewWrapperEl;\n\t\t},\n\n\t\t_convertStringsToInts : function( theArray ) {\n\t\t\treturn _.map( theArray, function( thisEl ) {\n\t\t\t\tif( ! _.isString( thisEl ) ) return thisEl;\n\t\t\t\tvar thisElAsNumber = parseInt( thisEl, 10 );\n\t\t\t\treturn( thisElAsNumber == thisEl ? thisElAsNumber : thisEl );\n\t\t\t} );\n\t\t},\n\n\t\t_containSameElements : function( arrayA, arrayB ) {\n\t\t\tif( arrayA.length != arrayB.length ) return false;\n\t\t\tvar intersectionSize = _.intersection( arrayA, arrayB ).length;\n\t\t\treturn intersectionSize == arrayA.length; // and must also equal arrayB.length, since arrayA.length == arrayB.length\n\t\t},\n\n\t\t_isRenderedAsTable : function() {\n\t\t\treturn this.$el.prop( \"tagName\" ).toLowerCase() === \"table\";\n\t\t},\n\n\t\t_isRenderedAsList : function() {\n\t\t\treturn ! this._isRenderedAsTable();\n\t\t},\n\n\t\t_modelViewHasWrapperLI : function( modelView ) {\n\t\t\treturn this._isRenderedAsList() && ! modelView.$el.is( \"li\" );\n\t\t},\n\n\t\t// Returns the wrapper HTML element for each visible modelView.\n\t\t// When rendering in a table context, the returned elements are the $el of each modelView.\n\t\t// When rendering in a list context,\n\t\t//   If the $el of the modelView is an <li>, the returned elements are the $el of each modelView.\n\t\t//   Otherwise, the returned elements are the <li>'s the collectionView wrapped around each modelView $el.\n\t\t_getVisibleItemEls : function() {\n\t\t\tvar itemElements = [];\n\t\t\titemElements = this._getContainerEl().find( \"> [data-model-cid]:not(.not-visible)\" );\n\n\t\t\treturn itemElements;\n\t\t},\n\n\t\t_charCodes : {\n\t\t\tupArrow : 38,\n\t\t\tdownArrow : 40\n\t\t},\n\n\t\t_isBackboneCourierAvailable : function() {\n\t\t\treturn !_.isUndefined( Backbone.Courier );\n\t\t},\n\n\t\t_setupSortable : function() {\n\t\t\tvar sortableOptions = _.extend( {\n\t\t\t\taxis : \"y\",\n\t\t\t\tdistance : 10,\n\t\t\t\tforcePlaceholderSize : true,\n\t\t\t\titems : this._isRenderedAsTable() ? \"> tbody > tr:not(.not-sortable)\" : \"> li:not(.not-sortable)\",\n\t\t\t\tstart : _.bind( this._sortStart, this ),\n\t\t\t\tchange : _.bind( this._sortChange, this ),\n\t\t\t\tstop : _.bind( this._sortStop, this ),\n\t\t\t\treceive : _.bind( this._receive, this ),\n\t\t\t\tover : _.bind( this._over, this )\n\t\t\t}, _.result( this, \"sortableOptions\" ) );\n\n\t\t\tthis.$el = this.$el.sortable( sortableOptions );\n\t\t\t//this.$el.sortable( \"enable\" ); // in case it was disabled previously\n\t\t},\n\n\t\t_sortStart : function( event, ui ) {\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"sortStart\", { modelBeingSorted : modelBeingSorted } );\n\t\t\telse this.trigger( \"sortStart\", modelBeingSorted );\n\t\t},\n\n\t\t_sortChange : function( event, ui ) {\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"sortChange\", { modelBeingSorted : modelBeingSorted } );\n\t\t\telse this.trigger( \"sortChange\", modelBeingSorted );\n\t\t},\n\n\t\t_sortStop : function( event, ui ) {\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\t\t\tvar modelViewContainerEl = this._getContainerEl();\n\t\t\tvar newIndex = modelViewContainerEl.children().index( ui.item );\n\n\t\t\tif( newIndex == -1 && modelBeingSorted ) {\n\t\t\t\t// the element was removed from this list. can happen if this sortable is connected\n\t\t\t\t// to another sortable, and the item was dropped into the other sortable.\n\t\t\t\tthis.collection.remove( modelBeingSorted );\n\t\t\t}\n\n\t\t\tif( ! modelBeingSorted ) return; // something is wacky. we don't mess with this case, preferring to guarantee that we can always provide a reference to the model\n\n\t\t\tthis._reorderCollectionBasedOnHTML();\n\t\t\tthis.updateDependentControls();\n\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"sortStop\", { modelBeingSorted : modelBeingSorted, newIndex : newIndex } );\n\t\t\telse this.trigger( \"sortStop\", modelBeingSorted, newIndex );\n\t\t},\n\n\t\t_receive : function( event, ui ) {\n\n\t\t\tvar senderListEl = ui.sender;\n\t\t\tvar senderCollectionListView = senderListEl.data( \"view\" );\n\t\t\tif( ! senderCollectionListView || ! senderCollectionListView.collection ) return;\n\n\t\t\tvar newIndex = this._getContainerEl().children().index( ui.item );\n\t\t\tvar modelReceived = senderCollectionListView.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\t\t\tsenderCollectionListView.collection.remove( modelReceived );\n\t\t\tthis.collection.add( modelReceived, { at : newIndex } );\n\t\t\tmodelReceived.collection = this.collection; // otherwise will not get properly set, since modelReceived.collection might already have a value.\n\t\t\tthis.setSelectedModel( modelReceived );\n\t\t},\n\n\t\t_over : function( event, ui ) {\n\t\t\t// when an item is being dragged into the sortable,\n\t\t\t// hide the empty list caption if it exists\n\t\t\tthis._getContainerEl().find( \"> var.empty-list-caption\" ).hide();\n\t\t},\n\n\t\t_onKeydown : function( event ) {\n\t\t\tif( ! this.processKeyEvents ) return true;\n\n\t\t\tvar trap = false;\n\n\t\t\tif( this.getSelectedModels( { by : \"offset\" } ).length == 1 )\n\t\t\t{\n\t\t\t\t// need to trap down and up arrows or else the browser\n\t\t\t\t// will end up scrolling a autoscroll div.\n\n\t\t\t\tvar currentOffset = this.getSelectedModel( { by : \"offset\" } );\n\t\t\t\tif( event.which === this._charCodes.upArrow && currentOffset !== 0 )\n\t\t\t\t{\n\t\t\t\t\tthis.setSelectedModel( currentOffset - 1, { by : \"offset\" } );\n\t\t\t\t\ttrap = true;\n\t\t\t\t}\n\t\t\t\telse if( event.which === this._charCodes.downArrow && currentOffset !== this.collection.length - 1 )\n\t\t\t\t{\n\t\t\t\t\tthis.setSelectedModel( currentOffset + 1, { by : \"offset\" } );\n\t\t\t\t\ttrap = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ! trap;\n\t\t},\n\n\t\t_listItem_onMousedown : function( theEvent ) {\n\t\t\tvar clickedItemId = this._getClickedItemId( theEvent );\n\n\t\t\tif( clickedItemId ) {\n\t\t\t\tvar clickedModel = this.collection.get( clickedItemId );\n\t\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tclickedModel : clickedModel,\n\t\t\t\t\t\tmetaKeyPressed : theEvent.ctrlKey || theEvent.metaKey\n\t\t\t\t\t};\n\n\t\t\t\t\t_.each( [ 'preventDefault', 'stopPropagation', 'stopImmediatePropagation' ], function( thisMethod ) {\n\t\t\t\t\t\tdata[ thisMethod ] = function() {\n\t\t\t\t\t\t\ttheEvent[ thisMethod ]();\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\n\t\t\t\t\tthis.spawn( \"click\", data );\n\t\t\t\t}\n\t\t\t\telse this.trigger( \"click\", clickedModel );\n\t\t\t}\n\n\t\t\tif( ! this.selectable || ! this.clickToSelect ) return;\n\n\t\t\tif( clickedItemId )\n\t\t\t{\n\t\t\t\t// Exit if an unselectable item was clicked\n\t\t\t\tif( _.isFunction( this.selectableModelsFilter ) &&\n\t\t\t\t\t! this.selectableModelsFilter.call( this, this.collection.get( clickedItemId ) ) )\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// a selectable list item was clicked\n\t\t\t\tif( this.selectMultiple && theEvent.shiftKey )\n\t\t\t\t{\n\t\t\t\t\tvar firstSelectedItemIndex = -1;\n\n\t\t\t\t\tif( this.selectedItems.length > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.collection.find( function( thisItemModel ) {\n\t\t\t\t\t\t\tfirstSelectedItemIndex++;\n\n\t\t\t\t\t\t\t// exit when we find our first selected element\n\t\t\t\t\t\t\treturn _.contains( this.selectedItems, thisItemModel.cid );\n\t\t\t\t\t\t}, this );\n\t\t\t\t\t}\n\n\t\t\t\t\tvar clickedItemIndex = -1;\n\t\t\t\t\tthis.collection.find( function( thisItemModel ) {\n\t\t\t\t\t\tclickedItemIndex++;\n\n\t\t\t\t\t\t// exit when we find the clicked element\n\t\t\t\t\t\treturn thisItemModel.cid == clickedItemId;\n\t\t\t\t\t}, this );\n\n\t\t\t\t\tvar shiftKeyRootSelectedItemIndex = firstSelectedItemIndex == -1 ? clickedItemIndex : firstSelectedItemIndex;\n\t\t\t\t\tvar minSelectedItemIndex = Math.min( clickedItemIndex, shiftKeyRootSelectedItemIndex );\n\t\t\t\t\tvar maxSelectedItemIndex = Math.max( clickedItemIndex, shiftKeyRootSelectedItemIndex );\n\n\t\t\t\t\tvar newSelectedItems = [];\n\t\t\t\t\tfor( var thisIndex = minSelectedItemIndex; thisIndex <= maxSelectedItemIndex; thisIndex ++ )\n\t\t\t\t\t\tnewSelectedItems.push( this.collection.at( thisIndex ).cid );\n\t\t\t\t\tthis.setSelectedModels( newSelectedItems, { by : \"cid\" } );\n\n\t\t\t\t\t// shift clicking will usually highlight selectable text, which we do not want.\n\t\t\t\t\t// this is a cross browser (hopefully) snippet that deselects all text selection.\n\t\t\t\t\tif( document.selection && document.selection.empty )\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\telse if(window.getSelection) {\n\t\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\t\tif( sel && sel.removeAllRanges )\n\t\t\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( ( this.selectMultiple || _.contains( this.selectedItems, clickedItemId ) ) && ( this.clickToToggle || theEvent.metaKey || theEvent.ctrlKey ) )\n\t\t\t\t{\n\t\t\t\t\tif( _.contains( this.selectedItems, clickedItemId ) )\n\t\t\t\t\t\tthis.setSelectedModels( _.without( this.selectedItems, clickedItemId ), { by : \"cid\" } );\n\t\t\t\t\telse this.setSelectedModels( _.union( this.selectedItems, [clickedItemId] ), { by : \"cid\" } );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.setSelectedModels( [ clickedItemId ], { by : \"cid\" } );\n\t\t\t}\n\t\t\telse\n\t\t\t\t// the blank area of the list was clicked\n\t\t\t\tthis.setSelectedModels( [] );\n\n\t\t},\n\n\t\t_listItem_onDoubleClick : function( theEvent ) {\n\n\t\t\tvar clickedItemId = this._getClickedItemId( theEvent );\n\n\t\t\tif( clickedItemId )\n\t\t\t{\n\t\t\t\tvar clickedModel = this.collection.get( clickedItemId );\n\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"doubleClick\", { clickedModel : clickedModel, metaKeyPressed : theEvent.ctrlKey || theEvent.metaKey } );\n\t\t\t\telse this.trigger( \"doubleClick\", clickedModel );\n\t\t\t}\n\t\t},\n\n\t\t_listBackground_onClick : function( theEvent ) {\n\t\t\tif( ! this.selectable || ! this.clickToSelect ) return;\n\t\t\tif( ! $( theEvent.target ).is( \".collection-view\" ) ) return;\n\n\t\t\tthis.setSelectedModels( [] );\n\t\t}\n\n\t}, {\n\t\tsetDefaultModelViewConstructor : function( theConstructor ) {\n\t\t\tmDefaultModelViewConstructor = theConstructor;\n\t\t}\n\t});\n\n\t/*\n\t* Backbone.ViewOptions, v0.2.4\n\t* Copyright (c)2014 Rotunda Software, LLC.\n\t* Distributed under MIT license\n\t* http://github.com/rotundasoftware/backbone.viewOptions\n\t*/\n\n\tBackbone.ViewOptions = {};\n\n\tBackbone.ViewOptions.add = function( view, optionsDeclarationsProperty ) {\n\t\tif( _.isUndefined( optionsDeclarationsProperty ) ) optionsDeclarationsProperty = \"options\";\n\n\t\t// ****************** Public methods added to view ******************\n\n\t\tview.setOptions = function( options ) {\n\t\t\tvar _this = this;\n\t\t\tvar optionsThatWereChanged = {};\n\t\t\tvar optionsThatWereChangedPreviousValues = {};\n\n\t\t\tvar optionDeclarations = _.result( this, optionsDeclarationsProperty );\n\n\t\t\tif( ! _.isUndefined( optionDeclarations ) ) {\n\t\t\t\tvar normalizedOptionDeclarations = _normalizeOptionDeclarations( optionDeclarations );\n\n\t\t\t\t_.each( normalizedOptionDeclarations, function( thisOptionProperties, thisOptionName ) {\n\t\t\t\t\tvar thisOptionRequired = thisOptionProperties.required;\n\t\t\t\t\tvar thisOptionDefaultValue = thisOptionProperties.defaultValue;\n\n\t\t\t\t\tif( thisOptionRequired ) {\n\t\t\t\t\t\t// note we do not throw an error if a required option is not supplied, but it is\n\t\t\t\t\t\t// found on the object itself (due to a prior call of view.setOptions, most likely)\n\n\t\t\t\t\t\tif( ( ! options || ! _.contains( _.keys( options ), thisOptionName ) ) && _.isUndefined( _this[ thisOptionName ] ) )\n\t\t\t\t\t\t\tthrow new Error( \"Required option \\\"\" + thisOptionName + \"\\\" was not supplied.\" );\n\n\t\t\t\t\t\tif( options && _.contains( _.keys( options ), thisOptionName ) && _.isUndefined( options[ thisOptionName ] ) )\n\t\t\t\t\t\t\tthrow new Error( \"Required option \\\"\" + thisOptionName + \"\\\" can not be set to undefined.\" );\n\t\t\t\t\t}\n\n\t\t\t\t\t// attach the supplied value of this option, or the appropriate default value, to the view object\n\t\t\t\t\tif( options && thisOptionName in options && ! _.isUndefined( options[ thisOptionName ] ) ) {\n\t\t\t\t\t\tvar oldValue = _this[ thisOptionName ];\n\t\t\t\t\t\tvar newValue = options[ thisOptionName ];\n\t\t\t\t\t\t// if this option already exists on the view, and the new value is different,\n\t\t\t\t\t\t// make a note that we will be changing it\n\t\t\t\t\t\tif( ! _.isUndefined( oldValue ) && oldValue !== newValue ) {\n\t\t\t\t\t\t\toptionsThatWereChangedPreviousValues[ thisOptionName ] = oldValue;\n\t\t\t\t\t\t\toptionsThatWereChanged[ thisOptionName ] = newValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_this[ thisOptionName ] = newValue;\n\t\t\t\t\t\t// note we do NOT delete the option off the options object here so that\n\t\t\t\t\t\t// multiple views can be passed the same options object without issue.\n\t\t\t\t\t}\n\t\t\t\t\telse if( _.isUndefined( _this[ thisOptionName ] ) ) {\n\t\t\t\t\t\t// note defaults do not write over any existing properties on the view itself.\n\t\t\t\t\t\t_this[ thisOptionName ] = thisOptionDefaultValue;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif( _.keys( optionsThatWereChanged ).length > 0 ) {\n\t\t\t\tif( _.isFunction( _this.onOptionsChanged ) )\n\t\t\t\t\t_this.onOptionsChanged( optionsThatWereChanged, optionsThatWereChangedPreviousValues );\n\t\t\t\telse if( _.isFunction( _this._onOptionsChanged ) )\n\t\t\t\t\t_this._onOptionsChanged( optionsThatWereChanged, optionsThatWereChangedPreviousValues );\n\t\t\t}\n\t\t};\n\n\t\tview.getOptions = function() {\n\t\t\tvar optionDeclarations = _.result( this, optionsDeclarationsProperty );\n\t\t\tif( _.isUndefined( optionDeclarations ) ) return {};\n\n\t\t\tvar normalizedOptionDeclarations = _normalizeOptionDeclarations( optionDeclarations );\n\t\t\tvar optionsNames = _.keys( normalizedOptionDeclarations );\n\n\t\t\treturn _.pick( this, optionsNames );\n\t\t};\n\t};\n\n\t// ****************** Private Utility Functions ******************\n\n\tfunction _normalizeOptionDeclarations( optionDeclarations ) {\n\t\t// convert our short-hand option syntax (with exclamation marks, etc.)\n\t\t// to a simple array of standard option declaration objects.\n\n\t\tvar normalizedOptionDeclarations = {};\n\n\t\tif( ! _.isArray( optionDeclarations ) ) throw new Error( \"Option declarations must be an array.\" );\n\n\t\t_.each( optionDeclarations, function( thisOptionDeclaration ) {\n\t\t\tvar thisOptionName, thisOptionRequired, thisOptionDefaultValue;\n\n\t\t\tthisOptionRequired = false;\n\t\t\tthisOptionDefaultValue = undefined;\n\n\t\t\tif( _.isString( thisOptionDeclaration ) )\n\t\t\t\tthisOptionName = thisOptionDeclaration;\n\t\t\telse if( _.isObject( thisOptionDeclaration ) ) {\n\t\t\t\tthisOptionName = _.first( _.keys( thisOptionDeclaration ) );\n\t\t\t\tif( _.isFunction( thisOptionDeclaration[ thisOptionName ] ) )\n\t\t\t\t\tthisOptionDefaultValue = thisOptionDeclaration[ thisOptionName ];\n\t\t\t\telse\n\t\t\t\t\tthisOptionDefaultValue = _.clone( thisOptionDeclaration[ thisOptionName ] );\n\t\t\t}\n\t\t\telse throw new Error( \"Each element in the option declarations array must be either a string or an object.\" );\n\n\t\t\tif( thisOptionName[ thisOptionName.length - 1 ] === \"!\" ) {\n\t\t\t\tthisOptionRequired = true;\n\t\t\t\tthisOptionName = thisOptionName.slice( 0, thisOptionName.length - 1 );\n\t\t\t}\n\n\t\t\tnormalizedOptionDeclarations[ thisOptionName ] = normalizedOptionDeclarations[ thisOptionName ] || {};\n\t\t\tnormalizedOptionDeclarations[ thisOptionName ].required = thisOptionRequired;\n\t\t\tif( ! _.isUndefined( thisOptionDefaultValue ) ) normalizedOptionDeclarations[ thisOptionName ].defaultValue = thisOptionDefaultValue;\n\t\t} );\n\n\t\treturn normalizedOptionDeclarations;\n\t}\n\n\n\t// Backbone.BabySitter\n\t// -------------------\n\t// v0.0.6\n\t//\n\t// Copyright (c)2013 Derick Bailey, Muted Solutions, LLC.\n\t// Distributed under MIT license\n\t//\n\t// http://github.com/babysitterjs/backbone.babysitter\n\n\t// Backbone.ChildViewContainer\n\t// ---------------------------\n\t//\n\t// Provide a container to store, retrieve and\n\t// shut down child views.\n\n\tChildViewContainer = (function(Backbone, _){\n\n\t\t// Container Constructor\n\t\t// ---------------------\n\n\t\tvar Container = function(views){\n\t\t\tthis._views = {};\n\t\t\tthis._indexByModel = {};\n\t\t\tthis._indexByCustom = {};\n\t\t\tthis._updateLength();\n\n\t\t\t_.each(views, this.add, this);\n\t\t};\n\n\t\t// Container Methods\n\t\t// -----------------\n\n\t\t_.extend(Container.prototype, {\n\n\t\t\t// Add a view to this container. Stores the view\n\t\t\t// by `cid` and makes it searchable by the model\n\t\t\t// cid (and model itself). Optionally specify\n\t\t\t// a custom key to store an retrieve the view.\n\t\t\tadd: function(view, customIndex){\n\t\t\t\tvar viewCid = view.cid;\n\n\t\t\t\t// store the view\n\t\t\t\tthis._views[viewCid] = view;\n\n\t\t\t\t// index it by model\n\t\t\t\tif (view.model){\n\t\t\t\t\tthis._indexByModel[view.model.cid] = viewCid;\n\t\t\t\t}\n\n\t\t\t\t// index by custom\n\t\t\t\tif (customIndex){\n\t\t\t\t\tthis._indexByCustom[customIndex] = viewCid;\n\t\t\t\t}\n\n\t\t\t\tthis._updateLength();\n\t\t\t},\n\n\t\t\t// Find a view by the model that was attached to\n\t\t\t// it. Uses the model's `cid` to find it.\n\t\t\tfindByModel: function(model){\n\t\t\t\treturn this.findByModelCid(model.cid);\n\t\t\t},\n\n\t\t\t// Find a view by the `cid` of the model that was attached to\n\t\t\t// it. Uses the model's `cid` to find the view `cid` and\n\t\t\t// retrieve the view using it.\n\t\t\tfindByModelCid: function(modelCid){\n\t\t\t\tvar viewCid = this._indexByModel[modelCid];\n\t\t\t\treturn this.findByCid(viewCid);\n\t\t\t},\n\n\t\t\t// Find a view by a custom indexer.\n\t\t\tfindByCustom: function(index){\n\t\t\t\tvar viewCid = this._indexByCustom[index];\n\t\t\t\treturn this.findByCid(viewCid);\n\t\t\t},\n\n\t\t\t// Find by index. This is not guaranteed to be a\n\t\t\t// stable index.\n\t\t\tfindByIndex: function(index){\n\t\t\t\treturn _.values(this._views)[index];\n\t\t\t},\n\n\t\t\t// retrieve a view by it's `cid` directly\n\t\t\tfindByCid: function(cid){\n\t\t\t\treturn this._views[cid];\n\t\t\t},\n\n\t\t\tfindIndexByCid : function( cid ) {\n\t\t\t\tvar index = -1;\n\t\t\t\tvar view = _.find( this._views, function ( view ) {\n\t\t\t\t\tindex++;\n\t\t\t\t\tif( view.model.cid == cid )\n\t\t\t\t\t\treturn view;\n\t\t\t\t} );\n\t\t\t\treturn ( view ) ? index : -1;\n\t\t\t},\n\n\t\t\t// Remove a view\n\t\t\tremove: function(view){\n\t\t\t\tvar viewCid = view.cid;\n\n\t\t\t\t// delete model index\n\t\t\t\tif (view.model){\n\t\t\t\t\tdelete this._indexByModel[view.model.cid];\n\t\t\t\t}\n\n\t\t\t\t// delete custom index\n\t\t\t\t_.any(this._indexByCustom, function(cid, key) {\n\t\t\t\t\tif (cid === viewCid) {\n\t\t\t\t\t\tdelete this._indexByCustom[key];\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\t// remove the view from the container\n\t\t\t\tdelete this._views[viewCid];\n\n\t\t\t\t// update the length\n\t\t\t\tthis._updateLength();\n\t\t\t},\n\n\t\t\t// Call a method on every view in the container,\n\t\t\t// passing parameters to the call method one at a\n\t\t\t// time, like `function.call`.\n\t\t\tcall: function(method){\n\t\t\t\tthis.apply(method, _.tail(arguments));\n\t\t\t},\n\n\t\t\t// Apply a method on every view in the container,\n\t\t\t// passing parameters to the call method one at a\n\t\t\t// time, like `function.apply`.\n\t\t\tapply: function(method, args){\n\t\t\t\t_.each(this._views, function(view){\n\t\t\t\t\tif (_.isFunction(view[method])){\n\t\t\t\t\t\tview[method].apply(view, args || []);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// Update the `.length` attribute on this container\n\t\t\t_updateLength: function(){\n\t\t\t\tthis.length = _.size(this._views);\n\t\t\t}\n\t\t});\n\n\t\t// Borrowing this code from Backbone.Collection:\n\t\t// http://backbonejs.org/docs/backbone.html#section-106\n\t\t//\n\t\t// Mix in methods from Underscore, for iteration, and other\n\t\t// collection related features.\n\t\tvar methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n\t\t\t       'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n\t\t\t       'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n\t\t\t       'last', 'without', 'isEmpty', 'pluck'];\n\n\t\t_.each(methods, function(method) {\n\t\t\tContainer.prototype[method] = function() {\n\t\t\t\tvar views = _.values(this._views);\n\t\t\t\tvar args = [views].concat(_.toArray(arguments));\n\t\t\t\treturn _[method].apply(_, args);\n\t\t\t};\n\t\t});\n\n\t\t// return the public API\n\t\treturn Container;\n\t})(Backbone, _);\n\n\treturn Backbone.CollectionView;\n} ) );\n\n","/**\n * Backbone Forms v0.14.0\n *\n * NOTE:\n * This version is for use with RequireJS\n * If using regular <script> tags to include your files, use backbone-forms.min.js\n *\n * Copyright (c) 2013 Charles Davison, Pow Media Ltd\n *\n * License and more information at:\n * http://github.com/powmedia/backbone-forms\n */\ndefine('../vendor/backbone-forms',['jquery', 'underscore', 'backbone'], function($, _, Backbone) {\n\n  //==================================================================================================\n//FORM\n//==================================================================================================\n\nvar Form = Backbone.View.extend({\n\n  events: {\n    'submit': function(event) {\n      this.trigger('submit', event);\n    }\n  },\n\n  /**\n   * Constructor\n   *\n   * @param {Object} [options.schema]\n   * @param {Backbone.Model} [options.model]\n   * @param {Object} [options.data]\n   * @param {String[]|Object[]} [options.fieldsets]\n   * @param {String[]} [options.fields]\n   * @param {String} [options.idPrefix]\n   * @param {Form.Field} [options.Field]\n   * @param {Form.Fieldset} [options.Fieldset]\n   * @param {Function} [options.template]\n   * @param {Boolean|String} [options.submitButton]\n   */\n  initialize: function(options) {\n    var self = this;\n\n    //Merge default options\n    options = this.options = _.extend({\n      submitButton: false\n    }, options);\n\n    //Find the schema to use\n    var schema = this.schema = (function() {\n      //Prefer schema from options\n      if (options.schema) return _.result(options, 'schema');\n\n      //Then schema on model\n      var model = options.model;\n      if (model && model.schema) return _.result(model, 'schema');\n\n      //Then built-in schema\n      if (self.schema) return _.result(self, 'schema');\n\n      //Fallback to empty schema\n      return {};\n    })();\n\n    //Store important data\n    _.extend(this, _.pick(options, 'model', 'data', 'idPrefix', 'templateData'));\n\n    //Override defaults\n    var constructor = this.constructor;\n    this.template = options.template || this.template || constructor.template;\n    this.Fieldset = options.Fieldset || this.Fieldset || constructor.Fieldset;\n    this.Field = options.Field || this.Field || constructor.Field;\n    this.NestedField = options.NestedField || this.NestedField || constructor.NestedField;\n\n    //Check which fields will be included (defaults to all)\n    var selectedFields = this.selectedFields = options.fields || _.keys(schema);\n\n    //Create fields\n    var fields = this.fields = {};\n\n    _.each(selectedFields, function(key) {\n      var fieldSchema = schema[key];\n      fields[key] = this.createField(key, fieldSchema);\n    }, this);\n\n    //Create fieldsets\n    var fieldsetSchema = options.fieldsets || _.result(this, 'fieldsets') || _.result(this.model, 'fieldsets') || [selectedFields],\n        fieldsets = this.fieldsets = [];\n\n    _.each(fieldsetSchema, function(itemSchema) {\n      this.fieldsets.push(this.createFieldset(itemSchema));\n    }, this);\n  },\n\n  /**\n   * Creates a Fieldset instance\n   *\n   * @param {String[]|Object[]} schema       Fieldset schema\n   *\n   * @return {Form.Fieldset}\n   */\n  createFieldset: function(schema) {\n    var options = {\n      schema: schema,\n      fields: this.fields,\n      legend: schema.legend || null\n    };\n\n    return new this.Fieldset(options);\n  },\n\n  /**\n   * Creates a Field instance\n   *\n   * @param {String} key\n   * @param {Object} schema       Field schema\n   *\n   * @return {Form.Field}\n   */\n  createField: function(key, schema) {\n    var options = {\n      form: this,\n      key: key,\n      schema: schema,\n      idPrefix: this.idPrefix\n    };\n\n    if (this.model) {\n      options.model = this.model;\n    } else if (this.data) {\n      options.value = this.data[key];\n    } else {\n      options.value = undefined;\n    }\n\n    var field = new this.Field(options);\n\n    this.listenTo(field.editor, 'all', this.handleEditorEvent);\n\n    return field;\n  },\n\n  /**\n   * Callback for when an editor event is fired.\n   * Re-triggers events on the form as key:event and triggers additional form-level events\n   *\n   * @param {String} event\n   * @param {Editor} editor\n   */\n  handleEditorEvent: function(event, editor) {\n    //Re-trigger editor events on the form\n    var formEvent = editor.key+':'+event;\n\n    this.trigger.call(this, formEvent, this, editor, Array.prototype.slice.call(arguments, 2));\n\n    //Trigger additional events\n    switch (event) {\n      case 'change':\n        this.trigger('change', this);\n        break;\n\n      case 'focus':\n        if (!this.hasFocus) this.trigger('focus', this);\n        break;\n\n      case 'blur':\n        if (this.hasFocus) {\n          //TODO: Is the timeout etc needed?\n          var self = this;\n          setTimeout(function() {\n            var focusedField = _.find(self.fields, function(field) {\n              return field.editor.hasFocus;\n            });\n\n            if (!focusedField) self.trigger('blur', self);\n          }, 0);\n        }\n        break;\n    }\n  },\n\n  templateData: function() {\n    var options = this.options;\n\n    return {\n      submitButton: options.submitButton\n    }\n  },\n\n  render: function() {\n    var self = this,\n        fields = this.fields,\n        $ = Backbone.$;\n\n    //Render form\n    var $form = $($.trim(this.template(_.result(this, 'templateData'))));\n\n    //Render standalone editors\n    $form.find('[data-editors]').add($form).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-editors');\n\n      if (_.isUndefined(selection)) return;\n\n      //Work out which fields to include\n      var keys = (selection == '*')\n        ? self.selectedFields || _.keys(fields)\n        : selection.split(',');\n\n      //Add them\n      _.each(keys, function(key) {\n        var field = fields[key];\n\n        $container.append(field.editor.render().el);\n      });\n    });\n\n    //Render standalone fields\n    $form.find('[data-fields]').add($form).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-fields');\n\n      if (_.isUndefined(selection)) return;\n\n      //Work out which fields to include\n      var keys = (selection == '*')\n        ? self.selectedFields || _.keys(fields)\n        : selection.split(',');\n\n      //Add them\n      _.each(keys, function(key) {\n        var field = fields[key];\n\n        $container.append(field.render().el);\n      });\n    });\n\n    //Render fieldsets\n    $form.find('[data-fieldsets]').add($form).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-fieldsets');\n\n      if (_.isUndefined(selection)) return;\n\n      _.each(self.fieldsets, function(fieldset) {\n        $container.append(fieldset.render().el);\n      });\n    });\n\n    //Set the main element\n    this.setElement($form);\n\n    //Set class\n    $form.addClass(this.className);\n\n    //Set attributes\n    if (this.attributes) {\n      $form.attr(this.attributes)\n    }\n\n    return this;\n  },\n\n  /**\n   * Validate the data\n   *\n   * @return {Object}       Validation errors\n   */\n  validate: function(options) {\n    var self = this,\n        fields = this.fields,\n        model = this.model,\n        errors = {};\n\n    options = options || {};\n\n    //Collect errors from schema validation\n    _.each(fields, function(field) {\n      var error = field.validate();\n      if (error) {\n        errors[field.key] = error;\n      }\n    });\n\n    //Get errors from default Backbone model validator\n    if (!options.skipModelValidate && model && model.validate) {\n      var modelErrors = model.validate(this.getValue());\n\n      if (modelErrors) {\n        var isDictionary = _.isObject(modelErrors) && !_.isArray(modelErrors);\n\n        //If errors are not in object form then just store on the error object\n        if (!isDictionary) {\n          errors._others = errors._others || [];\n          errors._others.push(modelErrors);\n        }\n\n        //Merge programmatic errors (requires model.validate() to return an object e.g. { fieldKey: 'error' })\n        if (isDictionary) {\n          _.each(modelErrors, function(val, key) {\n            //Set error on field if there isn't one already\n            if (fields[key] && !errors[key]) {\n              fields[key].setError(val);\n              errors[key] = val;\n            }\n\n            else {\n              //Otherwise add to '_others' key\n              errors._others = errors._others || [];\n              var tmpErr = {};\n              tmpErr[key] = val;\n              errors._others.push(tmpErr);\n            }\n          });\n        }\n      }\n    }\n\n    return _.isEmpty(errors) ? null : errors;\n  },\n\n  /**\n   * Update the model with all latest values.\n   *\n   * @param {Object} [options]  Options to pass to Model#set (e.g. { silent: true })\n   *\n   * @return {Object}  Validation errors\n   */\n  commit: function(options) {\n    //Validate\n    options = options || {};\n\n    var validateOptions = {\n        skipModelValidate: !options.validate\n    };\n\n    var errors = this.validate(validateOptions);\n    if (errors) return errors;\n\n    //Commit\n    var modelError;\n\n    var setOptions = _.extend({\n      error: function(model, e) {\n        modelError = e;\n      }\n    }, options);\n\n    this.model.set(this.getValue(), setOptions);\n\n    if (modelError) return modelError;\n  },\n\n  /**\n   * Get all the field values as an object.\n   * Use this method when passing data instead of objects\n   *\n   * @param {String} [key]    Specific field value to get\n   */\n  getValue: function(key) {\n    //Return only given key if specified\n    if (key) return this.fields[key].getValue();\n\n    //Otherwise return entire form\n    var values = {};\n    _.each(this.fields, function(field) {\n      values[field.key] = field.getValue();\n    });\n\n    return values;\n  },\n\n  /**\n   * Update field values, referenced by key\n   *\n   * @param {Object|String} key     New values to set, or property to set\n   * @param val                     Value to set\n   */\n  setValue: function(prop, val) {\n    var data = {};\n    if (typeof prop === 'string') {\n      data[prop] = val;\n    } else {\n      data = prop;\n    }\n\n    var key;\n    for (key in this.schema) {\n      if (data[key] !== undefined) {\n        this.fields[key].setValue(data[key]);\n      }\n    }\n  },\n\n  /**\n   * Returns the editor for a given field key\n   *\n   * @param {String} key\n   *\n   * @return {Editor}\n   */\n  getEditor: function(key) {\n    var field = this.fields[key];\n    if (!field) throw new Error('Field not found: '+key);\n\n    return field.editor;\n  },\n\n  /**\n   * Gives the first editor in the form focus\n   */\n  focus: function() {\n    if (this.hasFocus) return;\n\n    //Get the first field\n    var fieldset = this.fieldsets[0],\n        field = fieldset.getFieldAt(0);\n\n    if (!field) return;\n\n    //Set focus\n    field.editor.focus();\n  },\n\n  /**\n   * Removes focus from the currently focused editor\n   */\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    var focusedField = _.find(this.fields, function(field) {\n      return field.editor.hasFocus;\n    });\n\n    if (focusedField) focusedField.editor.blur();\n  },\n\n  /**\n   * Manages the hasFocus property\n   *\n   * @param {String} event\n   */\n  trigger: function(event) {\n    if (event === 'focus') {\n      this.hasFocus = true;\n    }\n    else if (event === 'blur') {\n      this.hasFocus = false;\n    }\n\n    return Backbone.View.prototype.trigger.apply(this, arguments);\n  },\n\n  /**\n   * Override default remove function in order to remove embedded views\n   *\n   * TODO: If editors are included directly with data-editors=\"x\", they need to be removed\n   * May be best to use XView to manage adding/removing views\n   */\n  remove: function() {\n    _.each(this.fieldsets, function(fieldset) {\n      fieldset.remove();\n    });\n\n    _.each(this.fields, function(field) {\n      field.remove();\n    });\n\n    return Backbone.View.prototype.remove.apply(this, arguments);\n  }\n\n}, {\n    editors: {}\n\n});\n\n//Statics to add on after Form is declared\nForm.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n};\n\nForm.template = _.template('\\\n    <form>\\\n     <div data-fieldsets></div>\\\n      <% if (submitButton) { %>\\\n        <button type=\"submit\"><%= submitButton %></button>\\\n      <% } %>\\\n    </form>\\\n  ', null, Form.templateSettings);\n\n\n//==================================================================================================\n//VALIDATORS\n//==================================================================================================\n\nForm.validators = (function() {\n\n  var validators = {};\n\n  validators.errMessages = {\n    required: 'Required',\n    regexp: 'Invalid',\n    number: 'Must be a number',\n    range: _.template('Must be a number between <%= min %> and <%= max %>', null, Form.templateSettings),\n    email: 'Invalid email address',\n    url: 'Invalid URL',\n    match: _.template('Must match field \"<%= field %>\"', null, Form.templateSettings)\n  };\n\n  validators.required = function(options) {\n    options = _.extend({\n      type: 'required',\n      message: this.errMessages.required\n    }, options);\n\n    return function required(value) {\n      options.value = value;\n\n      var err = {\n        type: options.type,\n        message: _.isFunction(options.message) ? options.message(options) : options.message\n      };\n\n      if (value === null || value === undefined || value === false || value === '' || $.trim(value) === '' ) return err;\n    };\n  };\n\n  validators.regexp = function(options) {\n    if (!options.regexp) throw new Error('Missing required \"regexp\" option for \"regexp\" validator');\n\n    options = _.extend({\n      type: 'regexp',\n      match: true,\n      message: this.errMessages.regexp\n    }, options);\n\n    return function regexp(value) {\n      options.value = value;\n\n      var err = {\n        type: options.type,\n        message: _.isFunction(options.message) ? options.message(options) : options.message\n      };\n\n      //Don't check empty values (add a 'required' validator for this)\n      if (value === null || value === undefined || value === '') return;\n\n      //Create RegExp from string if it's valid\n      if ('string' === typeof options.regexp) options.regexp = new RegExp(options.regexp, options.flags);\n\n      if ((options.match) ? !options.regexp.test(value) : options.regexp.test(value)) return err;\n    };\n  };\n\n  validators.number = function(options) {\n    options = _.extend({\n      type: 'number',\n      message: this.errMessages.number,\n      regexp: /^[-+]?([0-9]*.[0-9]+|[0-9]+)$/\n    }, options);\n\n    return validators.regexp(options);\n  };\n\n  validators.range = function(options) {\n    options = _.extend({\n      type: 'range',\n      message: this.errMessages.range,\n      numberMessage: this.errMessages.number,\n      min: 0,\n      max: 100\n    }, options);\n\n    return function range(value) {\n      options.value = value;\n      var err = {\n        type: options.type,\n        message: _.isFunction(options.message) ? options.message(options) : options.message\n      };\n\n      //Don't check empty values (add a 'required' validator for this)\n      if (value === null || value === undefined || value === '') return;\n\n      // check value is a number\n      var numberCheck = validators.number({message: options.numberMessage})(value);\n      if (numberCheck) return numberCheck;\n\n      // check value is in range\n      var number = parseFloat(options.value);\n      if (number < options.min || number > options.max) return err;\n    }\n  }\n\n  validators.email = function(options) {\n    options = _.extend({\n      type: 'email',\n      message: this.errMessages.email,\n      regexp: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i\n    }, options);\n\n    return validators.regexp(options);\n  };\n\n  validators.url = function(options) {\n    options = _.extend({\n      type: 'url',\n      message: this.errMessages.url,\n      regexp: /^((http|https):\\/\\/)?(([A-Z0-9][A-Z0-9_\\-]*)(\\.[A-Z0-9][A-Z0-9_\\-]*)+)(:(\\d+))?\\/?/i\n    }, options);\n\n    return validators.regexp(options);\n  };\n\n  validators.match = function(options) {\n    if (!options.field) throw new Error('Missing required \"field\" options for \"match\" validator');\n\n    options = _.extend({\n      type: 'match',\n      message: this.errMessages.match\n    }, options);\n\n    return function match(value, attrs) {\n      options.value = value;\n\n      var err = {\n        type: options.type,\n        message: _.isFunction(options.message) ? options.message(options) : options.message\n      };\n\n      //Don't check empty values (add a 'required' validator for this)\n      if (value === null || value === undefined || value === '') return;\n\n      if (value !== attrs[options.field]) return err;\n    };\n  };\n\n\n  return validators;\n\n})();\n\n\n//==================================================================================================\n//FIELDSET\n//==================================================================================================\n\nForm.Fieldset = Backbone.View.extend({\n\n  /**\n   * Constructor\n   *\n   * Valid fieldset schemas:\n   *   ['field1', 'field2']\n   *   { legend: 'Some Fieldset', fields: ['field1', 'field2'] }\n   *\n   * @param {String[]|Object[]} options.schema      Fieldset schema\n   * @param {Object} options.fields           Form fields\n   */\n  initialize: function(options) {\n    options = options || {};\n\n    //Create the full fieldset schema, merging defaults etc.\n    var schema = this.schema = this.createSchema(options.schema);\n\n    //Store the fields for this fieldset\n    this.fields = _.pick(options.fields, schema.fields);\n\n    //Override defaults\n    this.template = options.template || schema.template || this.template || this.constructor.template;\n  },\n\n  /**\n   * Creates the full fieldset schema, normalising, merging defaults etc.\n   *\n   * @param {String[]|Object[]} schema\n   *\n   * @return {Object}\n   */\n  createSchema: function(schema) {\n    //Normalise to object\n    if (_.isArray(schema)) {\n      schema = { fields: schema };\n    }\n\n    //Add null legend to prevent template error\n    schema.legend = schema.legend || null;\n\n    return schema;\n  },\n\n  /**\n   * Returns the field for a given index\n   *\n   * @param {Number} index\n   *\n   * @return {Field}\n   */\n  getFieldAt: function(index) {\n    var key = this.schema.fields[index];\n\n    return this.fields[key];\n  },\n\n  /**\n   * Returns data to pass to template\n   *\n   * @return {Object}\n   */\n  templateData: function() {\n    return this.schema;\n  },\n\n  /**\n   * Renders the fieldset and fields\n   *\n   * @return {Fieldset} this\n   */\n  render: function() {\n    var schema = this.schema,\n        fields = this.fields,\n        $ = Backbone.$;\n\n    //Render fieldset\n    var $fieldset = $($.trim(this.template(_.result(this, 'templateData'))));\n\n    //Render fields\n    $fieldset.find('[data-fields]').add($fieldset).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-fields');\n\n      if (_.isUndefined(selection)) return;\n\n      _.each(fields, function(field) {\n        $container.append(field.render().el);\n      });\n    });\n\n    this.setElement($fieldset);\n\n    return this;\n  },\n\n  /**\n   * Remove embedded views then self\n   */\n  remove: function() {\n    _.each(this.fields, function(field) {\n      field.remove();\n    });\n\n    Backbone.View.prototype.remove.call(this);\n  }\n\n}, {\n  //STATICS\n\n  template: _.template('\\\n    <fieldset data-fields>\\\n      <% if (legend) { %>\\\n        <legend><%= legend %></legend>\\\n      <% } %>\\\n    </fieldset>\\\n  ', null, Form.templateSettings)\n\n});\n\n\n//==================================================================================================\n//FIELD\n//==================================================================================================\n\nForm.Field = Backbone.View.extend({\n\n  /**\n   * Constructor\n   *\n   * @param {Object} options.key\n   * @param {Object} options.form\n   * @param {Object} [options.schema]\n   * @param {Function} [options.schema.template]\n   * @param {Backbone.Model} [options.model]\n   * @param {Object} [options.value]\n   * @param {String} [options.idPrefix]\n   * @param {Function} [options.template]\n   * @param {Function} [options.errorClassName]\n   */\n  initialize: function(options) {\n    options = options || {};\n\n    //Store important data\n    _.extend(this, _.pick(options, 'form', 'key', 'model', 'value', 'idPrefix'));\n\n    //Create the full field schema, merging defaults etc.\n    var schema = this.schema = this.createSchema(options.schema);\n\n    //Override defaults\n    this.template = options.template || schema.template || this.template || this.constructor.template;\n    this.errorClassName = options.errorClassName || schema.errorClassName || this.errorClassName || this.constructor.errorClassName;\n\n    //Create editor\n    this.editor = this.createEditor();\n  },\n\n  /**\n   * Creates the full field schema, merging defaults etc.\n   *\n   * @param {Object|String} schema\n   *\n   * @return {Object}\n   */\n  createSchema: function(schema) {\n    if (_.isString(schema)) schema = { type: schema };\n\n    //Set defaults\n    schema = _.extend({\n      type: 'Text',\n      title: this.createTitle()\n    }, schema);\n\n    //Get the real constructor function i.e. if type is a string such as 'Text'\n    schema.type = (_.isString(schema.type)) ? Form.editors[schema.type] : schema.type;\n\n    return schema;\n  },\n\n  /**\n   * Creates the editor specified in the schema; either an editor string name or\n   * a constructor function\n   *\n   * @return {View}\n   */\n  createEditor: function() {\n    var options = _.extend(\n      _.pick(this, 'schema', 'form', 'key', 'model', 'value'),\n      { id: this.createEditorId() }\n    );\n\n    var constructorFn = this.schema.type;\n\n    return new constructorFn(options);\n  },\n\n  /**\n   * Creates the ID that will be assigned to the editor\n   *\n   * @return {String}\n   */\n  createEditorId: function() {\n    var prefix = this.idPrefix,\n        id = this.key;\n\n    //Replace periods with underscores (e.g. for when using paths)\n    id = id.replace(/\\./g, '_');\n\n    //If a specific ID prefix is set, use it\n    if (_.isString(prefix) || _.isNumber(prefix)) return prefix + id;\n    if (_.isNull(prefix)) return id;\n\n    //Otherwise, if there is a model use it's CID to avoid conflicts when multiple forms are on the page\n    if (this.model) return this.model.cid + '_' + id;\n\n    return id;\n  },\n\n  /**\n   * Create the default field title (label text) from the key name.\n   * (Converts 'camelCase' to 'Camel Case')\n   *\n   * @return {String}\n   */\n  createTitle: function() {\n    var str = this.key;\n\n    //Add spaces\n    str = str.replace(/([A-Z])/g, ' $1');\n\n    //Uppercase first character\n    str = str.replace(/^./, function(str) { return str.toUpperCase(); });\n\n    return str;\n  },\n\n  /**\n   * Returns the data to be passed to the template\n   *\n   * @return {Object}\n   */\n  templateData: function() {\n    var schema = this.schema;\n\n    return {\n      help: schema.help || '',\n      title: schema.title,\n      titleHTML: schema.titleHTML,\n      fieldAttrs: schema.fieldAttrs,\n      editorAttrs: schema.editorAttrs,\n      key: this.key,\n      editorId: this.editor.id\n    };\n  },\n\n  /**\n   * Render the field and editor\n   *\n   * @return {Field} self\n   */\n  render: function() {\n    var schema = this.schema,\n        editor = this.editor,\n        $ = Backbone.$;\n\n    //Only render the editor if requested\n    if (this.editor.noField === true) {\n      return this.setElement(editor.render().el);\n    }\n\n    //Render field\n    var $field = $($.trim(this.template(_.result(this, 'templateData'))));\n\n    if (schema.fieldClass) $field.addClass(schema.fieldClass);\n    if (schema.fieldAttrs) $field.attr(schema.fieldAttrs);\n\n    //Render editor\n    $field.find('[data-editor]').add($field).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-editor');\n\n      if (_.isUndefined(selection)) return;\n\n      $container.append(editor.render().el);\n    });\n\n    this.setElement($field);\n\n    return this;\n  },\n\n  /**\n   * Disable the field's editor\n   * Will call the editor's disable method if it exists\n   * Otherwise will add the disabled attribute to all inputs in the editor\n   */\n  disable: function(){\n    if ( _.isFunction(this.editor.disable) ){\n      this.editor.disable();\n    }\n    else {\n      $input = this.editor.$el;\n      $input = $input.is(\"input\") ? $input : $input.find(\"input\");\n      $input.attr(\"disabled\",true);\n    }\n  },\n\n  /**\n   * Enable the field's editor\n   * Will call the editor's disable method if it exists\n   * Otherwise will remove the disabled attribute to all inputs in the editor\n   */\n  enable: function(){\n    if ( _.isFunction(this.editor.enable) ){\n      this.editor.enable();\n    }\n    else {\n      $input = this.editor.$el;\n      $input = $input.is(\"input\") ? $input : $input.find(\"input\");\n      $input.attr(\"disabled\",false);\n    }\n  },\n\n  /**\n   * Check the validity of the field\n   *\n   * @return {String}\n   */\n  validate: function() {\n    var error = this.editor.validate();\n\n    if (error) {\n      this.setError(error.message);\n    } else {\n      this.clearError();\n    }\n\n    return error;\n  },\n\n  /**\n   * Set the field into an error state, adding the error class and setting the error message\n   *\n   * @param {String} msg     Error message\n   */\n  setError: function(msg) {\n    //Nested form editors (e.g. Object) set their errors internally\n    if (this.editor.hasNestedForm) return;\n\n    //Add error CSS class\n    this.$el.addClass(this.errorClassName);\n\n    //Set error message\n    this.$('[data-error]').last().html(msg);\n  },\n\n  /**\n   * Clear the error state and reset the help message\n   */\n  clearError: function() {\n    //Remove error CSS class\n    this.$el.removeClass(this.errorClassName);\n\n    //Clear error message\n    this.$('[data-error]').empty();\n  },\n\n  /**\n   * Update the model with the new value from the editor\n   *\n   * @return {Mixed}\n   */\n  commit: function() {\n    return this.editor.commit();\n  },\n\n  /**\n   * Get the value from the editor\n   *\n   * @return {Mixed}\n   */\n  getValue: function() {\n    return this.editor.getValue();\n  },\n\n  /**\n   * Set/change the value of the editor\n   *\n   * @param {Mixed} value\n   */\n  setValue: function(value) {\n    this.editor.setValue(value);\n  },\n\n  /**\n   * Give the editor focus\n   */\n  focus: function() {\n    this.editor.focus();\n  },\n\n  /**\n   * Remove focus from the editor\n   */\n  blur: function() {\n    this.editor.blur();\n  },\n\n  /**\n   * Remove the field and editor views\n   */\n  remove: function() {\n    this.editor.remove();\n\n    Backbone.View.prototype.remove.call(this);\n  }\n\n}, {\n  //STATICS\n\n  template: _.template('\\\n    <div>\\\n      <label for=\"<%= editorId %>\">\\\n        <% if (titleHTML){ %><%= titleHTML %>\\\n        <% } else { %><%- title %><% } %>\\\n      </label>\\\n      <div>\\\n        <span data-editor></span>\\\n        <div data-error></div>\\\n        <div><%= help %></div>\\\n      </div>\\\n    </div>\\\n  ', null, Form.templateSettings),\n\n  /**\n   * CSS class name added to the field when there is a validation error\n   */\n  errorClassName: 'error'\n\n});\n\n\n//==================================================================================================\n//NESTEDFIELD\n//==================================================================================================\n\nForm.NestedField = Form.Field.extend({\n\n  template: _.template('\\\n    <div>\\\n      <label for=\"<%= editorId %>\">\\\n        <% if (titleHTML){ %><%= titleHTML %>\\\n        <% } else { %><%- title %><% } %>\\\n      </label>\\\n      <div>\\\n        <span data-editor></span>\\\n        <div class=\"error-text\" data-error></div>\\\n        <div class=\"error-help\"><%= help %></div>\\\n      </div>\\\n    </div>\\\n  ', null, Form.templateSettings)\n\n});\n\n/**\n * Base editor (interface). To be extended, not used directly\n *\n * @param {Object} options\n * @param {String} [options.id]         Editor ID\n * @param {Model} [options.model]       Use instead of value, and use commit()\n * @param {String} [options.key]        The model attribute key. Required when using 'model'\n * @param {Mixed} [options.value]       When not using a model. If neither provided, defaultValue will be used\n * @param {Object} [options.schema]     Field schema; may be required by some editors\n * @param {Object} [options.validators] Validators; falls back to those stored on schema\n * @param {Object} [options.form]       The form\n */\nForm.Editor = Form.editors.Base = Backbone.View.extend({\n\n  defaultValue: null,\n\n  hasFocus: false,\n\n  initialize: function(options) {\n    var options = options || {};\n\n    //Set initial value\n    if (options.model) {\n      if (!options.key) throw new Error(\"Missing option: 'key'\");\n\n      this.model = options.model;\n\n      this.value = this.model.get(options.key);\n    }\n    else if (options.value !== undefined) {\n      this.value = options.value;\n    }\n\n    if (this.value === undefined) this.value = this.defaultValue;\n\n    //Store important data\n    _.extend(this, _.pick(options, 'key', 'form'));\n\n    var schema = this.schema = options.schema || {};\n\n    this.validators = options.validators || schema.validators;\n\n    //Main attributes\n    this.$el.attr('id', this.id);\n    this.$el.attr('name', this.getName());\n    if (schema.editorClass) this.$el.addClass(schema.editorClass);\n    if (schema.editorAttrs) this.$el.attr(schema.editorAttrs);\n  },\n\n  /**\n   * Get the value for the form input 'name' attribute\n   *\n   * @return {String}\n   *\n   * @api private\n   */\n  getName: function() {\n    var key = this.key || '';\n\n    //Replace periods with underscores (e.g. for when using paths)\n    return key.replace(/\\./g, '_');\n  },\n\n  /**\n   * Get editor value\n   * Extend and override this method to reflect changes in the DOM\n   *\n   * @return {Mixed}\n   */\n  getValue: function() {\n    return this.value;\n  },\n\n  /**\n   * Set editor value\n   * Extend and override this method to reflect changes in the DOM\n   *\n   * @param {Mixed} value\n   */\n  setValue: function(value) {\n    this.value = value;\n  },\n\n  /**\n   * Give the editor focus\n   * Extend and override this method\n   */\n  focus: function() {\n    throw new Error('Not implemented');\n  },\n\n  /**\n   * Remove focus from the editor\n   * Extend and override this method\n   */\n  blur: function() {\n    throw new Error('Not implemented');\n  },\n\n  /**\n   * Update the model with the current value\n   *\n   * @param {Object} [options]              Options to pass to model.set()\n   * @param {Boolean} [options.validate]    Set to true to trigger built-in model validation\n   *\n   * @return {Mixed} error\n   */\n  commit: function(options) {\n    var error = this.validate();\n    if (error) return error;\n\n    this.listenTo(this.model, 'invalid', function(model, e) {\n      error = e;\n    });\n    this.model.set(this.key, this.getValue(), options);\n\n    if (error) return error;\n  },\n\n  /**\n   * Check validity\n   *\n   * @return {Object|Undefined}\n   */\n  validate: function() {\n    var $el = this.$el,\n        error = null,\n        value = this.getValue(),\n        formValues = this.form ? this.form.getValue() : {},\n        validators = this.validators,\n        getValidator = this.getValidator;\n\n    if (validators) {\n      //Run through validators until an error is found\n      _.every(validators, function(validator) {\n        error = getValidator(validator)(value, formValues);\n\n        return error ? false : true;\n      });\n    }\n\n    return error;\n  },\n\n  /**\n   * Set this.hasFocus, or call parent trigger()\n   *\n   * @param {String} event\n   */\n  trigger: function(event) {\n    if (event === 'focus') {\n      this.hasFocus = true;\n    }\n    else if (event === 'blur') {\n      this.hasFocus = false;\n    }\n\n    return Backbone.View.prototype.trigger.apply(this, arguments);\n  },\n\n  /**\n   * Returns a validation function based on the type defined in the schema\n   *\n   * @param {RegExp|String|Function} validator\n   * @return {Function}\n   */\n  getValidator: function(validator) {\n    var validators = Form.validators;\n\n    //Convert regular expressions to validators\n    if (_.isRegExp(validator)) {\n      return validators.regexp({ regexp: validator });\n    }\n\n    //Use a built-in validator if given a string\n    if (_.isString(validator)) {\n      if (!validators[validator]) throw new Error('Validator \"'+validator+'\" not found');\n\n      return validators[validator]();\n    }\n\n    //Functions can be used directly\n    if (_.isFunction(validator)) return validator;\n\n    //Use a customised built-in validator if given an object\n    if (_.isObject(validator) && validator.type) {\n      var config = validator;\n\n      return validators[config.type](config);\n    }\n\n    //Unkown validator type\n    throw new Error('Invalid validator: ' + validator);\n  }\n});\n\n/**\n * Text\n *\n * Text input with focus, blur and change events\n */\nForm.editors.Text = Form.Editor.extend({\n\n  tagName: 'input',\n\n  defaultValue: '',\n\n  previousValue: '',\n\n  events: {\n    'keyup':    'determineChange',\n    'keypress': function(event) {\n      var self = this;\n      setTimeout(function() {\n        self.determineChange();\n      }, 0);\n    },\n    'select':   function(event) {\n      this.trigger('select', this);\n    },\n    'focus':    function(event) {\n      this.trigger('focus', this);\n    },\n    'blur':     function(event) {\n      this.trigger('blur', this);\n    }\n  },\n\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    var schema = this.schema;\n\n    //Allow customising text type (email, phone etc.) for HTML5 browsers\n    var type = 'text';\n\n    if (schema && schema.editorAttrs && schema.editorAttrs.type) type = schema.editorAttrs.type;\n    if (schema && schema.dataType) type = schema.dataType;\n\n    this.$el.attr('type', type);\n  },\n\n  /**\n   * Adds the editor to the DOM\n   */\n  render: function() {\n    this.setValue(this.value);\n\n    return this;\n  },\n\n  determineChange: function(event) {\n    var currentValue = this.$el.val();\n    var changed = (currentValue !== this.previousValue);\n\n    if (changed) {\n      this.previousValue = currentValue;\n\n      this.trigger('change', this);\n    }\n  },\n\n  /**\n   * Returns the current editor value\n   * @return {String}\n   */\n  getValue: function() {\n    return this.$el.val();\n  },\n\n  /**\n   * Sets the value of the form element\n   * @param {String}\n   */\n  setValue: function(value) {\n    this.value = value;\n    this.$el.val(value);\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$el.focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$el.blur();\n  },\n\n  select: function() {\n    this.$el.select();\n  }\n\n});\n\n/**\n * TextArea editor\n */\nForm.editors.TextArea = Form.editors.Text.extend({\n\n  tagName: 'textarea',\n\n  /**\n   * Override Text constructor so type property isn't set (issue #261)\n   */\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n  }\n\n});\n\n/**\n * Password editor\n */\nForm.editors.Password = Form.editors.Text.extend({\n\n  initialize: function(options) {\n    Form.editors.Text.prototype.initialize.call(this, options);\n\n    this.$el.attr('type', 'password');\n  }\n\n});\n\n/**\n * NUMBER\n *\n * Normal text input that only allows a number. Letters etc. are not entered.\n */\nForm.editors.Number = Form.editors.Text.extend({\n\n  defaultValue: 0,\n\n  events: _.extend({}, Form.editors.Text.prototype.events, {\n    'keypress': 'onKeyPress',\n    'change': 'onKeyPress'\n  }),\n\n  initialize: function(options) {\n    Form.editors.Text.prototype.initialize.call(this, options);\n\n    var schema = this.schema;\n\n    this.$el.attr('type', 'number');\n\n    if (!schema || !schema.editorAttrs || !schema.editorAttrs.step) {\n      // provide a default for `step` attr,\n      // but don't overwrite if already specified\n      this.$el.attr('step', 'any');\n    }\n  },\n\n  /**\n   * Check value is numeric\n   */\n  onKeyPress: function(event) {\n    var self = this,\n        delayedDetermineChange = function() {\n          setTimeout(function() {\n            self.determineChange();\n          }, 0);\n        };\n\n    //Allow backspace\n    if (event.charCode === 0) {\n      delayedDetermineChange();\n      return;\n    }\n\n    //Get the whole new value so that we can prevent things like double decimals points etc.\n    var newVal = this.$el.val()\n    if( event.charCode != undefined ) {\n      newVal = newVal + String.fromCharCode(event.charCode);\n    }\n\n    var numeric = /^[0-9]*\\.?[0-9]*?$/.test(newVal);\n\n    if (numeric) {\n      delayedDetermineChange();\n    }\n    else {\n      event.preventDefault();\n    }\n  },\n\n  getValue: function() {\n    var value = this.$el.val();\n\n    return value === \"\" ? null : parseFloat(value, 10);\n  },\n\n  setValue: function(value) {\n    value = (function() {\n      if (_.isNumber(value)) return value;\n\n      if (_.isString(value) && value !== '') return parseFloat(value, 10);\n\n      return null;\n    })();\n\n    if (_.isNaN(value)) value = null;\n    this.value = value;\n    Form.editors.Text.prototype.setValue.call(this, value);\n  }\n\n});\n\n/**\n * Hidden editor\n */\nForm.editors.Hidden = Form.editors.Text.extend({\n\n  defaultValue: '',\n\n  noField: true,\n\n  initialize: function(options) {\n    Form.editors.Text.prototype.initialize.call(this, options);\n\n    this.$el.attr('type', 'hidden');\n  },\n\n  focus: function() {\n\n  },\n\n  blur: function() {\n\n  }\n\n});\n\n/**\n * Checkbox editor\n *\n * Creates a single checkbox, i.e. boolean value\n */\nForm.editors.Checkbox = Form.editors.Base.extend({\n\n  defaultValue: false,\n\n  tagName: 'input',\n\n  events: {\n    'click':  function(event) {\n      this.trigger('change', this);\n    },\n    'focus':  function(event) {\n      this.trigger('focus', this);\n    },\n    'blur':   function(event) {\n      this.trigger('blur', this);\n    }\n  },\n\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    this.$el.attr('type', 'checkbox');\n  },\n\n  /**\n   * Adds the editor to the DOM\n   */\n  render: function() {\n    this.setValue(this.value);\n\n    return this;\n  },\n\n  getValue: function() {\n    return this.$el.prop('checked');\n  },\n\n  setValue: function(value) {\n    if (value) {\n      this.$el.prop('checked', true);\n    }else{\n      this.$el.prop('checked', false);\n    }\n    this.value = !!value;\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$el.focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$el.blur();\n  }\n\n});\n\n/**\n * Select editor\n *\n * Renders a <select> with given options\n *\n * Requires an 'options' value on the schema.\n *  Can be an array of options, a function that calls back with the array of options, a string of HTML\n *  or a Backbone collection. If a collection, the models must implement a toString() method\n */\nForm.editors.Select = Form.editors.Base.extend({\n\n  tagName: 'select',\n\n  previousValue: '',\n\n  events: {\n    'keyup':    'determineChange',\n    'keypress': function(event) {\n      var self = this;\n      setTimeout(function() {\n        self.determineChange();\n      }, 0);\n    },\n    'change': function(event) {\n      this.trigger('change', this);\n    },\n    'focus':  function(event) {\n      this.trigger('focus', this);\n    },\n    'blur':   function(event) {\n      this.trigger('blur', this);\n    }\n  },\n\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    if (!this.schema || !this.schema.options) throw new Error(\"Missing required 'schema.options'\");\n  },\n\n  render: function() {\n    this.setOptions(this.schema.options);\n\n    return this;\n  },\n\n  /**\n   * Sets the options that populate the <select>\n   *\n   * @param {Mixed} options\n   */\n  setOptions: function(options) {\n    var self = this;\n\n    //If a collection was passed, check if it needs fetching\n    if (options instanceof Backbone.Collection) {\n      var collection = options;\n\n      //Don't do the fetch if it's already populated\n      if (collection.length > 0) {\n        this.renderOptions(options);\n      } else {\n        collection.fetch({\n          success: function(collection) {\n            self.renderOptions(options);\n          }\n        });\n      }\n    }\n\n    //If a function was passed, run it to get the options\n    else if (_.isFunction(options)) {\n      options(function(result) {\n        self.renderOptions(result);\n      }, self);\n    }\n\n    //Otherwise, ready to go straight to renderOptions\n    else {\n      this.renderOptions(options);\n    }\n  },\n\n  /**\n   * Adds the <option> html to the DOM\n   * @param {Mixed}   Options as a simple array e.g. ['option1', 'option2']\n   *                      or as an array of objects e.g. [{val: 543, label: 'Title for object 543'}]\n   *                      or as a string of <option> HTML to insert into the <select>\n   *                      or any object\n   */\n  renderOptions: function(options) {\n    var $select = this.$el,\n        html;\n\n    html = this._getOptionsHtml(options);\n\n    //Insert options\n    $select.html(html);\n\n    //Select correct option\n    this.setValue(this.value);\n  },\n\n  _getOptionsHtml: function(options) {\n    var html;\n    //Accept string of HTML\n    if (_.isString(options)) {\n      html = options;\n    }\n\n    //Or array\n    else if (_.isArray(options)) {\n      html = this._arrayToHtml(options);\n    }\n\n    //Or Backbone collection\n    else if (options instanceof Backbone.Collection) {\n      html = this._collectionToHtml(options);\n    }\n\n    else if (_.isFunction(options)) {\n      var newOptions;\n\n      options(function(opts) {\n        newOptions = opts;\n      }, this);\n\n      html = this._getOptionsHtml(newOptions);\n    //Or any object\n    }else{\n      html = this._objectToHtml(options);\n    }\n\n    return html;\n  },\n\n  determineChange: function(event) {\n    var currentValue = this.getValue();\n    var changed = (currentValue !== this.previousValue);\n\n    if (changed) {\n      this.previousValue = currentValue;\n\n      this.trigger('change', this);\n    }\n  },\n\n  getValue: function() {\n    return this.$el.val();\n  },\n\n  setValue: function(value) {\n    this.value = value;\n    this.$el.val(value);\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$el.focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$el.blur();\n  },\n\n  /**\n   * Transforms a collection into HTML ready to use in the renderOptions method\n   * @param {Backbone.Collection}\n   * @return {String}\n   */\n  _collectionToHtml: function(collection) {\n    //Convert collection to array first\n    var array = [];\n    collection.each(function(model) {\n      array.push({ val: model.id, label: model.toString() });\n    });\n\n    //Now convert to HTML\n    var html = this._arrayToHtml(array);\n\n    return html;\n  },\n  /**\n   * Transforms an object into HTML ready to use in the renderOptions method\n   * @param {Object}\n   * @return {String}\n   */\n  _objectToHtml: function(obj) {\n    //Convert object to array first\n    var array = [];\n    for(var key in obj){\n      if( obj.hasOwnProperty( key ) ) {\n        array.push({ val: key, label: obj[key] });\n      }\n    }\n\n    //Now convert to HTML\n    var html = this._arrayToHtml(array);\n\n    return html;\n  },\n\n\n\n  /**\n   * Create the <option> HTML\n   * @param {Array}   Options as a simple array e.g. ['option1', 'option2']\n   *                      or as an array of objects e.g. [{val: 543, label: 'Title for object 543'}]\n   * @return {String} HTML\n   */\n  _arrayToHtml: function(array) {\n    var html = $();\n\n    //Generate HTML\n    _.each(array, function(option) {\n      if (_.isObject(option)) {\n        if (option.group) {\n          var optgroup = $(\"<optgroup>\")\n            .attr(\"label\",option.group)\n            .html( this._getOptionsHtml(option.options) );\n          html = html.add(optgroup);\n        } else {\n          var val = (option.val || option.val === 0) ? option.val : '';\n          html = html.add( $('<option>').val(val).text(option.label) );\n        }\n      }\n      else {\n        html = html.add( $('<option>').text(option) );\n      }\n    }, this);\n\n    return html;\n  }\n\n});\n\n/**\n * Radio editor\n *\n * Renders a <ul> with given options represented as <li> objects containing radio buttons\n *\n * Requires an 'options' value on the schema.\n *  Can be an array of options, a function that calls back with the array of options, a string of HTML\n *  or a Backbone collection. If a collection, the models must implement a toString() method\n */\nForm.editors.Radio = Form.editors.Select.extend({\n\n  tagName: 'ul',\n\n  events: {\n    'change input[type=radio]': function() {\n      this.trigger('change', this);\n    },\n    'focus input[type=radio]': function() {\n      if (this.hasFocus) return;\n      this.trigger('focus', this);\n    },\n    'blur input[type=radio]': function() {\n      if (!this.hasFocus) return;\n      var self = this;\n      setTimeout(function() {\n        if (self.$('input[type=radio]:focus')[0]) return;\n        self.trigger('blur', self);\n      }, 0);\n    }\n  },\n\n  /**\n   * Returns the template. Override for custom templates\n   *\n   * @return {Function}       Compiled template\n   */\n  getTemplate: function() {\n    return this.schema.template || this.constructor.template;\n  },\n\n  getValue: function() {\n    return this.$('input[type=radio]:checked').val();\n  },\n\n  setValue: function(value) {\n    this.value = value;\n    this.$('input[type=radio]').val([value]);\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    var checked = this.$('input[type=radio]:checked');\n    if (checked[0]) {\n      checked.focus();\n      return;\n    }\n\n    this.$('input[type=radio]').first().focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$('input[type=radio]:focus').blur();\n  },\n\n  /**\n   * Create the radio list HTML\n   * @param {Array}   Options as a simple array e.g. ['option1', 'option2']\n   *                      or as an array of objects e.g. [{val: 543, label: 'Title for object 543'}]\n   * @return {String} HTML\n   */\n  _arrayToHtml: function (array) {\n    var self = this;\n\n    var template = this.getTemplate(),\n        name = self.getName(),\n        id = self.id;\n\n    var items = _.map(array, function(option, index) {\n      var item = {\n        name: name,\n        id: id + '-' + index\n      };\n\n      if (_.isObject(option)) {\n        item.value = (option.val || option.val === 0) ? option.val : '';\n        item.label = option.label;\n        item.labelHTML = option.labelHTML;\n      } else {\n        item.value = option;\n        item.label = option;\n      }\n\n      return item;\n    });\n\n    return template({ items: items });\n  }\n\n}, {\n\n  //STATICS\n  template: _.template('\\\n    <% _.each(items, function(item) { %>\\\n      <li>\\\n        <input type=\"radio\" name=\"<%= item.name %>\" value=\"<%- item.value %>\" id=\"<%= item.id %>\" />\\\n        <label for=\"<%= item.id %>\"><% if (item.labelHTML){ %><%= item.labelHTML %><% }else{ %><%- item.label %><% } %></label>\\\n      </li>\\\n    <% }); %>\\\n  ', null, Form.templateSettings)\n\n});\n\n/**\n * Checkboxes editor\n *\n * Renders a <ul> with given options represented as <li> objects containing checkboxes\n *\n * Requires an 'options' value on the schema.\n *  Can be an array of options, a function that calls back with the array of options, a string of HTML\n *  or a Backbone collection. If a collection, the models must implement a toString() method\n */\nForm.editors.Checkboxes = Form.editors.Select.extend({\n\n  tagName: 'ul',\n\n  groupNumber: 0,\n\n  events: {\n    'click input[type=checkbox]': function() {\n      this.trigger('change', this);\n    },\n    'focus input[type=checkbox]': function() {\n      if (this.hasFocus) return;\n      this.trigger('focus', this);\n    },\n    'blur input[type=checkbox]':  function() {\n      if (!this.hasFocus) return;\n      var self = this;\n      setTimeout(function() {\n        if (self.$('input[type=checkbox]:focus')[0]) return;\n        self.trigger('blur', self);\n      }, 0);\n    }\n  },\n\n  getValue: function() {\n    var values = [];\n    var self = this;\n    this.$('input[type=checkbox]:checked').each(function() {\n      values.push(self.$(this).val());\n    });\n    return values;\n  },\n\n  setValue: function(values) {\n    if (!_.isArray(values)) values = [values];\n    this.value = values;\n    this.$('input[type=checkbox]').val(values);\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$('input[type=checkbox]').first().focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$('input[type=checkbox]:focus').blur();\n  },\n\n  /**\n   * Create the checkbox list HTML\n   * @param {Array}   Options as a simple array e.g. ['option1', 'option2']\n   *                      or as an array of objects e.g. [{val: 543, label: 'Title for object 543'}]\n   * @return {String} HTML\n   */\n  _arrayToHtml: function (array) {\n    var html = $();\n    var self = this;\n\n    _.each(array, function(option, index) {\n      var itemHtml = $('<li>');\n      if (_.isObject(option)) {\n        if (option.group) {\n          var originalId = self.id;\n          self.id += \"-\" + self.groupNumber++;\n          itemHtml = $('<fieldset class=\"group\">').append( $('<legend>').text(option.group) );\n          itemHtml = itemHtml.append( self._arrayToHtml(option.options) );\n          self.id = originalId;\n          close = false;\n        }else{\n          var val = (option.val || option.val === 0) ? option.val : '';\n          itemHtml.append( $('<input type=\"checkbox\" name=\"'+self.getName()+'\" id=\"'+self.id+'-'+index+'\" />').val(val) );\n          if (option.labelHTML){\n            itemHtml.append( $('<label for=\"'+self.id+'-'+index+'\" />').html(option.labelHTML) );\n          }\n          else {\n            itemHtml.append( $('<label for=\"'+self.id+'-'+index+'\" />').text(option.label) );\n          }\n        }\n      }\n      else {\n        itemHtml.append( $('<input type=\"checkbox\" name=\"'+self.getName()+'\" id=\"'+self.id+'-'+index+'\" />').val(option) );\n        itemHtml.append( $('<label for=\"'+self.id+'-'+index+'\" />').text(option) );\n      }\n      html = html.add(itemHtml);\n    });\n\n    return html;\n  }\n\n});\n\n/**\n * Object editor\n *\n * Creates a child form. For editing Javascript objects\n *\n * @param {Object} options\n * @param {Form} options.form                 The form this editor belongs to; used to determine the constructor for the nested form\n * @param {Object} options.schema             The schema for the object\n * @param {Object} options.schema.subSchema   The schema for the nested form\n */\nForm.editors.Object = Form.editors.Base.extend({\n  //Prevent error classes being set on the main control; they are internally on the individual fields\n  hasNestedForm: true,\n\n  initialize: function(options) {\n    //Set default value for the instance so it's not a shared object\n    this.value = {};\n\n    //Init\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    //Check required options\n    if (!this.form) throw new Error('Missing required option \"form\"');\n    if (!this.schema.subSchema) throw new Error(\"Missing required 'schema.subSchema' option for Object editor\");\n  },\n\n  render: function() {\n    //Get the constructor for creating the nested form; i.e. the same constructor as used by the parent form\n    var NestedForm = this.form.constructor;\n\n    //Create the nested form\n    this.nestedForm = new NestedForm({\n      schema: this.schema.subSchema,\n      data: this.value,\n      idPrefix: this.id + '_',\n      Field: NestedForm.NestedField\n    });\n\n    this._observeFormEvents();\n\n    this.$el.html(this.nestedForm.render().el);\n\n    if (this.hasFocus) this.trigger('blur', this);\n\n    return this;\n  },\n\n  getValue: function() {\n    if (this.nestedForm) return this.nestedForm.getValue();\n\n    return this.value;\n  },\n\n  setValue: function(value) {\n    this.value = value;\n\n    this.render();\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.nestedForm.focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.nestedForm.blur();\n  },\n\n  remove: function() {\n    this.nestedForm.remove();\n\n    Backbone.View.prototype.remove.call(this);\n  },\n\n  validate: function() {\n    var errors = _.extend({},\n      Form.editors.Base.prototype.validate.call(this),\n      this.nestedForm.validate()\n    );\n    return _.isEmpty(errors)?false:errors;\n  },\n\n  _observeFormEvents: function() {\n    if (!this.nestedForm) return;\n\n    this.nestedForm.on('all', function() {\n      // args = [\"key:change\", form, fieldEditor]\n      var args = _.toArray(arguments);\n      args[1] = this;\n      // args = [\"key:change\", this=objectEditor, fieldEditor]\n\n      this.trigger.apply(this, args);\n    }, this);\n  }\n\n});\n\n/**\n * NestedModel editor\n *\n * Creates a child form. For editing nested Backbone models\n *\n * Special options:\n *   schema.model:   Embedded model constructor\n */\nForm.editors.NestedModel = Form.editors.Object.extend({\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    if (!this.form) throw new Error('Missing required option \"form\"');\n    if (!options.schema.model) throw new Error('Missing required \"schema.model\" option for NestedModel editor');\n  },\n\n  render: function() {\n    //Get the constructor for creating the nested form; i.e. the same constructor as used by the parent form\n    var NestedForm = this.form.constructor;\n\n    var data = this.value || {},\n        key = this.key,\n        nestedModel = this.schema.model;\n\n    //Wrap the data in a model if it isn't already a model instance\n    var modelInstance = (data.constructor === nestedModel) ? data : new nestedModel(data);\n\n    this.nestedForm = new NestedForm({\n      model: modelInstance,\n      idPrefix: this.id + '_',\n      fieldTemplate: 'nestedField'\n    });\n\n    this._observeFormEvents();\n\n    //Render form\n    this.$el.html(this.nestedForm.render().el);\n\n    if (this.hasFocus) this.trigger('blur', this);\n\n    return this;\n  },\n\n  /**\n   * Update the embedded model, checking for nested validation errors and pass them up\n   * Then update the main model if all OK\n   *\n   * @return {Error|null} Validation error or null\n   */\n  commit: function() {\n    var error = this.nestedForm.commit();\n    if (error) {\n      this.$el.addClass('error');\n      return error;\n    }\n\n    return Form.editors.Object.prototype.commit.call(this);\n  }\n\n});\n\n/**\n * Date editor\n *\n * Schema options\n * @param {Number|String} [options.schema.yearStart]  First year in list. Default: 100 years ago\n * @param {Number|String} [options.schema.yearEnd]    Last year in list. Default: current year\n *\n * Config options (if not set, defaults to options stored on the main Date class)\n * @param {Boolean} [options.showMonthNames]  Use month names instead of numbers. Default: true\n * @param {String[]} [options.monthNames]     Month names. Default: Full English names\n */\nForm.editors.Date = Form.editors.Base.extend({\n\n  events: {\n    'change select':  function() {\n      this.updateHidden();\n      this.trigger('change', this);\n    },\n    'focus select':   function() {\n      if (this.hasFocus) return;\n      this.trigger('focus', this);\n    },\n    'blur select':    function() {\n      if (!this.hasFocus) return;\n      var self = this;\n      setTimeout(function() {\n        if (self.$('select:focus')[0]) return;\n        self.trigger('blur', self);\n      }, 0);\n    }\n  },\n\n  initialize: function(options) {\n    options = options || {};\n\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    var Self = Form.editors.Date,\n        today = new Date();\n\n    //Option defaults\n    this.options = _.extend({\n      monthNames: Self.monthNames,\n      showMonthNames: Self.showMonthNames\n    }, options);\n\n    //Schema defaults\n    this.schema = _.extend({\n      yearStart: today.getFullYear() - 100,\n      yearEnd: today.getFullYear()\n    }, options.schema || {});\n\n    //Cast to Date\n    if (this.value && !_.isDate(this.value)) {\n      this.value = new Date(this.value);\n    }\n\n    //Set default date\n    if (!this.value) {\n      var date = new Date();\n      date.setSeconds(0);\n      date.setMilliseconds(0);\n\n      this.value = date;\n    }\n\n    //Template\n    this.template = options.template || this.constructor.template;\n  },\n\n  render: function() {\n    var options = this.options,\n        schema = this.schema,\n        $ = Backbone.$;\n\n    var datesOptions = _.map(_.range(1, 32), function(date) {\n      return '<option value=\"'+date+'\">' + date + '</option>';\n    });\n\n    var monthsOptions = _.map(_.range(0, 12), function(month) {\n      var value = (options.showMonthNames)\n          ? options.monthNames[month]\n          : (month + 1);\n\n      return '<option value=\"'+month+'\">' + value + '</option>';\n    });\n\n    var yearRange = (schema.yearStart < schema.yearEnd)\n      ? _.range(schema.yearStart, schema.yearEnd + 1)\n      : _.range(schema.yearStart, schema.yearEnd - 1, -1);\n\n    var yearsOptions = _.map(yearRange, function(year) {\n      return '<option value=\"'+year+'\">' + year + '</option>';\n    });\n\n    //Render the selects\n    var $el = $($.trim(this.template({\n      dates: datesOptions.join(''),\n      months: monthsOptions.join(''),\n      years: yearsOptions.join('')\n    })));\n\n    //Store references to selects\n    this.$date = $el.find('[data-type=\"date\"]');\n    this.$month = $el.find('[data-type=\"month\"]');\n    this.$year = $el.find('[data-type=\"year\"]');\n\n    //Create the hidden field to store values in case POSTed to server\n    this.$hidden = $('<input type=\"hidden\" name=\"'+this.key+'\" />');\n    $el.append(this.$hidden);\n\n    //Set value on this and hidden field\n    this.setValue(this.value);\n\n    //Remove the wrapper tag\n    this.setElement($el);\n    this.$el.attr('id', this.id);\n    this.$el.attr('name', this.getName());\n\n    if (this.hasFocus) this.trigger('blur', this);\n\n    return this;\n  },\n\n  /**\n   * @return {Date}   Selected date\n   */\n  getValue: function() {\n    var year = this.$year.val(),\n        month = this.$month.val(),\n        date = this.$date.val();\n\n    if (!year || !month || !date) return null;\n\n    return new Date(year, month, date);\n  },\n\n  /**\n   * @param {Date} date\n   */\n  setValue: function(date) {\n    this.value = date;\n    this.$date.val(date.getDate());\n    this.$month.val(date.getMonth());\n    this.$year.val(date.getFullYear());\n\n    this.updateHidden();\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$('select').first().focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$('select:focus').blur();\n  },\n\n  /**\n   * Update the hidden input which is maintained for when submitting a form\n   * via a normal browser POST\n   */\n  updateHidden: function() {\n    var val = this.getValue();\n\n    if (_.isDate(val)) val = val.toISOString();\n\n    this.$hidden.val(val);\n  }\n\n}, {\n  //STATICS\n  template: _.template('\\\n    <div>\\\n      <select data-type=\"date\"><%= dates %></select>\\\n      <select data-type=\"month\"><%= months %></select>\\\n      <select data-type=\"year\"><%= years %></select>\\\n    </div>\\\n  ', null, Form.templateSettings),\n\n  //Whether to show month names instead of numbers\n  showMonthNames: true,\n\n  //Month names to use if showMonthNames is true\n  //Replace for localisation, e.g. Form.editors.Date.monthNames = ['Janvier', 'Fevrier'...]\n  monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n});\n\n/**\n * DateTime editor\n *\n * @param {Editor} [options.DateEditor]           Date editor view to use (not definition)\n * @param {Number} [options.schema.minsInterval]  Interval between minutes. Default: 15\n */\nForm.editors.DateTime = Form.editors.Base.extend({\n\n  events: {\n    'change select':  function() {\n      this.updateHidden();\n      this.trigger('change', this);\n    },\n    'focus select':   function() {\n      if (this.hasFocus) return;\n      this.trigger('focus', this);\n    },\n    'blur select':    function() {\n      if (!this.hasFocus) return;\n      var self = this;\n      setTimeout(function() {\n        if (self.$('select:focus')[0]) return;\n        self.trigger('blur', self);\n      }, 0);\n    }\n  },\n\n  initialize: function(options) {\n    options = options || {};\n\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    //Option defaults\n    this.options = _.extend({\n      DateEditor: Form.editors.DateTime.DateEditor\n    }, options);\n\n    //Schema defaults\n    this.schema = _.extend({\n      minsInterval: 15\n    }, options.schema || {});\n\n    //Create embedded date editor\n    this.dateEditor = new this.options.DateEditor(options);\n\n    this.value = this.dateEditor.value;\n\n    //Template\n    this.template = options.template || this.constructor.template;\n  },\n\n  render: function() {\n    function pad(n) {\n      return n < 10 ? '0' + n : n;\n    }\n\n    var schema = this.schema,\n        $ = Backbone.$;\n\n    //Create options\n    var hoursOptions = _.map(_.range(0, 24), function(hour) {\n      return '<option value=\"'+hour+'\">' + pad(hour) + '</option>';\n    });\n\n    var minsOptions = _.map(_.range(0, 60, schema.minsInterval), function(min) {\n      return '<option value=\"'+min+'\">' + pad(min) + '</option>';\n    });\n\n    //Render time selects\n    var $el = $($.trim(this.template({\n      hours: hoursOptions.join(),\n      mins: minsOptions.join()\n    })));\n\n    //Include the date editor\n    $el.find('[data-date]').append(this.dateEditor.render().el);\n\n    //Store references to selects\n    this.$hour = $el.find('select[data-type=\"hour\"]');\n    this.$min = $el.find('select[data-type=\"min\"]');\n\n    //Get the hidden date field to store values in case POSTed to server\n    this.$hidden = $el.find('input[type=\"hidden\"]');\n\n    //Set time\n    this.setValue(this.value);\n\n    this.setElement($el);\n    this.$el.attr('id', this.id);\n    this.$el.attr('name', this.getName());\n\n    if (this.hasFocus) this.trigger('blur', this);\n\n    return this;\n  },\n\n  /**\n   * @return {Date}   Selected datetime\n   */\n  getValue: function() {\n    var date = this.dateEditor.getValue();\n\n    var hour = this.$hour.val(),\n        min = this.$min.val();\n\n    if (!date || !hour || !min) return null;\n\n    date.setHours(hour);\n    date.setMinutes(min);\n\n    return date;\n  },\n\n  /**\n   * @param {Date}\n   */\n  setValue: function(date) {\n    if (!_.isDate(date)) date = new Date(date);\n    this.value = date;\n    this.dateEditor.setValue(date);\n\n    this.$hour.val(date.getHours());\n    this.$min.val(date.getMinutes());\n\n    this.updateHidden();\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$('select').first().focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$('select:focus').blur();\n  },\n\n  /**\n   * Update the hidden input which is maintained for when submitting a form\n   * via a normal browser POST\n   */\n  updateHidden: function() {\n    var val = this.getValue();\n    if (_.isDate(val)) val = val.toISOString();\n\n    this.$hidden.val(val);\n  },\n\n  /**\n   * Remove the Date editor before removing self\n   */\n  remove: function() {\n    this.dateEditor.remove();\n\n    Form.editors.Base.prototype.remove.call(this);\n  }\n\n}, {\n  //STATICS\n  template: _.template('\\\n    <div class=\"bbf-datetime\">\\\n      <div class=\"bbf-date-container\" data-date></div>\\\n      <select data-type=\"hour\"><%= hours %></select>\\\n      :\\\n      <select data-type=\"min\"><%= mins %></select>\\\n    </div>\\\n  ', null, Form.templateSettings),\n\n  //The date editor to use (constructor function, not instance)\n  DateEditor: Form.editors.Date\n});\n\n\n\n  //Metadata\n  Form.VERSION = '0.14.0';\n\n  //Exports\n  Backbone.Form = Form;\n\n  return Form;\n});\n\n","//\n// backbone.trackit - 0.1.0\n// The MIT License\n// Copyright (c) 2013 The New York Times, CMS Group, Matthew DeLambo <delambo@gmail.com>\n//\n(function() {\n\n\t// Unsaved Record Keeping\n\t// ----------------------\n\n\t// Collection of all models in an app that have unsaved changes.\n\tvar unsavedModels = [];\n\n\t// If the given model has unsaved changes then add it to\n\t// the `unsavedModels` collection, otherwise remove it.\n\tvar updateUnsavedModels = function(model) {\n\t\tif (!_.isEmpty(model._unsavedChanges)) {\n\t\t\tif (!_.findWhere(unsavedModels, {cid:model.cid})) unsavedModels.push(model);\n\t\t} else {\n\t\t\tunsavedModels = _.filter(unsavedModels, function(m) { return model.cid != m.cid; });\n\t\t}\n\t};\n\n\t// Unload Handlers\n\t// ---------------\n\n\t// Helper which returns a prompt message for an unload handler.\n\t// Uses the given function name (one of the callback names\n\t// from the `model.unsaved` configuration hash) to evaluate\n\t// whether a prompt is needed/returned.\n\tvar getPrompt = function(fnName) {\n\t\tvar prompt, args = _.rest(arguments);\n\t\t// Evaluate and return a boolean result. The given `fn` may be a\n\t\t// boolean value, a function, or the name of a function on the model.\n\t\tvar evaluateModelFn = function(model, fn) {\n\t\t\tif (_.isBoolean(fn)) return fn;\n\t\t\treturn (_.isString(fn) ? model[fn] : fn).apply(model, args);\n\t\t};\n\t\t_.each(unsavedModels, function(model) {\n\t\t\tif (!prompt && evaluateModelFn(model, model._unsavedConfig[fnName]))\n\t\t\t\tprompt = model._unsavedConfig.prompt;\n\t\t});\n\t\treturn prompt;\n\t};\n\n\t// Wrap Backbone.History.navigate so that in-app routing\n\t// (`router.navigate('/path')`) can be intercepted with a\n\t// confirmation if there are any unsaved models.\n\tBackbone.History.prototype.navigate = _.wrap(Backbone.History.prototype.navigate, function(oldNav, fragment, options) {\n\t\tvar prompt = getPrompt('unloadRouterPrompt', fragment, options);\n\t\tif (prompt) {\n\t\t\tif (confirm(prompt + ' \\n\\nAre you sure you want to leave this page?')) {\n\t\t\t\toldNav.call(this, fragment, options);\n\t\t\t}\n\t\t} else {\n\t\t\toldNav.call(this, fragment, options);\n\t\t}\n\t});\n\n\t// Create a browser unload handler which is triggered\n\t// on the refresh, back, or forward button.\n\twindow.onbeforeunload = function(e) {\n\t\treturn getPrompt('unloadWindowPrompt', e);\n\t};\n\n\t// Backbone.Model API\n\t// ------------------\n\n\t_.extend(Backbone.Model.prototype, {\n\n\t\tunsaved: {},\n\t\t_trackingChanges: false,\n\t\t_originalAttrs: {},\n\t\t_unsavedChanges: {},\n\n\t\t// Opt in to tracking attribute changes\n\t\t// between saves.\n\t\tstartTracking: function() {\n\t\t\tthis._unsavedConfig = _.extend({}, {\n\t\t\t\tprompt: 'You have unsaved changes!',\n\t\t\t\tunloadRouterPrompt: false,\n\t\t\t\tunloadWindowPrompt: false\n\t\t\t}, this.unsaved || {});\n\t\t\tthis._trackingChanges = true;\n\t\t\tthis._resetTracking();\n\t\t\tthis._triggerUnsavedChanges();\n\t\t\treturn this;\n\t\t},\n\n\t\t// Resets the default tracking values\n\t\t// and stops tracking attribute changes.\n\t\tstopTracking: function() {\n\t\t\tthis._trackingChanges = false;\n\t\t\tthis._originalAttrs = {};\n\t\t\tthis._unsavedChanges = {};\n\t\t\tthis._triggerUnsavedChanges();\n\t\t\treturn this;\n\t\t},\n\n\t\t// Gets rid of accrued changes and\n\t\t// resets state.\n\t\trestartTracking: function() {\n\t\t\tthis._resetTracking();\n\t\t\tthis._triggerUnsavedChanges();\n\t\t\treturn this;\n\t\t},\n\n\t\t// Restores this model's attributes to\n\t\t// their original values since tracking\n\t\t// started, the last save, or last restart.\n\t\tresetAttributes: function() {\n\t\t\tif (!this._trackingChanges) return;\n\t\t\tthis.attributes = this._originalAttrs;\n\t\t\tthis._resetTracking();\n\t\t\tthis._triggerUnsavedChanges();\n\t\t\treturn this;\n\t\t},\n\n\t\t// Symmetric to Backbone's `model.changedAttributes()`,\n\t\t// except that this returns a hash of the model's attributes that\n\t\t// have changed since the last save, or `false` if there are none.\n\t\t// Like `changedAttributes`, an external attributes hash can be\n\t\t// passed in, returning the attributes in that hash which differ\n\t\t// from the model.\n\t\tunsavedAttributes: function(attrs) {\n\t\t\tif (!attrs) return _.isEmpty(this._unsavedChanges) ? false : _.clone(this._unsavedChanges);\n\t\t\tvar val, changed = false, old = this._unsavedChanges;\n\t\t\tfor (var attr in attrs) {\n\t\t\t\tif (_.isEqual(old[attr], (val = attrs[attr]))) continue;\n\t\t\t\t(changed || (changed = {}))[attr] = val;\n\t\t\t}\n\t\t\treturn changed;\n\t\t},\n\n\t\t_resetTracking: function() {\n\t\t\tthis._originalAttrs = _.clone(this.attributes);\n\t\t\tthis._unsavedChanges = {};\n\t\t},\n\n\t\t// Trigger an `unsavedChanges` event on this model,\n\t\t// supplying the result of whether there are unsaved\n\t\t// changes and a changed attributes hash.\n\t\t_triggerUnsavedChanges: function() {\n\t\t\tthis.trigger('unsavedChanges', !_.isEmpty(this._unsavedChanges), _.clone(this._unsavedChanges));\n\t\t\tif (this.unsaved) updateUnsavedModels(this);\n\t\t}\n\t});\n\n\t// Wrap `model.set()` and update the internal\n\t// unsaved changes record keeping.\n\tBackbone.Model.prototype.set = _.wrap(Backbone.Model.prototype.set, function(oldSet, key, val, options) {\n\t\tvar attrs, ret;\n\t\tif (key == null) return this;\n\t\t// Handle both `\"key\", value` and `{key: value}` -style arguments.\n\t\tif (typeof key === 'object') {\n\t\t\tattrs = key;\n\t\t\toptions = val;\n\t\t} else {\n\t\t\t(attrs = {})[key] = val;\n\t\t}\n\t\toptions || (options = {});\n\n\t\t// Delegate to Backbone's set.\n\t\tret = oldSet.call(this, attrs, options);\n\n\t\tif (this._trackingChanges && !options.silent) {\n\t\t\t_.each(attrs, _.bind(function(val, key) {\n\t\t\t\tif (_.isEqual(this._originalAttrs[key], val))\n\t\t\t\t\tdelete this._unsavedChanges[key];\n\t\t\t\telse\n\t\t\t\t\tthis._unsavedChanges[key] = val;\n\t\t\t}, this));\n\t\t\tthis._triggerUnsavedChanges();\n\t\t}\n\t\treturn ret;\n\t});\n\n\t// Intercept `model.save()` and reset tracking/unsaved\n\t// changes if it was successful.\n\tBackbone.sync = _.wrap(Backbone.sync, function(oldSync, method, model, options) {\n\t\toptions || (options = {});\n\n\t\tif (method == 'update') {\n\t\t\toptions.success = _.wrap(options.success, _.bind(function(oldSuccess, data, textStatus, jqXHR) {\n\t\t\t\tvar ret;\n\t\t\t\tif (oldSuccess) ret = oldSuccess.call(this, data, textStatus, jqXHR);\n\t\t\t\tif (model._trackingChanges) {\n\t\t\t\t\tmodel._resetTracking();\n\t\t\t\t\tmodel._triggerUnsavedChanges();\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}, this));\n\t\t}\n\t\treturn oldSync(method, model, options);\n\t});\n\n})();\ndefine(\"../vendor/backbone.trackit\", function(){});\n\n","/**\n * Image object model for use in various models for the 'image' attribute\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/Image',[], function() {\n\n\treturn Backbone.Model.extend( {\n\n\t\tdefaults: {\n\t\t\tenabled: 'no',\n\t\t\tid: '',\n\t\t\tsize: 'full',\n\t\t\tsrc: '',\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.startTracking();\n\t\t},\n\n\t} );\n} );\n\n","/**\n * Model relationships mixin\n * @since    3.16.0\n * @version  [version]\n */\ndefine( 'Models/_Relationships',[], function() {\n\n\treturn {\n\n\t\t/**\n\t\t * Default relationship settings object\n\t\t * @type  {Object}\n\t\t */\n\t\trelationship_defaults: {\n\t\t\tparent: {},\n\t\t\tchildren: {},\n\t\t},\n\n\t\t/**\n\t\t * Relationship settings object\n\t\t * Should be overriden in the model\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {},\n\n\t\t/**\n\t\t * Initialize all parent and child relationships\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinit_relationships: function( options ) {\n\n\t\t\tvar rels = this.get_relationships();\n\n\t\t\t// initialize parent relaxtionships\n\t\t\t// useful when adding a model to ensure parent is initialized\n\t\t\tif ( rels.parent && options && options.parent ) {\n\t\t\t\tthis.set_parent( options.parent );\n\t\t\t}\n\n\t\t\t// initialize all children relationships\n\t\t\t_.each( rels.children, function( child_data, child_key ) {\n\n\t\t\t\tif ( ! child_data.conditional || true === child_data.conditional( this ) ) {\n\n\t\t\t\t\tvar child_val = this.get( child_key ),\n\t\t\t\t\t\tchild;\n\n\t\t\t\t\tif ( child_data.lookup ) {\n\t\t\t\t\t\tchild = child_data.lookup( child_val );\n\t\t\t\t\t} else if ( 'model' === child_data.type ) {\n\t\t\t\t\t\tchild = window.llms_builder.construct.get_model( child_data.class, child_val );\n\t\t\t\t\t} else if ( 'collection' === child_data.type ) {\n\t\t\t\t\t\tchild = window.llms_builder.construct.get_collection( child_data.class, child_val );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set( child_key, child );\n\n\t\t\t\t\t// if the child defines a parent, save a reference to the parent on the child\n\t\t\t\t\tif ( 'model' === child_data.type ) {\n\t\t\t\t\t\tthis._maybe_set_parent_reference( child );\n\n\t\t\t\t\t// save directly to each model in the collection\n\t\t\t\t\t} else if ( 'collection' === child_data.type ) {\n\n\t\t\t\t\t\tchild.parent = this;\n\t\t\t\t\t\tchild.each( function( child_model ) {\n\n\t\t\t\t\t\t\tthis._maybe_set_parent_reference( child_model );\n\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the property names for all children of the model\n\t\t * @return   array\n\t\t * @since    [version]\n\t\t * @version  [version]\n\t\t */\n\t\tget_child_props: function() {\n\n\t\t\tvar props = [];\n\n\t\t\t_.each( this.get_relationships().children, function( data, key ) {\n\n\t\t\t\tif ( ! data.conditional || true === data.conditional( this ) ) {\n\t\t\t\t\tprops.push( key );\n\t\t\t\t}\n\n\t\t\t}, this );\n\n\t\t\treturn props;\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the model's parent (if set)\n\t\t * @return   obj|false\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent: function() {\n\n\t\t\tvar rels = this.get_relationships();\n\n\t\t\tif ( rels.parent ) {\n\t\t\t\treturn rels.parent.reference;\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve relationships for the model\n\t\t * Extends with defaults\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_relationships: function() {\n\n\t\t\treturn $.extend( true, this.relationships, this.relationship_defaults );\n\n\t\t},\n\n\t\t/**\n\t\t * Set the parent reference for the given model\n\t\t * @param    obj   obj   parent model obj\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tset_parent: function( obj ) {\n\t\t\tthis.relationships.parent.reference = obj;\n\t\t},\n\n\t\t/**\n\t\t * Set up the parent relationships for qualifying children during relationship initialization\n\t\t * @param    obj   model  child model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_maybe_set_parent_reference: function( model ) {\n\n\t\t\tif ( ! model || ! model.get_relationships ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar rels = model.get_relationships();\n\t\t\tif ( rels.parent && rels.parent.model === this.get( 'type' ) ) {\n\t\t\t\tmodel.set_parent( this );\n\t\t\t}\n\n\t\t},\n\n\t};\n\n} );\n\n","/**\n * Quiz Question Choice\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/QuestionChoice',[ 'Models/Image', 'Models/_Relationships' ], function( Image, Relationships ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\t/**\n\t\t * Model relationships\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {\n\t\t\tparent: {\n\t\t\t\tmodel: 'llms_question',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tchoice: {\n\t\t\t\t\tconditional: function( model ) {\n\t\t\t\t\t\treturn ( 'image' === model.get( 'choice_type' ) );\n\t\t\t\t\t},\n\t\t\t\t\tclass: 'Image',\n\t\t\t\t\tmodel: 'image',\n\t\t\t\t\ttype: 'model',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Model defaults\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\tchoice: '',\n\t\t\t\tchoice_type: 'text',\n\t\t\t\tcorrect: false,\n\t\t\t\tmarker: 'A',\n\t\t\t\tquestion_id: '',\n\t\t\t\ttype: 'choice',\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Initializer\n\t\t * @param    obj   data     object of model attributes\n\t\t * @param    obj   options  additional options\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data, options ) {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships( options );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the choice's parent question\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent: function() {\n\t\t\treturn this.collection.parent;\n\t\t},\n\n\t\t/**\n\t\t * Determine if \"selection\" is enabled for the question type\n\t\t * Choice type questions are selectable by reorder type questions are not but still use choices\n\t\t * @return   {Boolean}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tis_selectable: function() {\n\t\t\treturn this.get_parent().get( 'question_type' ).get_choice_selectable();\n\t\t},\n\n\t}, Relationships ) );\n\n} );\n\n","/**\n * Question Choice Collection\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Collections/QuestionChoices',[ 'Models/QuestionChoice' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\tinitialize: function() {\n\n\t\t\t// reorder called by QuestionList view when sortable drops occur\n\t\t\tthis.on( 'reorder', this.update_order );\n\n\t\t\t// when a choice is added or removed, update order\n\t\t\tthis.on( 'add', this.update_order );\n\t\t\tthis.on( 'remove', this.update_order );\n\n\t\t\t// when a choice is added or remove, ensure min/max correct answers exist\n\t\t\tthis.on( 'add', this.update_correct );\n\t\t\tthis.on( 'remove', this.update_correct );\n\n\t\t\t// when a choice is toggled, ensure min/max correct exist\n\t\t\tthis.on( 'correct-update', this.update_correct );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the number of correct choices in the collection\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcount_correct: function() {\n\n\t\t\treturn _.size( this.get_correct() );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the collection reduced to only correct choices\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_correct: function() {\n\t\t\treturn this.filter( function( choice ) {\n\t\t\t\treturn choice.get( 'correct' );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Ensure min/max correct choices exist in the collection based on the question's settings\n\t\t * @param    obj      choice  model of the choice that was toggled\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_correct: function( choice ) {\n\n\t\t\tif ( ! this.parent.get( 'question_type' ).get_choice_selectable() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar siblings = this.without( choice ), // exclude the toggled choice from loops\n\t\t\t\tquestion = this.parent;\n\n\t\t\t// if multiple choices aren't enabled turn all other choices to incorrect\n\t\t\tif ( 'no' === question.get( 'multi_choices' ) ) {\n\t\t\t\t_.each( siblings, function( model ) {\n\t\t\t\t\tmodel.set( 'correct', false );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// if we don't have a single corret answer & the question has points, set one\n\t\t\t// allows users to create quizzes / questions with no points and therefore no correct answers are allowed\n\t\t\tif ( 0 === this.count_correct() && question.get( 'points' ) > 0 ) {\n\t\t\t\tvar models = 1 === this.size() ? this.models : siblings;\n\t\t\t\t_.first( models ).set( 'correct', true );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Update the marker attr of each choice in the list to reflect the order of the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_order: function() {\n\n\t\t\tvar self = this,\n\t\t\t\tquestion = this.parent;\n\n\t\t\tthis.each( function( choice ) {\n\t\t\t\tchoice.set( 'marker', question.get( 'question_type' ).get_choice_markers()[ self.indexOf( choice ) ] );\n\t\t\t} );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Quiz Question Type\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/QuestionType',[], function() {\n\n\treturn Backbone.Model.extend( {\n\n\t\t/**\n\t\t * Get model default attributes\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tchoices: false,\n\t\t\t\tclarifications: true,\n\t\t\t\tdefault_choices: [],\n\t\t\t\tdescription: true,\n\t\t\t\ticon: 'question',\n\t\t\t\tid: 'generic',\n\t\t\t\timage: true,\n\t\t\t\tkeywords: [],\n\t\t\t\tname: 'Generic',\n\t\t\t\tplaceholder: '',\n\t\t\t\tpoints: true,\n\t\t\t\tvideo: true,\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Retrieve an array of keywords for the question type\n\t\t * Used for filtering questions by search term in the quiz builder\n\t\t * @return   array\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_keywords: function() {\n\n\t\t\tvar name = this.get( 'name' ),\n\t\t\t\twords = [ name ];\n\n\t\t\treturn words.concat( this.get( 'keywords' ) ).concat( name.split( ' ' ) );\n\n\t\t},\n\n\t\t/**\n\t\t * Get marker array for the question choices\n\t\t * @return   array\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_choice_markers: function() {\n\n\t\t\treturn this._get_choice_option( 'markers' );\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if the question's choices are selectable\n\t\t * @return   bool\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_choice_selectable: function() {\n\n\t\t\treturn this._get_choice_option( 'selectable' );\n\n\t\t},\n\n\t\t/**\n\t\t * Get the choice type (text,image)\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_choice_type: function() {\n\n\t\t\treturn this._get_choice_option( 'type' );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve defined min. choices\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_min_choices: function() {\n\n\t\t\treturn this._get_choice_option( 'min' );\n\n\t\t},\n\n\t\t/**\n\t\t * Get type-defined max choices\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_max_choices: function() {\n\n\t\t\treturn this._get_choice_option( 'max' );\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if multi-choice selection is enabled\n\t\t * @return   bool\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_multi_choices: function() {\n\n\t\t\tvar choices = this.get( 'choices' );\n\n\t\t\tif ( ! choices  ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this._get_choice_option( 'multi' );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve data from the type's \"choices\" attribute\n\t\t * Allows quick handling of types with no choice definitions w/o additional checks\n\t\t * @param    string   option  name of the choice option to retrieve\n\t\t * @return   mixed\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_get_choice_option: function( option ) {\n\n\t\t\tvar choices = this.get( 'choices' );\n\n\t\t\tif ( ! choices || ! choices[ option ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn choices[ option ];\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Quiz Question\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/Question',[\n\t\t'Models/Image',\n\t\t'Collections/Questions',\n\t\t'Collections/QuestionChoices',\n\t\t'Models/QuestionType',\n\t\t'Models/_Relationships'\n\t], function(\n\t\tImage,\n\t\tQuestions,\n\t\tQuestionChoices,\n\t\tQuestionType,\n\t\tRelationships\n\t) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\t/**\n\t\t * Model relationships\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {\n\t\t\tparent: {\n\t\t\t\tmodel: 'llms_quiz',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tchoices: {\n\t\t\t\t\tclass: 'QuestionChoices',\n\t\t\t\t\tmodel: 'choice',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t\timage: {\n\t\t\t\t\tclass: 'Image',\n\t\t\t\t\tmodel: 'image',\n\t\t\t\t\ttype: 'model',\n\t\t\t\t},\n\t\t\t\tquestions: {\n\t\t\t\t\tclass: 'Questions',\n\t\t\t\t\tconditional: function( model ) {\n\t\t\t\t\t\tvar type = model.get( 'question_type' ),\n\t\t\t\t\t\t\ttype_id = _.isString( type ) ? type : type.get( 'id' );\n\t\t\t\t\t\treturn ( 'group' === type_id );\n\t\t\t\t\t},\n\t\t\t\t\tmodel: 'llms_question',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t\tquestion_type: {\n\t\t\t\t\tclass: 'QuestionType',\n\t\t\t\t\tlookup: function( val ) {\n\t\t\t\t\t\tif ( _.isString( val ) ) {\n\t\t\t\t\t\t\treturn window.llms_builder.questions.get( val );\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t},\n\t\t\t\t\tmodel: 'question_type',\n\t\t\t\t\ttype: 'model',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Model defaults\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\tchoices: [],\n\t\t\t\tcontent: '',\n\t\t\t\tdescription_enabled: 'no',\n\t\t\t\timage: {},\n\t\t\t\tmulti_choices: 'no',\n\t\t\t\tmenu_order: 1,\n\t\t\t\tpoints: 1,\n\t\t\t\tquestion_type: 'generic',\n\t\t\t\tquestions: [], // for question groups\n\t\t\t\tparent_id: '',\n\t\t\t\ttitle: '',\n\t\t\t\ttype: 'llms_question',\n\t\t\t\tvideo_enabled: 'no',\n\t\t\t\tvideo_src: '',\n\n\t\t\t\t_expanded: false,\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Initializer\n\t\t * @param    obj   data     object of data for the model\n\t\t * @param    obj   options  additional options\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data, options ) {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships( options );\n\n\t\t\tif ( false !== this.get( 'question_type' ).choices ) {\n\n\t\t\t\tthis._ensure_min_choices();\n\n\t\t\t\t// when a choice is removed, maybe add back some defaults so we always have the minimum\n\t\t\t\tthis.listenTo( this.get( 'choices' ), 'remove', function() {\n\t\t\t\t\t// new itmes are added at index 0 when there's only 1 item in the collection, not sure why exactly...\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\tself._ensure_min_choices();\n\t\t\t\t\t}, 0 );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\t// ensure question types that don't support points don't record default 1 point in database\n\t\t\tif ( ! this.get( 'question_type' ).get( 'points' ) ) {\n\t\t\t\tthis.set( 'points', 0 );\n\t\t\t}\n\n\t\t\t_.delay( function( self ) {\n\t\t\t\tself.on( 'change:points', self.get_parent().update_points, self.get_parent() );\n\t\t\t}, 1, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Add a new question choice\n\t\t * @param    obj   data     object of choice data\n\t\t * @param    obj   options  additional options\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_choice: function( data, options ) {\n\n\t\t\tvar max = this.get( 'question_type' ).get_max_choices();\n\t\t\tif ( this.get( 'choices' ).size() >= max ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata = data || {};\n\t\t\toptions = options || {};\n\n\t\t\tdata.choice_type = this.get( 'question_type' ).get_choice_type();\n\t\t\tdata.question_id = this.get( 'id' );\n\t\t\toptions.parent = this;\n\n\t\t\tvar choice = this.get( 'choices' ).add( data, options );\n\n\t\t\tBackbone.pubSub.trigger( 'question-add-choice', choice, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Collapse question_type attribute during full syncs to save to database\n\t\t * Not needed because question types cannot be adjusted after question creation\n\t\t * Called from sync controller\n\t\t * @param    obj      atts       flat object of attributes to be saved to db\n\t\t * @param    string   sync_type  full or partial\n\t\t *                                 full indicates a force resync or that the model isn't persisted yet\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tbefore_save: function( atts, sync_type  ) {\n\t\t\tif ( 'full' === sync_type ) {\n\t\t\t\tatts.question_type = this.get( 'question_type' ).get( 'id' );\n\t\t\t}\n\t\t\treturn atts;\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the model's parent (if set)\n\t\t * @return   obj|false\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent: function() {\n\n\t\t\tvar rels = this.get_relationships();\n\n\t\t\tif ( rels.parent ) {\n\t\t\t\tif ( this.collection && this.collection.parent ) {\n\t\t\t\t\treturn this.collection.parent;\n\t\t\t\t} else if ( rels.parent.reference ) {\n\t\t\t\t\treturn rels.parent.reference;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\t/**\n\t\t * Gets the index of the question within it's parent\n\t\t * Question numbers skip content elements\n\t\t * & content elements skip questions\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_type_index: function() {\n\n\t\t\t// current models type, used to check the predicate in the filter function below\n\t\t\tvar curr_type = this.get( 'question_type' ).get( 'id' ),\n\t\t\t\tquestions;\n\n\t\t\tquestions = this.collection.filter( function( question ) {\n\n\t\t\t\tvar type = question.get( 'question_type' ).get( 'id' );\n\n\t\t\t\t// if current model is not content, return all non-content questions\n\t\t\t\tif ( curr_type !== 'content' ) {\n\t\t\t\t\treturn ( 'content' !== type );\n\t\t\t\t}\n\n\t\t\t\t// current model is content, return only content questions\n\t\t\t\treturn 'content' === type;\n\n\t\t\t} );\n\n\t\t\treturn questions.indexOf( this );\n\n\t\t},\n\n\t\t/**\n\t\t * Gets iterator for the given type\n\t\t * Questions use numbers and content uses alphabet\n\t\t * @return   mixed\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_type_iterator: function() {\n\n\t\t\tvar index = this.get_type_index();\n\n\t\t\tif ( -1 === index ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif ( 'content' === this.get( 'question_type' ).get( 'id' ) ) {\n\t\t\t\tvar alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split( '' );\n\t\t\t\treturn alphabet[ index ];\n\t\t\t}\n\n\t\t\treturn index + 1;\n\n\t\t},\n\n\n\t\tget_qid: function() {\n\n\t\t\tvar parent = this.get_parent_question(),\n\t\t\t\tprefix = '';\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tprefix = parent.get_qid() + '.';\n\n\t\t\t}\n\n\t\t\t// return short_id + this.get_type_iterator();\n\t\t\treturn prefix + this.get_type_iterator();\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the parent question (if the question is in a question group)\n\t\t * @return   obj|false\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent_question: function() {\n\n\t\t\tif ( this.is_in_group() ) {\n\n\t\t\t\treturn this.collection.parent;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the parent quiz\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent_quiz: function() {\n\t\t\treturn this.get_parent();\n\t\t},\n\n\t\t/**\n\t\t * Points getter\n\t\t * ensures that 0 is always returned if the question type doesn't support points\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_points: function() {\n\n\t\t\tif ( ! this.get( 'question_type' ).get( 'points' ) ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn this.get( 'points' );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the questions percentage value within the quiz\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_points_percentage: function() {\n\n\t\t\tvar total = this.get_parent().get( '_points' ),\n\t\t\t\tpoints = this.get( 'points' );\n\n\t\t\tif ( 0 === total ) {\n\t\t\t\treturn '0%';\n\t\t\t}\n\n\t\t\treturn ( ( points / total ) * 100 ).toFixed( 2 ) + '%';\n\n\t\t},\n\n\t\t/**\n\t\t * Deterine if the question belongs to a question group\n\t\t * @return   {Boolean}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tis_in_group: function() {\n\n\t\t\treturn ( 'question' === this.collection.parent.get( 'type' ) );\n\n\t\t},\n\n\t\t_ensure_min_choices: function() {\n\n\t\t\tvar choices = this.get( 'choices' );\n\t\t\twhile ( choices.size() < this.get( 'question_type' ).get_min_choices() ) {\n\t\t\t\tthis.add_choice();\n\t\t\t}\n\n\t\t},\n\n\t}, Relationships ) );\n\n} );\n\n","/**\n * Questions Collection\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Collections/Questions',[ 'Models/Question' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\t/**\n\t\t * Initialize\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\t// reorder called by QuestionList view when sortable drops occur\n\t\t\tthis.on( 'reorder', this.update_order );\n\n\t\t\t// when a question is added or removed, update order\n\t\t\tthis.on( 'add', this.update_order );\n\t\t\tthis.on( 'remove', this.update_order );\n\n\t\t\tthis.on( 'add', this.update_parent );\n\n\t\t},\n\n\t\t/**\n\t\t * Update the order attr of each question in the list to reflect the order of the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_order: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.each( function( question ) {\n\n\t\t\t\tquestion.set( 'menu_order', self.indexOf( question ) + 1 );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * When adding a question to a question list, update the question's parent\n\t\t * Will ensure that questions moved into and out of groups always have the corerct parent_id\n\t\t * @param    obj   model  instance of the question model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_parent: function( model ) {\n\n\t\t\tmodel.set( 'parent_id', this.parent.get( 'id' ) );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Quiz Model\n * @since    3.16.0\n * @version  3.16.8\n */\ndefine( 'Models/Quiz',[ 'Collections/Questions', 'Models/Lesson', 'Models/Question', 'Models/_Relationships' ], function( Questions, Lesson, Question, Relationships ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\t/**\n\t\t * model relationships\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {\n\t\t\tparent: {\n\t\t\t\tmodel: 'lesson',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tquestions: {\n\t\t\t\t\tclass: 'Questions',\n\t\t\t\t\tmodel: 'llms_question',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * New lesson defaults\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.6\n\t\t */\n\t\tdefaults: function() {\n\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\ttitle: LLMS.l10n.translate( 'New Quiz' ),\n\t\t\t\ttype: 'llms_quiz',\n\t\t\t\tlesson_id: '',\n\n\t\t\t\tstatus: 'draft',\n\n\t\t\t\t// editable fields\n\t\t\t\tcontent: '',\n\t\t\t\tallowed_attempts: 5,\n\t\t\t\tlimit_attempts: 'no',\n\t\t\t\tlimit_time: 'no',\n\t\t\t\tpassing_percent: 65,\n\t\t\t\tname: '',\n\t\t\t\trandom_answers: 'no',\n\t\t\t\ttime_limit: 30,\n\t\t\t\tshow_correct_answer: 'no',\n\n\t\t\t\tquestions: [],\n\n\t\t\t\t// calculated\n\t\t\t\t_points: 0,\n\n\t\t\t\t// display\n\t\t\t\tpermalink: '',\n\t\t\t\t_show_settings: false,\n\t\t\t};\n\n\t\t},\n\n\t\t/**\n\t\t * Initializer\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.3\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships();\n\n\t\t\tthis.listenTo( this.get( 'questions' ), 'add', this.update_points );\n\t\t\tthis.listenTo( this.get( 'questions' ), 'remove', this.update_points );\n\n\t\t\tthis.set( '_points', this.get_total_points() );\n\n\t\t\t// when a quiz is published, ensure the parent lesson is marked as \"Enabled\" for quizzing\n\t\t\tthis.on( 'change:status', function() {\n\t\t\t\tif ( 'publish' === this.get( 'status' ) ) {\n\t\t\t\t\tthis.get_parent().set( 'quiz_enabled', 'yes' );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Add a new question to the quiz\n\t\t * @param    obj   data   question data\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_question: function( data ) {\n\n\t\t\tdata.parent_id = this.get( 'id' );\n\t\t\tvar question = this.get( 'questions' ).add( data, {\n\t\t\t\tparent: this,\n\t\t\t} );\n\t\t\tBackbone.pubSub.trigger( 'quiz-add-question', question, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the quiz's total points\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_total_points: function() {\n\n\t\t\tvar points = 0;\n\n\t\t\tthis.get( 'questions' ).each( function( question ) {\n\t\t\t\tpoints += question.get_points();\n\t\t\t} );\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**\n\t\t * Update total number of points calculated property\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_points: function() {\n\n\t\t\tthis.set( '_points', this.get_total_points() );\n\n\t\t},\n\n\t}, Relationships ) );\n\n} );\n\n","define( 'Models/_Utilities',[], function() {\n\n\treturn {\n\n\t\t/**\n\t\t * Retrieve the edit post link for the current model\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_edit_post_link: function() {\n\n\t\t\tif ( this.has_temp_id() ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn window.llms_builder.admin_url + 'post.php?post=' + this.get( 'id' ) + '&action=edit';\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if the model has a temporary ID\n\t\t * @return   {Boolean}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\thas_temp_id: function() {\n\n\t\t\treturn ( ! _.isNumber( this.get( 'id' ) ) && 0 === this.get( 'id' ).indexOf( 'temp_' ) );\n\n\t\t}\n\n\t};\n\n} );\n\n","/**\n * Lesson Model\n * @since    3.13.0\n * @version  3.16.4\n */\ndefine( 'Models/Lesson',[ 'Models/Quiz', 'Models/_Relationships', 'Models/_Utilities' ], function( Quiz, Relationships, Utilities ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\t/**\n\t\t * Model relationships\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {\n\t\t\tparents: {\n\t\t\t\tmodel: 'lesson',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tquiz: {\n\t\t\t\t\tclass: 'Quiz',\n\t\t\t\t\tconditional: function( model ) {\n\t\t\t\t\t\t// if quiz is enabled OR not enabled but we have some quiz data as an obj\n\t\t\t\t\t\treturn ( 'yes' === model.get( 'quiz_enabled' ) || ! _.isEmpty( model.get( 'quiz' ) ) );\n\t\t\t\t\t},\n\t\t\t\t\tmodel: 'llms_quiz',\n\t\t\t\t\ttype: 'model',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * New lesson defaults\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\ttitle: LLMS.l10n.translate( 'New Lesson' ),\n\t\t\t\ttype: 'lesson',\n\t\t\t\torder: this.collection ? this.collection.length + 1 : 1,\n\t\t\t\tparent_course: window.llms_builder.course.id,\n\t\t\t\tparent_section: '',\n\n\t\t\t\t// urls\n\t\t\t\tedit_url: '',\n\t\t\t\tview_url: '',\n\n\t\t\t\t// editable fields\n\t\t\t\tcontent: '',\n\t\t\t\taudio_embed: '',\n\t\t\t\tvideo_embed: '',\n\t\t\t\tfree_lesson: '',\n\n\t\t\t\t// other fields\n\t\t\t\tquiz: {}, // quiz model/data\n\t\t\t\tquiz_enabled: 'no',\n\n\t\t\t\t_forceSync: false,\n\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Initializer\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.4\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships();\n\n\t\t\t// if the lesson ID isn't set on a quiz, set it\n\t\t\tvar quiz = this.get( 'quiz' );\n\t\t\tif ( ! _.isEmpty( quiz ) && ! quiz.get( 'lesson_id' ) ) {\n\t\t\t\tquiz.set( 'lesson_id', this.get( 'id' ) );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve a reference to the parent course of the lesson\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_course: function() {\n\t\t\treturn this.get_parent().get_parent();\n\t\t},\n\n\t\t/**\n\t\t * Add a new quiz to the lesson\n\t\t * @param    obj   data   object of quiz data used to construct a new quiz model\n\t\t * @return   obj          model for the created quiz\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_quiz: function( data ) {\n\n\t\t\tdata = data || {};\n\n\t\t\tdata.lesson_id = this.id;\n\n\t\t\tif ( ! data.title ) {\n\n\t\t\t\tdata.title = this.get( 'title' ) + ' Quiz';\n\n\t\t\t}\n\n\t\t\tthis.set( 'quiz', data );\n\t\t\tthis.init_relationships();\n\n\t\t\tvar quiz = this.get( 'quiz' );\n\t\t\tthis.set( 'quiz_enabled', 'yes' );\n\n\t\t\treturn quiz;\n\n\t\t},\n\n\t}, Relationships, Utilities ) );\n\n} );\n\n","/**\n * Lessons Collection\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Collections/Lessons',[ 'Models/Lesson' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\tinitialize: function() {\n\n\t\t\tvar self = this;\n\n\t\t\t// reorder called by LessonList view when sortable drops occur\n\t\t\tthis.on( 'reorder', this.update_order );\n\n\t\t\t// when a lesson is added or removed, update order\n\t\t\tthis.on( 'add', this.update_order );\n\t\t\tthis.on( 'remove', this.update_order );\n\n\t\t},\n\n\t\t/**\n\t\t * Update the order attr of each section in the list to reflect the order of the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_order: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.each( function( lesson ) {\n\n\t\t\t\tlesson.set( 'order', self.indexOf( lesson ) + 1 );\n\n\t\t\t} );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Quiz Question Type Collection\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Collections/QuestionTypes',[ 'Models/QuestionType' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\t/**\n\t\t * Initializer\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.on( 'add', this.comparator );\n\t\t\tthis.on( 'remove', this.comparator );\n\n\t\t},\n\n\t\t/**\n\t\t * Comparator (sorts collection)\n\t\t * @param    obj   model  QuestionType model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcomparator: function( model ) {\n\n\t\t\treturn model.get( 'group' ).order;\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Section Model\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/Section',[ 'Collections/Lessons', 'Models/_Relationships' ], function( Lessons, Relationships ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\trelationships: {\n\t\t\tparent: {\n\t\t\t\tmodel: 'course',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tlessons: {\n\t\t\t\t\tclass: 'Lessons',\n\t\t\t\t\tmodel: 'lesson',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * New section defaults\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\tlessons: [],\n\t\t\t\torder: this.collection ? this.collection.length + 1 : 1,\n\t\t\t\tparent_course: window.llms_builder.course.id,\n\t\t\t\ttitle: LLMS.l10n.translate( 'New Section' ),\n\t\t\t\ttype: 'section',\n\n\t\t\t\t_expanded: false,\n\t\t\t\t_selected: false,\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Initialize\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships();\n\n\t\t},\n\n\t\t/**\n\t\t * Add a lesson to the section\n\t\t * @param    obj   data     hash of lesson data (creates new lesson)\n\t\t *                          or existing lesson as a Backbone.Model\n\t\t * @param    obj   options  has of options\n\t\t * @return   obj            Backbone.Model of the new/updated lesson\n\t\t * @since    3.16.0\n\t\t * @version  [version]\n\t\t */\n\t\tadd_lesson: function( data, options ) {\n\n\t\t\tdata = data || {};\n\t\t\toptions = options || {};\n\n\t\t\tif ( data instanceof Backbone.Model ) {\n\t\t\t\tdata.set( 'parent_section', this.get( 'id' ) );\n\t\t\t\tdata.set_parent( this );\n\t\t\t} else {\n\t\t\t\tdata.parent_section = this.get( 'id' );\n\t\t\t}\n\n\t\t\treturn this.get( 'lessons' ).add( data, options );\n\n\t\t},\n\n\t\t/**\n\t\t * Get next section in the collection\n\t\t * @param    bool     circular   if true handles the collection in a circle\n\t\t *                               \tif current is the last section, returns the first section\n\t\t *                               \tif current is the first section, returns the last section\n\t\t * @return   obj|false\n\t\t * @since    [version]\n\t\t * @version  [version]\n\t\t */\n\t\tget_next: function( circular ) {\n\t\t\treturn this._get_sibling( 'next', circular );\n\t\t},\n\n\t\t/**\n\t\t * Get prev section in the collection\n\t\t * @param    bool     circular   if true handles the collection in a circle\n\t\t *                               \tif current is the last section, returns the first section\n\t\t *                               \tif current is the first section, returns the last section\n\t\t * @return   obj|false\n\t\t * @since    [version]\n\t\t * @version  [version]\n\t\t */\n\t\tget_prev: function( circular ) {\n\t\t\treturn this._get_sibling( 'prev', circular );\n\t\t},\n\n\t\t/**\n\t\t * Get a sibling section\n\t\t * @param    string   direction  siblings direction [next|prev]\n\t\t * @param    bool     circular   if true handles the collection in a circle\n\t\t *                               \tif current is the last section, returns the first section\n\t\t *                               \tif current is the first section, returns the last section\n\t\t * @return   obj|false\n\t\t * @since    [version]\n\t\t * @version  [version]\n\t\t */\n\t\t_get_sibling: function( direction, circular ) {\n\n\t\t\tcircular = ( 'undefined' === circular ) ? true : circular;\n\n\t\t\tvar max = this.collection.size() - 1,\n\t\t\t\tindex = this.collection.indexOf( this ),\n\t\t\t\tsibling_index;\n\n\t\t\tif ( 'next' === direction ) {\n\t\t\t\tsibling_index = index + 1;\n\t\t\t} else if ( 'prev' === direction ) {\n\t\t\t\tsibling_index = index - 1;\n\t\t\t}\n\n\t\t\t// dont retrieve greater than max or less than min\n\t\t\tif ( sibling_index <= max || sibling_index <= 0 ) {\n\n\t\t\t\treturn this.collection.at( sibling_index );\n\n\t\t\t} else if ( circular ) {\n\n\t\t\t\tif ( 'next' === direction ) {\n\t\t\t\t\treturn this.collection.first();\n\t\t\t\t} else if ( 'prev' === direction ) {\n\t\t\t\t\treturn this.collection.last();\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t}, Relationships ) );\n\n} );\n\n","/**\n * Sections Collection\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Collections/Sections',[ 'Models/Section' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\t/**\n\t\t * Initialize\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tvar self = this;\n\n\t\t\t// reorder called by SectionList view when sortable drops occur\n\t\t\tthis.on( 'reorder', this.update_order );\n\n\t\t\t// when a section is added or removed, update order\n\t\t\tthis.on( 'add', this.update_order );\n\t\t\tthis.on( 'remove', this.update_order );\n\n\t\t},\n\n\t\t/**\n\t\t * Update the order attr of each section in the list to reflect the order of the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_order: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.each( function( section ) {\n\n\t\t\t\tsection.set( 'order', self.indexOf( section ) + 1 );\n\n\t\t\t} );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Lessons Collection\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Collections/loader',[\n\t\t'Collections/Lessons',\n\t\t'Collections/QuestionChoices',\n\t\t'Collections/Questions',\n\t\t'Collections/QuestionTypes',\n\t\t'Collections/Sections'\n\t], function(\n\t\tLessons,\n\t\tQuestionChoices,\n\t\tQuestions,\n\t\tQuestionTypes,\n\t\tSections\n\t) {\n\n\treturn {\n\t\tLessons: Lessons,\n\t\tQuestionChoices: QuestionChoices,\n\t\tQuestions: Questions,\n\t\tQuestionTypes: QuestionTypes,\n\t\tSections: Sections,\n\t};\n\n} );\n\n","/**\n * Course Model\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Models/Course',[ 'Collections/Sections', 'Models/_Relationships', 'Models/_Utilities' ], function( Sections, Relationships, Utilities ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\trelationships: {\n\t\t\tchildren: {\n\t\t\t\tsections: {\n\t\t\t\t\tclass: 'Sections',\n\t\t\t\t\tmodel: 'section',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * New Course Defaults\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version 3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tedit_url: '',\n\t\t\t\tsections: [],\n\t\t\t\ttitle: 'New Course',\n\t\t\t\ttype: 'course',\n\t\t\t\tview_url: '',\n\t\t\t}\n\t\t},\n\n\t\tinitialize: function() {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships();\n\n\t\t\t// Sidebar \"New Section\" button broadcast\n\t\t\tBackbone.pubSub.on( 'add-new-section', this.add_section, this );\n\n\t\t\t// Sidebar \"New Lesson\" button broadcast\n\t\t\tBackbone.pubSub.on( 'add-new-lesson', this.add_lesson, this );\n\n\t\t\tBackbone.pubSub.on( 'lesson-search-select', this.add_existing_lesson, this );\n\n\t\t},\n\n\t\tadd_existing_lesson: function( lesson ) {\n\n\t\t\tvar data = lesson.data;\n\n\t\t\tif ( 'clone' === lesson.action ) {\n\n\t\t\t\tdelete data.id;\n\n\t\t\t} else {\n\n\t\t\t\tdata._forceSync = true;\n\n\t\t\t}\n\n\t\t\tdelete data.order;\n\t\t\tdelete data.parent_course;\n\t\t\tdelete data.parent_section;\n\n\t\t\tthis.add_lesson( data );\n\n \t   \t \t// var added = this.add_lesson( data ),\n \t   \t \t// \ttemp = _.clone( added.attributes );\n\n \t   \t \t// _.each( [ 'order', 'parent_course', 'parent_section' ], function( key ) {\n\n \t   \t \t// \tconsole.log( key );\n\n \t   \t \t// \tadded.unset( key );\n \t   \t \t// \tadded.set( key, temp[key] );\n\n \t   \t \t// } );\n\n \t   \t \t// console.log( added );\n\n\n\t\t},\n\n\t\tadd_lesson: function( data ) {\n\n\t\t\tdata = data || {};\n\t\t\tvar options = {},\n\t\t\t\tsection;\n\n\t\t\tif ( ! data.parent_section ) {\n\t\t\t\tsection = this.get_selected_section();\n\t\t\t\tif ( ! section ) {\n\t\t\t\t\tsection = this.get( 'sections' ).last();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsection = this.get( 'sections' ).get( data.parent_section );\n\t\t\t}\n\n\t\t\tdata._selected = true;\n\n\t\t\tdata.parent_course = this.get( 'id' );\n\n\t\t\tvar lesson = section.add_lesson( data, options );\n\t\t\tBackbone.pubSub.trigger( 'new-lesson-added', lesson );\n\n\t\t\t// expand the section\n\t\t\tsection.set( '_expanded', true );\n\n\t\t\treturn lesson;\n\n\t\t},\n\n\t\tadd_section: function( data ) {\n\n\t\t\tdata = data || {};\n\t\t\tvar sections = this.get( 'sections' ),\n\t\t\t\toptions = {},\n\t\t\t\tselected = this.get_selected_section();\n\n\t\t\t// if a section is selected, add the new section after the currently selected one\n\t\t\tif ( selected ) {\n\t\t\t\toptions.at = sections.indexOf( selected ) + 1;\n\t\t\t}\n\n\t\t\tsections.add( data, options );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the currently selected section in the course\n\t\t * @return   obj|undefined\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_selected_section: function() {\n\n\t\t\treturn this.get( 'sections' ).find( function( model ) {\n\t\t\t\treturn model.get( '_selected' );\n\t\t\t} );\n\n\t\t},\n\n\t}, Relationships, Utilities ) );\n\n} );\n\n","/**\n * Load all models\n * @return   obj\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/loader',[\n\t\t'Models/Course',\n\t\t'Models/Image',\n\t\t'Models/Lesson',\n\t\t'Models/Question',\n\t\t'Models/QuestionChoice',\n\t\t'Models/QuestionType',\n\t\t'Models/Quiz',\n\t\t'Models/Section'\n\t],\n\tfunction(\n\t\tCourse,\n\t\tImage,\n\t\tLesson,\n\t\tQuestion,\n\t\tQuestionChoice,\n\t\tQuestionType,\n\t\tQuiz,\n\t\tSection\n\t) {\n\n\treturn {\n\t\tCourse: Course,\n\t\tImage: Image,\n\t\tLesson: Lesson,\n\t\tQuestion: Question,\n\t\tQuestionChoice: QuestionChoice,\n\t\tQuestionType: QuestionType,\n\t\tQuiz: Quiz,\n\t\tSection: Section,\n\t};\n\n} );\n\n","/**\n * Lessons Collection\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Controllers/Construct',[\n\t\t'Collections/loader',\n\t\t'Models/loader',\n\t], function(\n\t\tCollections,\n\t\tModels\n\t) {\n\n\treturn function() {\n\n\t\t/**\n\t\t * Internal getter\n\t\t * Constructs new Collections, Models, and Views\n\t\t * @param    obj      type     type of object to construct [Collection,Model,View]\n\t\t * @param    string   name     name of the object to construct\n\t\t * @param    obj      data     object data to pass into the object's constructor\n\t\t * @param    obj      options  object options to pass into the constructor\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction get( type, name, data, options ) {\n\n\t\t\tif ( ! type[ name ] ) {\n\t\t\t\tconsole.log( ' \"' + name + '\" not found.' );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn new type[ name ]( data, options );\n\n\t\t}\n\n\t\tthis.get_collection = function( name, data, options ) {\n\n\t\t\treturn get( Collections, name, data, options );\n\n\t\t};\n\n\t\tthis.get_model = function( name, data, options ) {\n\n\t\t\treturn get( Models, name, data, options );\n\n\t\t};\n\n\t\treturn this;\n\n\t};\n\n} );\n\n","/**\n * LifterLMS Builder Debugging suite\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Controllers/Debug',[], function() {\n\n \treturn function( settings ) {\n\n \t\tvar self = this,\n \t\t\tenabled = settings.enabled || false;\n\n\t\t/**\n\t\t * Disable debugging\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n \t\tthis.disable = function() {\n\n \t\t\tself.log( 'LifterLMS Builder debugging disabled' );\n \t\t\tenabled = false;\n\n \t\t};\n\n\t\t/**\n\t\t * Enable debugging\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n \t\tthis.enable = function() {\n\n \t\t\tenabled = true;\n \t\t\tself.log( 'LifterLMS Builder debugging enabled' );\n\n \t\t};\n\n \t\t/**\n \t\t * General logging function\n \t\t * Logs to the js console only if logging is enabled\n \t\t * @return   void\n \t\t * @since    3.16.0\n \t\t * @version  3.16.0\n \t\t */\n \t\tthis.log = function() {\n\n\t\t\tif ( ! enabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.each( arguments, function( data ) {\n\t\t\t\tconsole.log( data );\n\t\t\t} );\n\n \t\t};\n\n \t\t/**\n \t\t * Toggles current state of the logger on or off\n \t\t * @return   void\n \t\t * @since    3.16.0\n \t\t * @version  3.16.0\n \t\t */\n \t\tthis.toggle = function() {\n\n\t\t\tif ( enabled ) {\n\t\t\t\tself.disable();\n\t\t\t} else {\n\t\t\t\tself.enable();\n\t\t\t}\n\n \t\t};\n\n \t\t// on startup, log a message if logging is enabled\n \t\tif ( enabled ) {\n \t\t\tself.enable();\n \t\t}\n\n \t}\n\n } );\n\n","/**\n * Sync builder data to the server\n * @since    3.16.0\n * @version  [version]\n */\ndefine( 'Controllers/Sync',[], function() {\n\n \treturn function( Course, settings ) {\n\n \t\tthis.saving = false;\n\n \t\tvar self = this,\n \t\t\tautosave = true,\n \t\t\tcheck_interval = null,\n \t\t\tcheck_interval_ms = settings.check_interval_ms || 10000,\n \t\t\tdetached = new Backbone.Collection(),\n \t\t\ttrashed = new Backbone.Collection();\n\n\t\t/**\n\t\t * init\n\t\t * @return   void\n\t\t * @since    3.16.7\n\t\t * @version  3.16.7\n\t\t */\n \t\tfunction init() {\n\n \t\t\t// determine if autosaving is possible\n \t\t\tif ( 'undefined' === typeof wp.heartbeat ) {\n\n \t\t\t\twindow.llms_builder.debug.log( 'WordPress Heartbeat disabled. Autosaving is disabled!' );\n \t\t\t\tautosave = false;\n\n \t\t\t}\n\n\t\t\t// setup the check interval\n\t\t\tif ( check_interval_ms ) {\n\t\t\t\tself.set_check_interval( check_interval_ms );\n\t\t\t}\n\n\t\t\t// warn when users attempt to leave the page\n\t\t\t$( window ).on( 'beforeunload', function() {\n\n\t\t\t\tif ( self.has_unsaved_changes() ) {\n\t\t\t\t\tcheck_for_changes();\n\t\t\t\t\treturn 'Are you sure you want to abandon your changes?';\n\t\t\t\t}\n\n\t\t\t} );\n\n \t\t};\n\n \t\t/*\n \t\t\t /$$             /$$                                             /$$                           /$$\n \t\t\t|__/            | $$                                            | $$                          |__/\n \t\t\t /$$ /$$$$$$$  /$$$$$$    /$$$$$$   /$$$$$$  /$$$$$$$   /$$$$$$ | $$        /$$$$$$   /$$$$$$  /$$\n \t\t\t| $$| $$__  $$|_  $$_/   /$$__  $$ /$$__  $$| $$__  $$ |____  $$| $$       |____  $$ /$$__  $$| $$\n \t\t\t| $$| $$  \\ $$  | $$    | $$$$$$$$| $$  \\__/| $$  \\ $$  /$$$$$$$| $$        /$$$$$$$| $$  \\ $$| $$\n \t\t\t| $$| $$  | $$  | $$ /$$| $$_____/| $$      | $$  | $$ /$$__  $$| $$       /$$__  $$| $$  | $$| $$\n \t\t\t| $$| $$  | $$  |  $$$$/|  $$$$$$$| $$      | $$  | $$|  $$$$$$$| $$      |  $$$$$$$| $$$$$$$/| $$\n \t\t\t|__/|__/  |__/   \\___/   \\_______/|__/      |__/  |__/ \\_______/|__/       \\_______/| $$____/ |__/\n \t\t\t                                                                                    | $$\n \t\t\t                                                                                    | $$\n \t\t\t                                                                                    |__/\n \t\t*/\n\n \t\t/**\n \t\t * Adds error message(s) to the data object returned by heartbeat-tick\n \t\t * @param    obj            data  llms_builder data object from heartbeat-tick\n \t\t * @param    string|array   err   error messages array or string\n \t\t * @return   obj\n \t\t * @since    3.16.0\n \t\t * @version  3.16.0\n \t\t */\n\t\tfunction add_error_msg( data, err ) {\n\n\t\t\tif ( 'success' === data.status ) {\n\t\t\t\tdata.message = [];\n\t\t\t}\n\n\t\t\tdata.status = 'error';\n\t\t\tif ( 'string' === typeof err ) {\n\t\t\t\terr = [ err ];\n\t\t\t}\n\t\t\tdata.message = data.message.concat( err );\n\n\t\t\treturn data;\n\n\t\t};\n\n\t\t/**\n\t\t * Publish sync status so other areas of the application can see what's happening here\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction check_for_changes() {\n\n\t\t\tvar data = {};\n\t\t\tdata.changes = self.get_unsaved_changes();\n\t\t\tdata.has_unsaved_changes = self.has_unsaved_changes( data.changes );\n\t\t\tdata.saving = self.saving;\n\n\t\t\twindow.llms_builder.debug.log( '==== start changes check ====', data, '==== finish changes check ====' );\n\n\t\t\tBackbone.pubSub.trigger( 'current-save-status', data );\n\n\t\t};\n\n\t\t/**\n\t\t * Manually Save data via Admin AJAX when the heartbeat API has been disabled\n\t\t * @return   void\n\t\t * @since    3.16.7\n\t\t * @version  3.16.7\n\t\t */\n\t\tfunction do_ajax_save() {\n\n\t\t\t// prevent simultaneous saves\n\t\t\tif ( self.saving ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar changes = self.get_unsaved_changes();\n\n\t\t\t// only send data if we have data to send\n\t\t\tif ( self.has_unsaved_changes( changes ) ) {\n\n\t\t\t\tchanges.id = Course.get( 'id' );\n\n\t\t\t\tLLMS.Ajax.call( {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'llms_builder',\n\t\t\t\t\t\taction_type: 'ajax_save',\n\t\t\t\t\t\tcourse_id: changes.id,\n\t\t\t\t\t\tllms_builder: JSON.stringify( changes ),\n\t\t\t\t\t},\n\t\t\t\t\tbeforeSend: function() {\n\n\t\t\t\t\t\twindow.llms_builder.debug.log( '==== start do_ajax_save before ====', changes, '==== finish do_ajax_save before ====' );\n\n\t\t\t\t\t\tself.saving = true;\n\n\t\t\t\t\t\tBackbone.pubSub.trigger( 'heartbeat-send', self );\n\n\t\t\t\t\t},\n\t\t\t\t\terror: function( xhr, status, error ) {\n\n\t\t\t\t\t\twindow.llms_builder.debug.log( '==== start do_ajax_save error ====', data, '==== finish do_ajax_save error ====' );\n\n\t\t\t\t\t\tself.saving = false;\n\n\t\t\t\t\t\tBackbone.pubSub.trigger( 'heartbeat-tick', self, {\n\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\tmessage: xhr.responseText + ' (' + error + ' ' + status +')',\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function( res ) {\n\n\t\t\t\t\t\tif ( ! res.llms_builder ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow.llms_builder.debug.log( '==== start do_ajax_save success ====', res, '==== finish do_ajax_save success ====' );\n\n\t\t\t\t\t\tres.llms_builder = process_removals( res.llms_builder );\n\t\t\t\t\t\tres.llms_builder = process_updates( res.llms_builder );\n\n\t\t\t\t\t\tself.saving = false;\n\n\t\t\t\t\t\tBackbone.pubSub.trigger( 'heartbeat-tick', self, res.llms_builder );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\n\t\t};\n\n\t\t/**\n\t\t * Retrieve all the attributes changed on a model since the last sync\n\t\t *\n\t\t * For a new model (a model with a temp ID) or a model where _forceSync has been defined ALL atts will be returned\n\t\t * For an existing model (without a temp ID) only retrieves changed attributes as tracked by Backbone.TrackIt\n\t\t *\n\t\t * This function excludes any attributes defined as child attributes via the models relationship settings\n\t\t *\n\t\t * @param    obj   model  instance of a Backbone.Model\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  [version]\n\t\t */\n\t\tfunction get_changed_attributes( model ) {\n\n\t\t\tvar atts = {},\n\t\t\t\tsync_type;\n\n\t\t\t// model hasn't been persisted to the database to get a real ID yet\n\t\t\t// send *all* of it's atts\n\t\t\tif ( has_temp_id( model ) || true === model.get( '_forceSync' ) ) {\n\n\t\t\t\tatts = _.clone( model.attributes );\n\t\t\t\tsync_type = 'full';\n\n\t\t\t// only send the changed atts\n\t\t\t} else {\n\n\t\t\t\tatts = model.unsavedAttributes();\n\t\t\t\tsync_type = 'partial';\n\n\t\t\t}\n\n\t\t\tvar exclude = ( model.get_relationships ) ? model.get_child_props() : [];\n\t\t\tatts = _.omit( atts, function( val, key ) {\n\n\t\t\t\t// exclude keys that start with an underscore which are used by the\n\t\t\t\t// application but don't need to be stored in the database\n\t\t\t\tif ( 0 === key.indexOf( '_' ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if ( -1 !== exclude.indexOf( key ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\n\t\t\t} );\n\n\t\t\tif ( model.before_save ) {\n\t\t\t\tatts = model.before_save( atts, sync_type );\n\t\t\t}\n\n\t\t\treturn atts;\n\n\t\t};\n\n\t\t/**\n\t\t * Get all the changes to an object (either a Model or a Collection of models)\n\t\t * Returns only changes to models and the IDs of that model (should changes exist)\n\t\t * Uses get_changed_attributes() to determine if all atts or only changed atts are needed\n\t\t * Processes children intelligently to only return changed children rather than the entire collection of children\n\t\t *\n\t\t * @param    obj        object  instance of a Backbone.Model or Backbone.Collection\n\t\t * @return   obj|array\t  \t\tif object is a model, returns an object\n\t\t *                            \tif object is a collection, returns an array of objects\n\t\t * @since    3.16.0\n\t\t * @version  [version]\n\t\t */\n\t\tfunction get_changes_to_object( object ) {\n\n\t\t\tvar changed_atts;\n\n\t\t\tif ( object instanceof Backbone.Model ) {\n\n\t\t\t\tchanged_atts = get_changed_attributes( object );\n\n\t\t\t\tif ( object.get_relationships ) {\n\n\t\t\t\t\t_.each( object.get_child_props(), function( prop ) {\n\n\t\t\t\t\t\tvar children = get_changes_to_object( object.get( prop ) );\n\t\t\t\t\t\tif ( ! _.isEmpty( children ) ) {\n\t\t\t\t\t\t\tchanged_atts[ prop ] = children;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\t// if we have any data, add the id to the model\n\t\t\t\tif ( ! _.isEmpty( changed_atts ) ) {\n\t\t\t\t\tchanged_atts.id = object.get( 'id' );\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof Backbone.Collection ) {\n\n\t\t\t\tchanged_atts = [];\n\t\t\t\tobject.each( function( model ) {\n\t\t\t\t\tvar model_changes = get_changes_to_object( model );\n\t\t\t\t\tif ( ! _.isEmpty( model_changes ) ) {\n\t\t\t\t\t\tchanged_atts.push( model_changes );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn changed_atts;\n\n\t\t};\n\n\t\t/**\n\t\t * Determines if a model has a temporary ID or a real persisted ID\n\t\t * @param    obj   model  instance of a model\n\t\t * @return   boolean\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction has_temp_id( model ) {\n\n\t\t\treturn ( ! _.isNumber( model.id ) && 0 === model.id.indexOf( 'temp_' ) );\n\n\t\t};\n\n\t\t/**\n\t\t * Compares changes synced to the server against current model and restarts\n\t\t * tracking on elements that haven't changed since the last sync\n\t\t * @param    obj   model  instance of a Backbone.Model\n\t\t * @param    obj   data   data set that was processed by the server\n\t\t * @return   void\n\t\t * @since    [version]\n\t\t * @version  [version]\n\t\t */\n\t\tfunction maybe_restart_tracking( model, data ) {\n\n\t\t\tvar omit = [ 'id', 'orig_id' ];\n\t\t\tif ( model.get_relationships ) {\n\t\t\t\tomit.concat( model.get_child_props() );\n\t\t\t}\n\n\t\t\t_.each( _.omit( data, omit ), function( val, prop ) {\n\n\t\t\t\tif ( _.isEqual( model.get( prop ), val ) ) {\n\t\t\t\t\tdelete model._unsavedChanges[ prop ];\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Processes response data from heartbeat-tick related to trashing & detaching models\n\t\t * On success, removes from local removal collection\n\t\t * On error, appends error messages to the data object returned to UI for on-screen feedback\n\t\t * @param    obj   data  data.llms_builder object from heartbeat-tick response\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction process_removals( data ) {\n\n\t\t\t// check removals for errors\n\t\t\tvar removals = {\n\t\t\t\tdetach: detached,\n\t\t\t\ttrash: trashed,\n\t\t\t};\n\n\t\t\t_.each( removals, function( coll, key ) {\n\n\t\t\t\tif ( data[ key ] ) {\n\n\t\t\t\t\tvar errors = [];\n\n\t\t\t\t\t_.each( data[ key ] , function( info ) {\n\n\t\t\t\t\t\t// succesfully detached, remove it from the detached collection\n\t\t\t\t\t\tif ( ! info.error ) {\n\n\t\t\t\t\t\t\t// regular ids for lessons, sections, questions\n\t\t\t\t\t\t\tif ( $.isNumeric( info.id ) ) {\n\t\t\t\t\t\t\t\tcoll.remove( info.id );\n\n\t\t\t\t\t\t\t// choices formatted as question_id:choice_id\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar split = info.id.split( ':' );\n\t\t\t\t\t\t\t\tcoll.remove( split[1] );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\terrors.push( info.error );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( errors.length ) {\n\t\t\t\t\t\t_.extend( data, add_error_msg( data, errors ) );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn data;\n\t\t}\n\n\t\t/**\n\t\t * Processes response data from heartbeat-tick related to creating / updating a single object\n\t\t * Handles both collections and models as a recursive function\n\t\t * @param    {[type]}   data       [description]\n\t\t * @param    {[type]}   type       [description]\n\t\t * @param    {[type]}   parent     [description]\n\t\t * @param    {[type]}   main_data  [description]\n\t\t * @return   {[type]}\n\t\t * @since    3.16.0\n\t\t * @version  [version]\n\t\t */\n\t\tfunction process_object_updates( data, type, parent, main_data ) {\n\n\t\t\tif ( ! data[ type ] ) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif ( parent.get( type ) instanceof Backbone.Model ) {\n\n\t\t\t\tvar info = data[ type ];\n\n\t\t\t\tif ( info.error ) {\n\n\t\t\t\t\t_.extend( main_data, add_error_msg( main_data, info.error ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar model = parent.get( type );\n\n\t\t\t\t\t// update temp ids with the real id\n\t\t\t\t\tif ( info.id != info.orig_id ) {\n\t\t\t\t\t\tmodel.set( 'id', info.id );\n\t\t\t\t\t\tdelete model._unsavedChanges.id;\n\t\t\t\t\t}\n\t\t\t\t\tmaybe_restart_tracking( model, info );\n\n\t\t\t\t\t// check children\n\t\t\t\t\tif ( model.get_relationships ) {\n\n\t\t\t\t\t\t_.each( model.get_child_props(), function( child_key ) {\n\t\t\t\t\t\t\t_.extend( data[ type ], process_object_updates( data[ type ], child_key, model, main_data ) );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( parent.get( type ) instanceof Backbone.Collection ) {\n\n\t\t\t\t_.each( data[ type ], function( info, index ) {\n\n\t\t\t\t\tif ( info.error ) {\n\n\t\t\t\t\t\t_.extend( main_data, add_error_msg( main_data, info.error ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar model = parent.get( type ).get( info.orig_id );\n\n\t\t\t\t\t\t// update temp ids with the real id\n\t\t\t\t\t\tif ( info.id != info.orig_id ) {\n\t\t\t\t\t\t\tmodel.set( 'id', info.id );\n\t\t\t\t\t\t\tdelete model._unsavedChanges.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmaybe_restart_tracking( model, info );\n\n\t\t\t\t\t\t// check children\n\t\t\t\t\t\tif ( model.get_relationships ) {\n\n\t\t\t\t\t\t\t_.each( model.get_child_props(), function( child_key ) {\n\t\t\t\t\t\t\t\t_.extend( data[ type ], process_object_updates( data[ type ][ index ], child_key, model, main_data ) );\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn main_data;\n\n\t\t};\n\n\t\t/**\n\t\t * Processes response data from heartbeat-tick related to updating & creating new models\n\t\t * On success, removes from local removal collection\n\t\t * On error, appends error messages to the data object returned to UI for on-screen feedback\n\t\t * @param    obj   data  data.llms_builder object from heartbeat-tick response\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction process_updates( data ) {\n\n\t\t\t// only mess with updates data\n\t\t\tif ( ! data.updates ) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif ( data.updates ) {\n\t\t\t\tdata = process_object_updates( data.updates, 'sections', Course, data );\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t};\n\n\t\t/*\n\t\t\t                     /$$       /$$ /$$                                     /$$\n\t\t\t                    | $$      | $$|__/                                    |__/\n\t\t\t  /$$$$$$  /$$   /$$| $$$$$$$ | $$ /$$  /$$$$$$$        /$$$$$$   /$$$$$$  /$$\n\t\t\t /$$__  $$| $$  | $$| $$__  $$| $$| $$ /$$_____/       |____  $$ /$$__  $$| $$\n\t\t\t| $$  \\ $$| $$  | $$| $$  \\ $$| $$| $$| $$              /$$$$$$$| $$  \\ $$| $$\n\t\t\t| $$  | $$| $$  | $$| $$  | $$| $$| $$| $$             /$$__  $$| $$  | $$| $$\n\t\t\t| $$$$$$$/|  $$$$$$/| $$$$$$$/| $$| $$|  $$$$$$$      |  $$$$$$$| $$$$$$$/| $$\n\t\t\t| $$____/  \\______/ |_______/ |__/|__/ \\_______/       \\_______/| $$____/ |__/\n\t\t\t| $$                                                            | $$\n\t\t\t| $$                                                            | $$\n\t\t\t|__/                                                            |__/\n\t\t*/\n\n\t\t/**\n\t\t * Retrieve all unsaved changes for the builder instance\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tthis.get_unsaved_changes = function() {\n\n\t\t\tvar trash_items = [];\n\n\t\t\ttrashed.each( function( data ) {\n\n\t\t\t\tif ( 'choice' === data.get( 'type' ) ) {\n\t\t\t\t\ttrash_items.push( data.get( 'question_id' ) + ':' + data.get( 'id' ) );\n\t\t\t\t} else {\n\t\t\t\t\ttrash_items.push( data.get( 'id' ) );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn {\n\t\t\t\tdetach: detached.pluck( 'id' ),\n\t\t\t\ttrash: trash_items,\n\t\t\t\tupdates: get_changes_to_object( Course ),\n\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Check if the builder instance has unsaved changes\n\t\t * @param    obj      changes    optionally pass in an object from the return of this.get_unsaved_changes()\n\t\t *                               save some resources by not running the check twice during heartbeats\n\t\t * @return   boolean\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tthis.has_unsaved_changes = function( changes ) {\n\n\t\t\tif ( 'undefined' === typeof changes ) {\n\t\t\t\tchanges = self.get_unsaved_changes();\n\t\t\t}\n\n\t\t\t// check all possible keys, once we find one with content we have some changes to persist\n\t\t\tvar found = _.find( changes, function( data ) {\n\n\t\t\t\treturn ( false === _.isEmpty( data ) );\n\n\t\t\t} );\n\n\t\t\treturn found ? true : false;\n\n\t\t};\n\n\t\t/**\n\t\t * Save changes right now.\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.7\n\t\t */\n\t\tthis.save_now = function() {\n\t\t\tif ( autosave ) {\n\t\t\t\twp.heartbeat.connectNow();\n\t\t\t} else {\n\t\t\t\tdo_ajax_save();\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Update the interval that checks for changes to the builder instance\n\t\t * @param    int        ms   time (in milliseconds) to run the check on\n\t\t *                           pass 0 to disable the check\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tthis.set_check_interval = function( ms ) {\n\t\t\tcheck_interval_ms = ms;\n\t\t\tif ( check_interval ) {\n\t\t\t\tclearInterval( check_interval );\n\t\t\t}\n\t\t\tif ( check_interval_ms ) {\n\t\t\t\tcheck_interval = setInterval( check_for_changes, check_interval_ms );\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t\t /$$ /$$             /$$\n\t\t\t| $$|__/            | $$\n\t\t\t| $$ /$$  /$$$$$$$ /$$$$$$    /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$   /$$$$$$$\n\t\t\t| $$| $$ /$$_____/|_  $$_/   /$$__  $$| $$__  $$ /$$__  $$ /$$__  $$ /$$_____/\n\t\t\t| $$| $$|  $$$$$$   | $$    | $$$$$$$$| $$  \\ $$| $$$$$$$$| $$  \\__/|  $$$$$$\n\t\t\t| $$| $$ \\____  $$  | $$ /$$| $$_____/| $$  | $$| $$_____/| $$       \\____  $$\n\t\t\t| $$| $$ /$$$$$$$/  |  $$$$/|  $$$$$$$| $$  | $$|  $$$$$$$| $$       /$$$$$$$/\n\t\t\t|__/|__/|_______/    \\___/   \\_______/|__/  |__/ \\_______/|__/      |_______/\n\t\t*/\n\n\t\t/**\n\t\t * Listen for detached models and send them to the server for persistence\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tBackbone.pubSub.on( 'model-detached', function( model ) {\n\n\t\t\t// detached models with temp ids haven't been persisted so we don't care\n\t\t\tif ( has_temp_id( model ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdetached.add( _.clone( model.attributes ) );\n\n\t\t} );\n\n\t\t/**\n\t\t * Listen for trashed models and send them to the server for deletion\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tBackbone.pubSub.on( 'model-trashed', function( model ) {\n\n\t\t\t// if the model has a temp ID we don't have to persist the deletion\n\t\t\tif ( has_temp_id( model ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttrashed.add( _.clone( model.attributes ) );\n\n\t\t} );\n\n\t\t/*\n\t\t\t /$$                                       /$$     /$$                             /$$\n\t\t\t| $$                                      | $$    | $$                            | $$\n\t\t\t| $$$$$$$   /$$$$$$   /$$$$$$   /$$$$$$  /$$$$$$  | $$$$$$$   /$$$$$$   /$$$$$$  /$$$$$$\n\t\t\t| $$__  $$ /$$__  $$ |____  $$ /$$__  $$|_  $$_/  | $$__  $$ /$$__  $$ |____  $$|_  $$_/\n\t\t\t| $$  \\ $$| $$$$$$$$  /$$$$$$$| $$  \\__/  | $$    | $$  \\ $$| $$$$$$$$  /$$$$$$$  | $$\n\t\t\t| $$  | $$| $$_____/ /$$__  $$| $$        | $$ /$$| $$  | $$| $$_____/ /$$__  $$  | $$ /$$\n\t\t\t| $$  | $$|  $$$$$$$|  $$$$$$$| $$        |  $$$$/| $$$$$$$/|  $$$$$$$|  $$$$$$$  |  $$$$/\n\t\t\t|__/  |__/ \\_______/ \\_______/|__/         \\___/  |_______/  \\_______/ \\_______/   \\___/\n\t\t*/\n\n\t\t/**\n\t\t * Add data to the WP heartbeat to persist new models, changes, and deletions to the DB\n\t\t * @since    3.16.0\n\t\t * @version  3.16.7\n\t\t */\n\t\t$( document ).on( 'heartbeat-send', function( event, data ) {\n\n\t\t\t// prevent simultaneous saves\n\t\t\tif ( self.saving ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar changes = self.get_unsaved_changes();\n\n\t\t\t// only send data if we have data to send\n\t\t\tif ( self.has_unsaved_changes( changes ) ) {\n\n\t\t\t\tchanges.id = Course.get( 'id' );\n\t\t\t\tself.saving = true;\n\t\t\t\tdata.llms_builder = JSON.stringify( changes );\n\n\t\t\t}\n\n\t\t\twindow.llms_builder.debug.log( '==== start heartbeat-send ====', data, '==== finish heartbeat-send ====' );\n\n\t\t\tBackbone.pubSub.trigger( 'heartbeat-send', self );\n\n\t\t} );\n\n\t\t/**\n\t\t * Confirm detachments & deletions and replace temp IDs with new persisted IDs\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t$( document ).on( 'heartbeat-tick', function( event, data ) {\n\n\t\t\tif ( ! data.llms_builder ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twindow.llms_builder.debug.log( '==== start heartbeat-tick ====', data, '==== finish heartbeat-tick ====' );\n\n\t\t\tdata.llms_builder = process_removals( data.llms_builder );\n\t\t\tdata.llms_builder = process_updates( data.llms_builder );\n\n\t\t\tself.saving = false;\n\n\t\t\tBackbone.pubSub.trigger( 'heartbeat-tick', self, data.llms_builder );\n\n\t\t} );\n\n\t\t/**\n\t\t * On heartbeat errors publish an error to the main builder application\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t$( document ).on( 'heartbeat-error', function( event, data ) {\n\n\t\t\twindow.llms_builder.debug.log( '==== start heartbeat-error ====', data, '==== finish heartbeat-error ====' );\n\n\t\t\tself.saving = false;\n\n\t\t\tBackbone.pubSub.trigger( 'heartbeat-tick', self, {\n\t\t\t\tstatus: 'error',\n\t\t\t\tmessage: data.responseText + ' (' + data.status + ' ' + data.statusText +')',\n\t\t\t} );\n\n\t\t} );\n\n\t\t/*\n\t\t\t /$$           /$$   /$$\n\t\t\t|__/          |__/  | $$\n\t\t\t /$$ /$$$$$$$  /$$ /$$$$$$\n\t\t\t| $$| $$__  $$| $$|_  $$_/\n\t\t\t| $$| $$  \\ $$| $$  | $$\n\t\t\t| $$| $$  | $$| $$  | $$ /$$\n\t\t\t| $$| $$  | $$| $$  |  $$$$/\n\t\t\t|__/|__/  |__/|__/   \\___/\n\t\t*/\n\t\tinit();\n\n\t\treturn this;\n\n\t};\n\n} );\n\n","define( 'Views/Editors/wysiwyg',[], function() {\n\n\treturn Backbone.Form.editors.TextArea.extend({\n\n\t\tinitialize: function(options) {\n\n\t\t\t// Call parent constructor\n\t\t\tBackbone.Form.editors.Base.prototype.initialize.call(this, options);\n\n\t\t},\n\n\t\trender: function() {\n\n\t\t\tthis.setValue( this.value );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Load Tiny MCE on the editor\n\t\t * @return   {[type]}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tload_tinymce: function() {\n\n\t\t\t// broadcast so other instances can unload the editor before loading a new one\n\t\t\tBackbone.pubSub.trigger( 'pre-load-wysiwyg-editor' );\n\n\t\t\twp.editor.initialize( this._get_id(), $.extend( true, wp.editor.getDefaultSettings(), {\n\t\t\t\tmediaButtons: true,\n\t\t\t\ttinymce: {\n\t\t\t\t\ttoolbar1: 'bold,italic,strikethrough,bullist,numlist,blockquote,hr,alignleft,aligncenter,alignright,link,unlink,wp_more,spellchecker,wp_fullscreen,wp_adv',\n\t\t\t\t\ttoolbar2: 'formatselect,underline,alignjustify,forecolor,pastetext,removeformat,charmap,outdent,indent,undo,redo,wp_help',\n\t\t\t\t\tsetup: _.bind( this.on_ready, this ),\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t},\n\n\t\tunload_tinymce: function() {\n\n\t\t\twp.editor.remove( this._get_id() );\n\n\t\t},\n\n\t\tgetValue: function() {\n\t\t\treturn wp.editor.getContent( this._get_id() );\n\t\t},\n\n\t\tsetValue: function( value ) {\n\t\t\tthis.$el.val( value );\n\t\t},\n\n\t\tfocus: function() {\n\t\t\tif (this.hasFocus) return;\n\n\t\t\t// This method call should result in an input within this editor\n\t\t\t// becoming the `document.activeElement`.\n\t\t\t// This, in turn, should result in this editor's `focus` event\n\t\t\t// being triggered, setting `this.hasFocus` to `true`.\n\t\t\t// See above for more detail.\n\t\t\tthis.$el.focus();\n\t\t},\n\n\t\tblur: function() {\n\t\t\tif (!this.hasFocus) return;\n\n\t\t\tthis.$el.blur();\n\t\t},\n\n\t\ton_ready: function( editor ) {\n\n\t\t\t// unload this editor if another editor is going to be loaded\n\t\t\tBackbone.pubSub.on( 'pre-load-wysiwyg-editor', _.bind( this.unload_tinymce, this ) );\n\t\t\t// editor.on( 'change', function( event ) {\n\t\t\t\t// self.commit();\n\t\t\t// } );\n\n\t\t},\n\n\t\t_get_id: function() {\n\n\t\t\treturn this.$el.attr( 'id' );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Handles UX and Events for inline editing of views\n * Use with a Model's View\n * Allows editing model.title field via .llms-editable-title elements\n * @type     {Object}\n * @since    3.16.0\n * @version  3.16.8\n */\ndefine( 'Views/_Editable',[], function() {\n\n\treturn {\n\n\t\tmedia_lib: null,\n\n\t\t/**\n\t\t * DOM Events\n\t\t * @type  {Object}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.8\n\t\t */\n\t\tevents: {\n\t\t\t'click .llms-add-image': 'open_media_lib',\n\t\t\t'click a[href=\"#llms-edit-slug\"]': 'make_slug_editable',\n\t\t\t'click a[href=\"#llms-remove-image\"]': 'remove_image',\n\t\t\t'change .llms-editable-select select': 'on_select',\n\t\t\t'change .llms-switch input[type=\"checkbox\"]': 'toggle_switch',\n\t\t\t'change .llms-editable-img-select input': 'on_img_select',\n\t\t\t'focusout .llms-input': 'on_blur',\n\t\t\t'keydown .llms-input': 'on_keydown',\n\t\t},\n\n\t\t/**\n\t\t * Retrieve a list of allowed tags for a given element\n\t\t * @param    obj   $el  jQuery selector for the element\n\t\t * @return   array\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_allowed_tags: function( $el ) {\n\n\t\t\treturn [ 'b', 'i', 'u', 'strong', 'em' ];\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the content of an element\n\t\t * @param    obj   $el  jQuery object of the element\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_content: function( $el ) {\n\n\t\t\tif ( 'INPUT' === $el[0].tagName ) {\n\t\t\t\treturn $el.val();\n\t\t\t}\n\n\t\t\tif ( ! $el.attr( 'data-formatting' ) && ! $el.hasClass( 'ql-editor' ) ) {\n\t\t\t\treturn $el.text();\n\t\t\t}\n\n\t\t\tvar $html = $( '<div>' + $el.html() + '</div>' );\n\n\t\t\t$html.find( '*' ).not( this.get_allowed_tags( $el ).join( ',' ) ).each( function( ) {\n\n\t\t\t\t$( this ).replaceWith( this.innerHTML );\n\n\t\t\t} );\n\n\t\t\treturn $html.html();\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if changes have been made to the element\n\t\t * @param    {[obj]}   event  js event object\n\t\t * @return   {Boolean}        true when changes have been made, false otherwise\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\thas_changed: function( event ) {\n\t\t\tvar $el = $( event.target );\n\t\t\treturn ( $el.attr( 'data-original-content' ) !== this.get_content( $el ) );\n\t\t},\n\n\t\t/**\n\t\t * Ensure that new content is at least 1 character long\n\t\t * @param    obj   event  js event object\n\t\t * @return   boolean\n\t\t * @since    3.16.0\n\t\t * @version  3.16.6\n\t\t */\n\t\tis_valid: function( event ) {\n\n\t\t\tvar self = this,\n\t\t\t\t$el = $( event.target ),\n\t\t\t\tcontent = this.get_content( $el ),\n\t\t\t\ttype = $el.attr( 'data-type' );\n\n\t\t\tif ( content.length < 1 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( 'url' === type || 'video' === type ) {\n\t\t\t\tif ( ! this._validate_url( this.get_content( $el ) ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t} else if ( 'permalink' === type ) {\n\n\t\t\t\tLLMS.Ajax.call( {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'llms_builder',\n\t\t\t\t\t\taction_type: 'get_permalink',\n\t\t\t\t\t\tcourse_id: window.llms_builder.CourseModel.get( 'id' ),\n\t\t\t\t\t\tid: self.model.get( 'id' ),\n\t\t\t\t\t\ttitle: self.model.get( 'title' ),\n\t\t\t\t\t\tslug: content,\n\t\t\t\t\t},\n\t\t\t\t\tbeforeSend: function() {\n\t\t\t\t\t\tLLMS.Spinner.start( $el.closest( '.llms-editable-toggle-group' ), 'small' );\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function( r ) {\n\n\t\t\t\t\t\tif ( r.permalink && r.slug ) {\n\t\t\t\t\t\t\tself.model.set( 'permalink', r.permalink );\n\t\t\t\t\t\t\tself.model.set( 'name', r.slug );\n\t\t\t\t\t\t\tself.render();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\t/**\n\t\t * Initialize elements that allow inline formatting\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinit_formatting_els: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.$el.find( '.llms-input-formatting[data-formatting]' ).each( function() {\n\n\t\t\t\tvar formatting = $( this ).attr( 'data-formatting' ).split( ',' ),\n\t\t\t\t\tattr = $( this ).attr( 'data-attribute' );\n\n\t\t\t\tvar ed = new Quill( this, {\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\ttoolbar: [ formatting ],\n\t\t\t\t\t\tkeyboard: {\n\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\ttab: {\n\t\t\t\t\t\t\t\t\tkey: 9,\n\t\t\t\t\t\t\t\t\thandler: function( range, context ) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t13: {\n\t\t\t\t\t\t\t\t\tkey: 13,\n\t\t\t\t\t\t\t\t\thandler: function( range, context ) {\n\t\t\t\t\t\t\t\t\t\ted.root.blur();\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tplaceholder: $( this ).attr( 'data-placeholder' ),\n\t\t\t\t\ttheme: 'bubble',\n\t\t\t\t} );\n\n\t\t\t\ted.on( 'text-change', function( delta, oldDelta, source ) {\n\t\t\t\t\tself.model.set( attr, self.get_content( $( ed.root ) ) );\n\t\t\t\t} );\n\n\t\t\t\tBackbone.pubSub.trigger( 'formatting-ed-init', ed, $( this ), self );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Initialize editable select elements\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinit_selects: function() {\n\n\t\t\tthis.$el.find( '.llms-editable-select select' ).llmsSelect2( {\n\t\t\t\twidth: '100%',\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Blur/focusout function for .llms-editable-title elements\n\t\t * Automatically saves changes if changes have been made\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.14.1\n\t\t * @version  3.14.1\n\t\t */\n\t\ton_blur: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar self = this,\n\t\t\t\t$el = $( event.target ),\n\t\t\t\tchanged = this.has_changed( event );\n\n\t\t\tif ( changed ) {\n\n\t\t\t\tif ( ! self.is_valid( event ) ) {\n\t\t\t\t\tself.revert_edits( event );\n\t\t\t\t} else {\n\t\t\t\t\tthis.save_edits( event );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Change event for selectables\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_select: function( event ) {\n\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tmulti = ( $el.attr( 'multiple' ) ),\n\t\t\t\tattr = $el.attr( 'name' ),\n\t\t\t\t$selected = $el.find( 'option:selected' ),\n\t\t\t\tval;\n\n\t\t\tif ( multi ) {\n\t\t\t\tval = [];\n\t\t\t\tval = $selected.map( function() {\n\t\t\t\t\treturn this.value;\n\t\t\t\t} ).get();\n\t\t\t} else {\n\t\t\t\tval = $selected[0].value;\n\t\t\t}\n\n\t\t\tthis.model.set( attr, val );\n\n\t\t},\n\n\t\t/**\n\t\t * Change event for image select groups\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.8\n\t\t * @version  3.16.8\n\t\t */\n\t\ton_img_select: function( event ) {\n\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tattr = $el.attr( 'name' ),\n\t\t\t\tval = $el.val();\n\n\t\t\tthis.model.set( attr, val );\n\n\t\t},\n\n\t\t/**\n\t\t * Keydown function for .llms-editable-title elements\n\t\t * Blurs\n\t\t * @param    {obj}   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_keydown: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar self = this,\n\t\t\t\tkey = event.which || event.keyCode,\n\t\t\t\tctrl = event.metaKey || event.ctrlKey;\n\n\t\t\tswitch ( key ) {\n\n\t\t\t\tcase 13: // enter\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.target.blur();\n\t\t\t\tbreak;\n\n\t\t\t\tcase 27: // escape\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.revert_edits( event );\n\t\t\t\t\tevent.target.blur();\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Open the WP media lib\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\topen_media_lib: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar self = this,\n\t\t\t\t$el = $( event.currentTarget );\n\n\t\t\tif ( self.media_lib ) {\n\n\t\t\t\tself.media_lib.uploader.uploader.param( 'post_id', self.model.get( 'id' ) );\n\n\t\t\t} else {\n\n\t\t\t\twp.media.model.settings.post.id = self.model.get( 'id' );\n\n\t\t\t\tself.media_lib = wp.media.frames.file_frame = wp.media( {\n\t\t\t\t\ttitle: LLMS.l10n.translate( 'Select an image' ),\n\t\t\t\t\tbutton: {\n\t\t\t\t\t\ttext: LLMS.l10n.translate( 'Use this image' ),\n\t\t\t\t\t},\n\t\t\t\t\tmultiple: false\t// Set to true to allow multiple files to be selected\n\t\t\t\t} );\n\n\t\t\t\tself.media_lib.on( 'select', function() {\n\n\t\t\t\t\tvar size = $el.attr( 'data-image-size' ),\n\t\t\t\t\t\tattachment = self.media_lib.state().get( 'selection' ).first().toJSON(),\n\t\t\t\t\t\timage = self.model.get( $el.attr( 'data-attribute' ) ),\n\t\t\t\t\t\turl;\n\n\t\t\t\t\tif ( size && attachment.sizes[ size ] ) {\n\t\t\t\t\t\turl = attachment.sizes[ size ].url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\turl = attachment.url;\n\t\t\t\t\t}\n\n\t\t\t\t\timage.set( {\n\t\t\t\t\t\tid: attachment.id,\n\t\t\t\t\t\tsrc: url,\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tself.media_lib.open();\n\n\n\t\t},\n\n\t\t/**\n\t\t * Click event to remove an image\n\t\t * @param    obj   event  js event obj\n\t\t * @return   voids\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tremove_image: function( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.model.get( $( event.currentTarget ).attr( 'data-attribute' ) ).set( {\n\t\t\t\tid: '',\n\t\t\t\tsrc: '',\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Helper to undo changes\n\t\t * Bound to \"escape\" key via on_keydwon function\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trevert_edits: function( event ) {\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tval = $el.attr( 'data-original-content' );\n\t\t\t$el.html( val );\n\t\t},\n\n\t\t/**\n\t\t * Sync chages to the model and DB\n\t\t * @param    {obj}   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tsave_edits: function( event ) {\n\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tval = this.get_content( $el );\n\t\t\tthis.model.set( $el.attr( 'data-attribute' ), val );\n\n\t\t},\n\n\t\t/**\n\t\t * Change event for a switch element\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttoggle_switch: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tattr = $el.attr( 'name' ),\n\t\t\t\tval;\n\n\t\t\tif ( $el.is( ':checked' ) ) {\n\t\t\t\tval = $el.attr( 'data-on' ) ? $el.attr( 'data-on' ) : 'yes';\n\t\t\t} else {\n\t\t\t\tval = $el.attr( 'data-off' ) ? $el.attr( 'data-off' ) : 'no';\n\t\t\t}\n\n\t\t\tif ( -1 !== attr.indexOf( '.' ) ) {\n\n\t\t\t\tvar split = attr.split( '.' );\n\n\t\t\t\tif ( 'parent' === split[0] ) {\n\t\t\t\t\tthis.model.get_parent().set( split[1], val );\n\t\t\t\t} else {\n\t\t\t\t\tthis.model.get( split[0] ).set( split[1], val );\n\t\t\t\t}\n\n\n\t\t\t} else {\n\n\t\t\t\tthis.model.set( attr, val );\n\n\t\t\t}\n\n\t\t\tthis.trigger( attr.replace( '.', '-' ) + '_toggle', val );\n\t\t\tthis.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Initializes a WP Editor on a textarea\n\t\t * @param    string   id        CSS ID of the editor (don't include #)\n\t\t * @param    obj      settings  optional object of settings to pass to wp.editor.initialize()\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinit_editor: function( id, settings ) {\n\n\t\t\tsettings = settings || {};\n\n\t\t\twp.editor.remove( id );\n\n\t\t\twp.editor.initialize( id, $.extend( true, wp.editor.getDefaultSettings(), {\n\t\t\t\tmediaButtons: true,\n\t\t\t\ttinymce: {\n\t\t\t\t\ttoolbar1: 'bold,italic,strikethrough,bullist,numlist,blockquote,hr,alignleft,aligncenter,alignright,link,unlink,wp_adv',\n\t\t\t\t\ttoolbar2: 'formatselect,underline,alignjustify,forecolor,pastetext,removeformat,charmap,outdent,indent,undo,redo,wp_help',\n\t\t\t\t\tsetup: _.bind( this.on_editor_ready, this ),\n\t\t\t\t}\n\t\t\t}, settings ) );\n\n\t\t},\n\n\t\t/**\n\t\t * Setup a permalink editor to allow editing of a permalink\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.6\n\t\t * @version  3.16.6\n\t\t */\n\t\tmake_slug_editable: function( event ) {\n\n\t\t\tvar self = this,\n\t\t\t\t$btn = $( event.currentTarget ),\n\t\t\t\t$link = $btn.prevAll( 'a' ),\n\t\t\t\t$input = $btn.prev( 'input.permalink' ),\n\t\t\t\tfull_url = $link.attr( 'href' ),\n\t\t\t\tslug = $input.val(),\n\t\t\t\tshort_url = full_url.replace( slug, '' );\n\n\t\t\t// hide the button\n\t\t\t$btn.hide();\n\n\t\t\t// make the link not clickable\n\t\t\t$link.css( {\n\t\t\t\tcolor: '#999',\n\t\t\t\t'pointer-events': 'none',\n\t\t\t\t'text-decoration': 'none',\n\t\t\t} );\n\n\t\t\t// remove the current slug & trailing slash from the URL\n\t\t\t$link.text( short_url.substring( 0, short_url.length - 1 ) );\n\n\t\t\t// focus in on the field\n\t\t\t$input.show().focus();\n\n\t\t},\n\n\t\t/**\n\t\t * Callback function called after initialization of an editor\n\t\t * Updates UI if a label is present\n\t\t * Binds a change event to ensure editor changes are saved to the model\n\t\t * @param    obj   editor  wp.editor instance\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_editor_ready: function( editor ) {\n\n\t\t\tvar self = this,\n\t\t\t\t$ed = $( '#' + editor.id ),\n\t\t\t\t$parent = $ed.closest( '.llms-editable-editor' ),\n\t\t\t\t$label = $parent.find( '.llms-label' );\n\n\t\t\tif ( $label.length ) {\n\t\t\t\t$label.prependTo( $parent.find( '.wp-editor-tools' ) );\n\t\t\t}\n\n\t\t\t// save changes to the model\n\t\t\teditor.on( 'change', function( event ) {\n\t\t\t\tself.model.set( $( '#' + editor.id ).attr( 'data-attribute' ), wp.editor.getContent( editor.id ) );\n\t\t\t} );\n\n\t\t},\n\n\t\t_validate_url: function( str ) {\n\n\t\t\tvar a = document.createElement( 'a' );\n\t\t\ta.href = str;\n\t\t\treturn ( a.host && a.host !== window.location.host );\n\n\t\t}\n\n\t};\n\n} );\n\n","/**\n * Shiftable view mixin function\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/_Shiftable',[], function() {\n\n\treturn {\n\n\t\t/**\n\t\t * Conditionally hide action buttons based on section position in collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tmaybe_hide_shiftable_buttons: function() {\n\n\t\t\tif ( ! this.model.collection ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar type = this.model.get( 'type' );\n\n\t\t\tif ( this.model.collection.first() === this.model ) {\n\t\t\t\tthis.$el.find( '.shift-up--' + type ).hide();\n\t\t\t} else if ( this.model.collection.last() === this.model ) {\n\t\t\t\tthis.$el.find( '.shift-down--' + type ).hide();\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Move an item in a collection from one position to another\n\t\t * @param    int   old_index  current (old) index within the collection\n\t\t * @param    int   new_index  desired (new) index within the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tshift: function( old_index, new_index ) {\n\n\t\t\tvar collection = this.model.collection;\n\n\t\t\tcollection.remove( this.model );\n\t\t\tcollection.add( this.model, { at: new_index } );\n\t\t\tcollection.trigger( 'reorder' );\n\n\t\t},\n\n\t\t/**\n\t\t * Move an item down the tree one position\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tshift_down: function( e ) {\n\n\t\t\te.preventDefault();\n\t\t\tvar index = this.model.collection.indexOf( this.model );\n\t\t\tthis.shift( index, index + 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Move an item up the tree one position\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tshift_up: function( e ) {\n\n\t\t\te.preventDefault();\n\t\t\tvar index = this.model.collection.indexOf( this.model );\n\t\t\tthis.shift( index, index - 1 );\n\n\t\t},\n\n\t};\n\n} );\n\n","/**\n * Single Lesson View\n * @since    3.16.0\n * @version  [version]\n */\ndefine( 'Views/Lesson',[ 'Views/_Editable', 'Views/_Shiftable' ], function( Editable, Shiftable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Get default attributes for the html wrapper element\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\t'data-id': this.model.id,\n\t\t\t\t'data-section-id': this.model.get( 'parent_section' ),\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * HTML class names\n\t\t * @type  {String}\n\t\t */\n\t\tclassName: 'llms-builder-item llms-lesson',\n\n\t\t/**\n\t\t * Events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: _.defaults( {\n\t\t\t'click .detach--lesson': 'detach',\n\t\t\t'click .edit-lesson': 'open_lesson_editor',\n\t\t\t'click .edit-quiz': 'open_quiz_editor',\n\t\t\t'click .section-prev': 'section_prev',\n\t\t\t'click .section-next': 'section_next',\n\t\t\t'click .shift-up--lesson': 'shift_up',\n\t\t\t'click .shift-down--lesson': 'shift_down',\n\t\t\t'click .trash--lesson': 'trash',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-lesson-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-lesson-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.14.1\n\t\t * @version  3.14.1\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.render();\n\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\n\t\t\tBackbone.pubSub.on(  'lesson-selected', this.on_select, this );\n\t\t\tBackbone.pubSub.on(  'new-lesson-added', this.on_select, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model ) );\n\t\t\tthis.maybe_hide_shiftable_buttons();\n\t\t\tif ( this.model.get( '_selected' ) ) {\n\t\t\t\tthis.$el.addClass( 'selected' );\n\t\t\t} else {\n\t\t\t\tthis.$el.removeClass( 'selected' );\n\t\t\t}\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Remove lesson from course and delete it\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdetach: function( event ) {\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif ( window.confirm( LLMS.l10n.translate( 'Are you sure you want to remove this lesson from the course?' ) ) ) {\n\n\t\t\t\tthis.model.collection.remove( this.model );\n\t\t\t\tBackbone.pubSub.trigger( 'model-detached', this.model );\n\n\t\t\t}\n\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for lesson settings action icon\n\t\t * Opens sidebar to the lesson editor tab\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\topen_lesson_editor: function() {\n\n\t\t\tBackbone.pubSub.trigger( 'lesson-selected', this.model, 'lesson' );\n\t\t\tthis.model.set( '_selected', true );\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for the quiz editor action icon\n\t\t * Opens sidebar to the quiz editor tab\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\topen_quiz_editor: function() {\n\n\t\t\tBackbone.pubSub.trigger( 'lesson-selected', this.model, 'quiz' );\n\t\t\tthis.model.set( '_selected', true );\n\n\t\t},\n\n\t\t/**\n\t\t * When a lesson is selected mark it as selected in the hidden prop\n\t\t * Allows views to re-render and reflect current state properly\n\t\t * @param    obj   model  lesson model that's been selected\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_select: function( model ) {\n\n\t\t\tif ( this.model.id !== model.id ) {\n\t\t\t\tthis.model.set( '_selected', false );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for the \"Next Section\" button\n\t\t * @param    obj   event   js event obj\n\t\t * @return   void\n\t\t * @since    [version]\n\t\t * @version  [version]\n\t\t */\n\t\tsection_next: function( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis._move_to_section( 'next' );\n\t\t},\n\n\t\t/**\n\t\t * Click event for the \"Previous Section\" button\n\t\t * @param    obj   event   js event obj\n\t\t * @return   void\n\t\t * @since    [version]\n\t\t * @version  [version]\n\t\t */\n\t\tsection_prev: function( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis._move_to_section( 'prev' );\n\t\t},\n\n\t\t/**\n\t\t * Remove lesson from course and delete it\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttrash: function( event ) {\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif ( window.confirm( LLMS.l10n.translate( 'Are you sure you want to move this lesson to the trash?' ) ) ) {\n\n\t\t\t\tthis.model.collection.remove( this.model );\n\t\t\t\tBackbone.pubSub.trigger( 'model-trashed', this.model );\n\n\t\t\t}\n\n\n\t\t},\n\n\t\t/**\n\t\t * Move the lesson into a new section\n\t\t * @param    string   direction  direction [prev|next]\n\t\t * @return   void\n\t\t * @since    [version]\n\t\t * @version  [version]\n\t\t */\n\t\t_move_to_section: function( direction ) {\n\n\t\t\tvar from_coll = this.model.collection,\n\t\t\t\tto_section;\n\n\t\t\tif ( 'next' === direction ) {\n\t\t\t\tto_section = from_coll.parent.get_next();\n\t\t\t} else if ( 'prev' === direction ) {\n\t\t\t\tto_section = from_coll.parent.get_prev();\n\t\t\t}\n\n\t\t\tif ( to_section ) {\n\n\t\t\t\tfrom_coll.remove( this.model );\n\t\t\t\tto_section.add_lesson( this.model );\n\t\t\t\tto_section.set( '_expanded', true );\n\n\t\t\t}\n\n\t\t},\n\n\t}, Editable, Shiftable ) );\n\n} );\n\n","/**\n * _receive override for Backbone.CollectionView core\n * enables connection with jQuery UI draggable buttons\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/_Receivable',[], function() {\n\n\treturn {\n\n\t\t/**\n\t\t * Overloads the function from Backbone.CollectionView core because it doesn't properly handle\n\t\t * receieves from a jQuery UI draggable object\n\t\t * @param    obj   event  js event object\n\t\t * @param    obj   ui     jQuery UI object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_receive : function( event, ui ) {\n\n\t\t\t// came from sidebar drag\n\t\t\tif ( ui.sender.hasClass( 'ui-draggable' ) ) {\n\t\t\t\tvar index = this._getContainerEl().children().index( ui.helper );\n\t\t\t\tui.helper.remove(); // remove the helper\n\t\t\t\tthis.collection.add( {}, { at: index } );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar senderListEl = ui.sender;\n\t\t\tvar senderCollectionListView = senderListEl.data( 'view' );\n\t\t\tif( ! senderCollectionListView || ! senderCollectionListView.collection ) return;\n\n\t\t\tvar newIndex = this._getContainerEl().children().index( ui.item );\n\t\t\tvar modelReceived = senderCollectionListView.collection.get( ui.item.attr( 'data-model-cid' ) );\n\t\t\tsenderCollectionListView.collection.remove( modelReceived );\n\t\t\tthis.collection.add( modelReceived, { at : newIndex } );\n\t\t\tmodelReceived.collection = this.collection; // otherwise will not get properly set, since modelReceived.collection might already have a value.\n\t\t\tthis.setSelectedModel( modelReceived );\n\t\t},\n\n\t}\n\n} );\n\n\n","/**\n * Single Section View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/LessonList',[ 'Views/Lesson', 'Views/_Receivable' ], function( LessonView, Receivable ) {\n\n\treturn Backbone.CollectionView.extend( _.defaults( {\n\n\t\tclassName: 'llms-lessons',\n\n\t\t/**\n\t\t * Section model\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: LessonView,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: false,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: true,\n\n\t\tsortableOptions: {\n\t\t\taxis: false,\n\t\t\tconnectWith: '.llms-lessons',\n\t\t\tcursor: 'move',\n\t\t\thandle: '.drag-lesson',\n\t\t\titems: '.llms-lesson',\n\t\t\tplaceholder: 'llms-lesson llms-sortable-placeholder',\n\t\t},\n\n\t\tsortable_start: function( collection ) {\n\t\t\t$( '.llms-lessons' ).addClass( 'dragging' );\n\t\t},\n\n\t\tsortable_stop: function( collection ) {\n\t\t\t$( '.llms-lessons' ).removeClass( 'dragging' );\n\t\t},\n\n\t\t/**\n\t\t * Overloads the function from Backbone.CollectionView core because it doesn't send stop events\n\t\t * if moving from one sortable to another... :-(\n\t\t * @param    obj   event  js event object\n\t\t * @param    obj   ui     jQuery UI object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_sortStop : function( event, ui ) {\n\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( 'data-model-cid' ) ),\n\t\t\t\tmodelViewContainerEl = this._getContainerEl(),\n\t\t\t\tnewIndex = modelViewContainerEl.children().index( ui.item );\n\n\t\t\tif ( newIndex == -1 && modelBeingSorted ) {\n\t\t\t\tthis.collection.remove( modelBeingSorted );\n\t\t\t}\n\n\t\t\tthis._reorderCollectionBasedOnHTML();\n\t\t\tthis.updateDependentControls();\n\n\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\tthis.spawn( 'sortStop', { modelBeingSorted : modelBeingSorted, newIndex : newIndex } );\n\t\t\t} else {\n\t\t\t\tthis.trigger( 'sortStop', modelBeingSorted, newIndex );\n\t\t\t}\n\n\t\t},\n\n\t}, Receivable ) );\n\n} );\n\n","/**\n * Single Section View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/Section',[ 'Views/LessonList', 'Views/_Editable', 'Views/_Shiftable' ], function( LessonListView, Editable, Shiftable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Get default attributes for the html wrapper element\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\t'data-id': this.model.id,\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Element classnames\n\t\t * @type  {String}\n\t\t */\n\t\tclassName: 'llms-builder-item llms-section',\n\n\t\t/**\n\t\t * Events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: _.defaults( {\n\t\t\t'click': 'select',\n\t\t\t'click .expand': 'expand',\n\t\t\t'click .collapse': 'collapse',\n\t\t\t'click .shift-up--section': 'shift_up',\n\t\t\t'click .shift-down--section': 'shift_down',\n\t\t\t'click .trash--section': 'trash',\n\n\t\t\t'mouseenter .llms-lessons': 'on_mouseenter',\n\t\t\t// 'mouseleave': 'on_mouseleave',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-section-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-section-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.render();\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\t\t\tthis.listenTo( this.model, 'change:_expanded', this.toggle_expanded );\n\t\t\tthis.lessonListView.collection.on( 'add', this.on_lesson_add, this );\n\n\t\t\tthis.dragTimeout = null;\n\n\t\t\tBackbone.pubSub.on( 'expand-all', this.expand, this );\n\t\t\tBackbone.pubSub.on( 'collapse-all', this.collapse, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Render the section\n\t\t * Initalizes a new collection and views for all lessons in the section\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model.toJSON() ) );\n\n\t\t\tthis.maybe_hide_shiftable_buttons();\n\n\t\t\tthis.lessonListView = new LessonListView( {\n\t\t\t\tel: this.$el.find( '.llms-lessons' ),\n\t\t\t\tcollection: this.model.get( 'lessons' ),\n\t\t\t} );\n\t\t\tthis.lessonListView.render();\n\t\t\tthis.lessonListView.on( 'sortStart', this.lessonListView.sortable_start );\n\t\t\tthis.lessonListView.on( 'sortStop', this.lessonListView.sortable_stop );\n\n\t\t\t// selection changes\n\t\t\tthis.lessonListView.on( 'selectionChanged', this.active_lesson_change, this );\n\n\t\t\tthis.maybe_hide_trash_button();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tactive_lesson_change: function( current, previous ) {\n\n\t\t\tBackbone.pubSub.trigger( 'active-lesson-change', {\n\t\t\t\tcurrent: current,\n\t\t\t\tprevious: previous,\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Collapse lessons within the section\n\t\t * @param    obj   event    js event object\n\t\t * @param    bool  update   if true, updates the model to reflect the new state\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcollapse: function( event, update ) {\n\n\t\t\tif ( 'undefined' === typeof update ) {\n\t\t\t\tupdate = true;\n\t\t\t}\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tthis.$el.removeClass( 'expanded' ).find( '.drag-expanded' ).removeClass( 'drag-expanded' );\n\t\t\tif ( update ) {\n\t\t\t\tthis.model.set( '_expanded', false );\n\t\t\t}\n\t\t\tBackbone.pubSub.trigger( 'section-toggle', this.model );\n\n\t\t},\n\n\t\t/**\n\t\t * Expand lessons within the section\n\t\t * @param    obj   event    js event object\n\t\t * @param    bool  update   if true, updates the model to reflect the new state\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\texpand: function( event, update ) {\n\n\t\t\tif ( 'undefined' === typeof update ) {\n\t\t\t\tupdate = true;\n\t\t\t}\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tthis.$el.addClass( 'expanded' );\n\t\t\tif ( update ) {\n\t\t\t\tthis.model.set( '_expanded', true );\n\t\t\t}\n\t\t\tBackbone.pubSub.trigger( 'section-toggle', this.model );\n\n\t\t},\n\n\t\tmaybe_hide_trash_button: function() {\n\n\t\t\tvar $btn = this.$el.find( '.trash--section' );\n\n\t\t\tif ( this.model.get( 'lessons' ).isEmpty() ) {\n\n\t\t\t\t$btn.show();\n\n\t\t\t} else {\n\n\t\t\t\t$btn.hide()\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * When a lesson is added to the section trigger a collection reorder & update the lesson's id\n\t\t * @param    obj   model  Lesson model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_lesson_add: function( model ) {\n\n\t\t\tthis.lessonListView.collection.trigger( 'reorder' );\n\t\t\tmodel.set( 'parent_section', this.model.get( 'id' ) );\n\t\t\tthis.expand();\n\n\t\t},\n\n\t\ton_mouseenter: function( event ) {\n\n\n\t\t\tif ( $( event.target ).hasClass( 'dragging' ) ) {\n\n\t\t\t\t$( '.drag-expanded' ).removeClass( 'drag-expanded' );\n\t\t\t\t$( event.target ).addClass( 'drag-expanded' );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// on_mouseleave: function( event ) {\n\n\t\t// \tconsole.log( event );\n\n\t\t// \tvar $el = $( event.currentTarget ).find( '.llms-lessons' );\n\n\t\t// \tclearTimeout( this.dragTimeout );\n\n\t\t// \tif ( $el.hasClass( 'dragging' ) ) {\n\n\t\t// \t\t$el.removeClass( 'drag-expanded' );\n\n\t\t// \t}\n\n\t\t// },\n\n\t\t/**\n\t\t * Expand\n\t\t * @param    {[type]}   model  [description]\n\t\t * @param    {[type]}   value  [description]\n\t\t * @return   {[type]}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttoggle_expanded: function( model, value ) {\n\n\t\t\tif ( value ) {\n\t\t\t\tthis.expand( null, false );\n\t\t\t} else {\n\t\t\t\tthis.collapse( null, false );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Remove section from course and delete it\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttrash: function( event ) {\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tBackbone.pubSub.trigger( 'model-trashed', this.model );\n\t\t\tthis.model.collection.remove( this.model );\n\n\t\t},\n\n\t}, Editable, Shiftable ) );\n\n} );\n\n","/**\n * Single Section View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/SectionList',[ 'Views/Section', 'Views/_Receivable' ], function( SectionView, Receivable ) {\n\n\treturn Backbone.CollectionView.extend( _.defaults( {\n\n\t\t/**\n\t\t * Parent element\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-sections',\n\n\t\tevents : {\n\t\t\t'mousedown > li.llms-section > .llms-builder-header .llms-headline' : '_listItem_onMousedown',\n\t\t\t// 'dblclick > li, tbody > tr > td' : '_listItem_onDoubleClick',\n\t\t\t'click' : '_listBackground_onClick',\n\t\t\t'click ul.collection-view' : '_listBackground_onClick',\n\t\t\t'keydown' : '_onKeydown'\n\t\t},\n\n\t\t/**\n\t\t * Section model\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: SectionView,\n\n\t\t/**\n\t\t * Enable keyboard events\n\t\t * @type  {Bool}\n\t\t */\n\t\tprocessKeyEvents: false,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: true,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: true,\n\n\t\tsortableOptions: {\n\t\t\taxis: false,\n\t\t\tcursor: 'move',\n\t\t\thandle: '.drag-section',\n\t\t\titems: '.llms-section',\n\t\t\tplaceholder: 'llms-section llms-sortable-placeholder',\n\t\t},\n\n\t\tsortable_start: function( collection ) {\n\t\t\tthis.$el.addClass( 'dragging' );\n\t\t},\n\n\t\tsortable_stop: function( collection ) {\n\t\t\tthis.$el.removeClass( 'dragging' );\n\t\t},\n\n\t}, Receivable ) );\n\n} );\n\n","/**\n * Single Course View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/Course',[ 'Views/SectionList', 'Views/_Editable' ], function( SectionListView, Editable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Get default attributes for the html wrapper element\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\t'data-id': this.model.id,\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-builder-main',\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-course-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tvar self = this;\n\n\t\t\t// this.listenTo( this.model, 'sync', this.render );\n\t\t\tthis.render();\n\n\t\t\tthis.sectionListView = new SectionListView( {\n\t\t\t\tcollection: this.model.get( 'sections' ),\n\t\t\t} );\n\t\t\tthis.sectionListView.render();\n\t\t\t// drag and drop start\n\t\t\tthis.sectionListView.on( 'sortStart', this.sectionListView.sortable_start );\n\t\t\t// drag and drop stop\n\t\t\tthis.sectionListView.on( 'sortStop', this.sectionListView.sortable_stop );\n\t\t\t// selection changes\n\t\t\tthis.sectionListView.on( 'selectionChanged', this.active_section_change );\n\t\t\t// \"select\" a section when it's added to the course\n\t\t\tthis.listenTo( this.model.get( 'sections'), 'add', this.on_section_add );\n\n\t\t\tBackbone.pubSub.on( 'section-toggle', this.on_section_toggle, this );\n\n\t\t\tBackbone.pubSub.on( 'expand-section', this.expand_section, this );\n\n\t\t\tBackbone.pubSub.on( 'lesson-selected', this.active_lesson_change, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\trender: function() {\n\t\t\tthis.$el.html( this.template( this.model ) );\n\t\t\treturn this;\n\t\t},\n\n\t\tactive_lesson_change: function( model ) {\n\n\t\t\t// set parent section to be active\n\t\t\tvar section = this.model.get( 'sections' ).get( model.get( 'parent_section' ) );\n\t\t\tthis.sectionListView.setSelectedModel( section );\n\n\t\t},\n\n\t\t/**\n\t\t * When a section \"selection\" changes in the list\n\t\t * Update each section model so we can figure out which one is selected from other views\n\t\t * @param    array   current   array of selected models\n\t\t * @param    array   previous  array of previously selected models\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tactive_section_change: function( current, previous ) {\n\n\t\t\t_.each( current, function( model ) {\n\t\t\t\tmodel.set( '_selected', true );\n\t\t\t} );\n\n\t\t\t_.each( previous, function( model ) {\n\t\t\t\tmodel.set( '_selected', false );\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" the new section when it's added to the course\n\t\t * @param    obj   model  Section model that's just been added\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_section_add: function( model ) {\n\n\t\t\tthis.sectionListView.setSelectedModel( model );\n\n\t\t},\n\n\t\t/**\n\t\t * When expanding/collapsing sections\n\t\t * if collapsing, unselect, if expanding, select\n\t\t * @param    obj   model  toggled section\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_section_toggle: function( model ) {\n\n\t\t\tvar selected = model.get( '_expanded' ) ? [ model ] : [];\n\t\t\tthis.sectionListView.setSelectedModels( selected );\n\n\t\t}\n\n\t}, Editable ) );\n\n} );\n\n","/**\n * Sidebar Elements View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/LessonEditor',[], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\tel: '#llms-editor-lesson',\n\n\t\tinitialize: function( data ) {\n\n\t\t\tthis.model = data.lesson;\n\n\t\t},\n\n\t\trender: function() {\n\n\t\t\tthis.$el.html( LLMS.l10n.translate( 'Lesson editing coming soon...' ) );\n\n\t\t},\n\n\t} );\n\n\t// return Backbone.Form.extend( {\n\n\t// \t/**\n\t// \t * HTML element selector\n\t// \t * @type  {String}\n\t// \t */\n\t// \tel: '#llms-editor-lesson',\n\n\t// \tattach: function() {\n\t// \t\t$( '#llms-editor-lesson' ).html( this.el );\n\t// \t\tthis.bind_events();\n\t// \t},\n\n\t// \tbind_events: function() {\n\n\t// \t\tvar self = this;\n\n\t// \t\t_.each( this.schema, function( field, name ) {\n\n\t// \t\t\tif ( 'Wysiwyg' === field.type ) {\n\t// \t\t\t\tself.fields[ name ].editor.load_tinymce();\n\t// \t\t\t}\n\n\t// \t\t\tself.on( name + ':blur', function( form, editor ) {\n\n\t// \t\t\t\tform.commit();\n\n\t// \t\t\t} );\n\n\t// \t\t} );\n\n\t// \t},\n\n\t// } );\n\n} );\n\n","/**\n * Single Quiz View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/Popover',[], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\tdefaults: {\n\t\t\tplacement: 'auto',\n\t\t\t// container: document.body,\n\t\t\twidth: 'auto',\n\t\t\ttrigger: 'manual',\n\t\t\tstyle: 'light',\n\t\t\tanimation: 'pop',\n\t\t\ttitle: '',\n\t\t\tcontent: '',\n\t\t\tcloseable: false,\n\t\t\tbackdrop: false,\n\t\t\tonShow: function( $el ) {},\n\t\t\tonHide: function( $el ) {},\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.14.1\n\t\t * @version  3.14.1\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\tif ( this.$el.length ) {\n\t\t\t\tthis.defaults.container = this.$el.parent();\n\t\t\t}\n\n\t\t\tthis.args = _.defaults( data.args, this.defaults );\n\t\t\tthis.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.webuiPopover( this.args );\n\t\t\treturn this;\n\n\t\t},\n\n\t\thide: function() {\n\n\t\t\tthis.$el.webuiPopover( 'hide' );\n\n\t\t},\n\n\t\tshow: function() {\n\n\t\t\tthis.$el.webuiPopover( 'show' );\n\n\t\t},\n\n\t} );\n\n} );\n\n","define( 'Views/QuizHeader',[ 'Views/_Editable' ], function( Editable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\tel: '#llms-quiz-header',\n\n\t\t/**\n\t\t * Events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: _.defaults( {\n\t\t\t'click a[href=\"#llms-quiz-settings\"]': 'toggle_settings',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'header',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-quiz-header-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tvar change_events = [\n\t\t\t\t'change:_points',\n\t\t\t\t'change:_show_settings',\n\t\t\t];\n\t\t\t_.each( change_events, function( event ) {\n\t\t\t\tthis.listenTo( this.model, event, this.render );\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model ) );\n\n\t\t\tthis.init_editor( 'quiz-desc--' + this.model.get( 'id' ) );\n\n\t\t\tthis.init_selects();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoggle_settings: function( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tvar val = this.model.get( '_show_settings' ) ? false : true;\n\t\t\tthis.model.set( '_show_settings', val );\n\n\t\t},\n\n\t}, Editable ) );\n\n} );\n\n","/**\n * Single Lesson View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionType',[ ], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\t/**\n\t\t * HTML class names\n\t\t * @type  {String}\n\t\t */\n\t\tclassName: 'llms-question-type',\n\n\t\tevents: {\n\t\t\t'click .llms-add-question': 'add_question',\n\t\t},\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-question-type-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-question-type-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\t\t\tthis.$el.html( this.template( this.model ) );\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Add a question of the selected type to the current quiz\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_question: function() {\n\n\t\t\tthis.quiz.add_question( {\n\t\t\t\t_expanded: true,\n\t\t\t\tchoices: this.model.get( 'default_choices' ) ? this.model.get( 'default_choices' ) : null,\n\t\t\t\tquestion_type: this.model,\n\t\t\t} );\n\n\t\t\tthis.quiz.trigger( 'new-question-added' );\n\n\t\t},\n\n\t\t// filter: function( term ) {\n\n\t\t// \tvar words = this.model.get_keywords().map( function( word ) {\n\t\t// \t\treturn word.toLowerCase();\n\t\t// \t} );\n\n\t\t// \tterm = term.toLowerCase();\n\n\t\t// \tif ( -1 === words.indexOf( term ) ) {\n\t\t// \t\tthis.$el.addClass( 'filtered' );\n\t\t// \t} else {\n\t\t// \t\tthis.$el.removeClass( 'filtered' );\n\t\t// \t}\n\n\t\t// },\n\n\t\t// clear_filter: function() {\n\t\t// \tthis.$el.removeClass( 'filtered' );\n\t\t// }\n\n\t} );\n\n} );\n\n","/**\n * Quiz question bank view\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionBank',[ 'Views/QuestionType' ], function( QuestionView ) {\n\n\treturn Backbone.CollectionView.extend( {\n\n\t\tclassName: 'llms-question',\n\n\t\t/**\n\t\t * Parent element\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-question-bank',\n\n\t\t/**\n\t\t * Section model\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: QuestionView,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: false,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: false,\n\n\t} );\n\n} );\n\n","/**\n * Single Question Choice View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionChoice',[ 'Views/_Editable', ], function( Editable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * HTML class names\n\t\t * @type  {String}\n\t\t */\n\t\tclassName: 'llms-question-choice',\n\n\t\tevents: _.defaults( {\n\t\t\t'change input[name=\"correct\"]': 'toggle_correct',\n\t\t\t'click .llms-action-icon[href=\"#llms-add-choice\"]': 'add_choice',\n\t\t\t'click .llms-action-icon[href=\"#llms-del-choice\"]': 'del_choice',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-question-choice-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-question-choice-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.14.1\n\t\t * @version  3.14.1\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.render();\n\n\t\t\tthis.listenTo( this.model.collection, 'add', this.maybe_disable_buttons );\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\n\t\t\tif ( 'image' === this.model.get( 'choice_type' ) ) {\n\t\t\t\tthis.listenTo( this.model.get( 'choice' ), 'change', this.render );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\t\t\tthis.$el.html( this.template( this.model ) );\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Add a new choice to the current choice list\n\t\t * Adds *after* the clicked choice\n\t\t * @param    obj   event  JS event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_choice: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\n\t\t\tvar index = this.model.collection.indexOf( this.model );\n\t\t\tthis.model.collection.parent.add_choice( {}, {\n\t\t\t\tat: index + 1,\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Delete the choice from the choice list & ensure there's at least one correct choice\n\t\t * @param    obj   event  js event obj\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdel_choice: function( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'model-trashed', this.model );\n\t\t\tthis.model.collection.remove( this.model );\n\n\t\t},\n\n\t\t/**\n\t\t * When the correct answer input changes sync status to model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttoggle_correct: function() {\n\n\t\t\tvar correct = this.$el.find( 'input[name=\"correct\"]' ).is( ':checked' );\n\t\t\tthis.model.set( 'correct', correct );\n\t\t\tthis.model.collection.trigger( 'correct-update', this.model );\n\n\t\t},\n\n\t}, Editable ) );\n\n} );\n\n","/**\n * Quiz question bank view\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionChoiceList',[ 'Views/QuestionChoice' ], function( ChoiceView ) {\n\n\treturn Backbone.CollectionView.extend( {\n\n\t\tclassName: 'llms-quiz-questions',\n\n\t\t/**\n\t\t * Choice model view\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: ChoiceView,\n\n\t\t/**\n\t\t * Enable keyboard events\n\t\t * @type  {Bool}\n\t\t */\n\t\tprocessKeyEvents: false,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: false,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: true,\n\n\t\tsortableOptions: {\n\t\t\taxis: false,\n\t\t\t// connectWith: '.llms-lessons',\n\t\t\tcursor: 'move',\n\t\t\thandle: '.llms-choice-id',\n\t\t\titems: '.llms-question-choice',\n\t\t\tplaceholder: 'llms-question-choice llms-sortable-placeholder',\n\t\t},\n\n\t\tsortable_start: function( model ) {\n\t\t\tthis.$el.addClass( 'dragging' );\n\t\t},\n\n\t\tsortable_stop: function( model ) {\n\t\t\tthis.$el.removeClass( 'dragging' );\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Single Question View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Question',[\n\t\t'Views/_Editable',\n\t\t'Views/QuestionChoiceList'\n\t], function(\n\t\tEditable,\n\t\tChoiceListView\n\t) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Generate CSS classes for the question\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tclassName: function() {\n\t\t\treturn 'llms-question qtype--' + this.model.get( 'question_type' ).get( 'id' );\n\t\t},\n\n\t\tevents: _.defaults( {\n\t\t\t'click .clone--question': 'clone',\n\t\t\t'click .delete--question': 'delete',\n\t\t\t'click .expand--question': 'expand',\n\t\t\t'click .collapse--question': 'collapse',\n\t\t\t'change input[name=\"question_points\"]': 'update_points',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-question-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-question-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tvar change_events = [\n\t\t\t\t'change:_expanded',\n\t\t\t\t'change:menu_order',\n\t\t\t];\n\t\t\t_.each( change_events, function( event ) {\n\t\t\t\tthis.listenTo( this.model, event, this.render );\n\t\t\t}, this );\n\n\t\t\tthis.listenTo( this.model.get( 'image' ), 'change', this.render );\n\n\t\t\tthis.listenTo( this.model.get_parent(), 'change:_points', this.render_points_percentage );\n\n\t\t\tthis.on( 'multi_choices_toggle', this.multi_choices_toggle, this );\n\n\t\t\tBackbone.pubSub.on( 'del-question-choice', this.del_choice, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model ) );\n\n\t\t\tif ( this.model.get( 'question_type').get( 'choices' ) ) {\n\n\t\t\t\tthis.choiceListView = new ChoiceListView( {\n\t\t\t\t\tel: this.$el.find( '.llms-question-choices' ),\n\t\t\t\t\tcollection: this.model.get( 'choices' ),\n\t\t\t\t} );\n\t\t\t\tthis.choiceListView.render();\n\t\t\t\tthis.choiceListView.on( 'sortStart', this.choiceListView.sortable_start );\n\t\t\t\tthis.choiceListView.on( 'sortStop', this.choiceListView.sortable_stop );\n\n\t\t\t}\n\n\t\t\tif ( 'group' === this.model.get( 'question_type' ).get( 'id' ) ) {\n\n\t\t\t\tvar self = this;\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\tself.questionListView = self.collectionListView.quiz.get_question_list( {\n\t\t\t\t\t\tel: self.$el.find( '.llms-quiz-questions' ),\n\t\t\t\t\t\tcollection: self.model.get( 'questions' ),\n\t\t\t\t\t} );\n\t\t\t\t\tself.questionListView.render();\n\t\t\t\t\tself.questionListView.on( 'sortStart', self.questionListView.sortable_start );\n\t\t\t\t\tself.questionListView.on( 'sortStop', self.questionListView.sortable_stop );\n\t\t\t\t}, 1 );\n\n\t\t\t}\n\n\t\t\tif ( this.model.get( 'description_enabled' ) ) {\n\t\t\t\tthis.init_editor( 'question-desc--' + this.model.get( 'id' ) );\n\t\t\t}\n\n\t\t\tif ( this.model.get( 'clarifications_enabled' ) ) {\n\t\t\t\tthis.init_editor( 'question-clarifications--' + this.model.get( 'id' ), {\n\t\t\t\t\tmediaButtons: false,\n\t\t\t\t\ttinymce: {\n\t\t\t\t\t\ttoolbar1: 'bold,italic,strikethrough,bullist,numlist,alignleft,aligncenter,alignright',\n\t\t\t\t\t\ttoolbar2: '',\n\t\t\t\t\t\tsetup: _.bind( this.on_editor_ready, this ),\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tthis.init_formatting_els();\n\t\t\tthis.init_selects();\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * rerender points percentage when question points are updated\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender_points_percentage: function() {\n\n\t\t\tthis.$el.find( '.llms-question-points' ).attr( 'data-tip', this.model.get_points_percentage() );\n\n\t\t},\n\n\t\t/**\n\t\t * Click event to duplicate a question within a quiz\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tclone: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tthis.model.collection.add( this._get_question_clone( this.model ) );\n\n\t\t},\n\n\t\t/**\n\t\t * Recursive clone function which will correctly clone children of a question\n\t\t * @param    obj   question  queston model\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_get_question_clone: function( question ) {\n\n\t\t\t// create a duplicate\n\t\t\tvar clone = _.clone( question.attributes );\n\n\t\t\t// remove id (we want the duplicate to have a temp id)\n\t\t\tdelete clone.id;\n\n\t\t\tclone.parent_id = question.get( 'id' );\n\n\t\t\t// set the question type ID\n\t\t\tclone.question_type = question.get( 'question_type' ).get( 'id' );\n\n\t\t\t// clone the image attributes seperately\n\t\t\tclone.image = _.clone( question.get( 'image' ).attributes );\n\n\t\t\t// if it has choices clone all the choices\n\t\t\tif ( question.get( 'choices' ) ) {\n\n\t\t\t\tclone.choices = [];\n\n\t\t\t\tquestion.get( 'choices' ).each( function ( choice ) {\n\n\t\t\t\t\tvar choice_clone = _.clone( choice.attributes );\n\t\t\t\t\tdelete choice_clone.id;\n\t\t\t\t\tdelete choice_clone.question_id;\n\n\t\t\t\t\tclone.choices.push( choice_clone );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( 'group' === question.get( 'question_type' ).get( 'id' ) ) {\n\n\t\t\t\tclone.questions = [];\n\t\t\t\tquestion.get( 'questions' ).each( function( child ) {\n\t\t\t\t\tclone.questions.push( this._get_question_clone( child ) );\n\t\t\t\t}, this );\n\n\t\t\t}\n\n\t\t\treturn clone;\n\n\t\t},\n\n\t\t/**\n\t\t * Collapse a question and hide it's settings\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcollapse: function() {\n\n\t\t\tthis.model.set( '_expanded', false );\n\n\t\t},\n\n\t\t/**\n\t\t * Delete the question from a quiz / question group\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdelete: function( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( window.confirm( LLMS.l10n.translate( 'Are you sure you want to delete this question?' ) ) ) {\n\n\t\t\t\tthis.model.collection.remove( this.model );\n\t\t\t\tBackbone.pubSub.trigger( 'model-trashed', this.model );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Click event to reveal a question's settings & choices\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\texpand: function() {\n\n\t\t\tthis.model.set( '_expanded', true );\n\n\t\t},\n\n\t\t/**\n\t\t * When toggling multiple correct answers *off* remove all correct choices except the first correct choice in the list\n\t\t * @param    string   val  value of the question's `multi_choice` attr [yes|no]\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tmulti_choices_toggle: function( val ) {\n\n\t\t\tif ( 'yes' === val ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.model.get( 'choices' ).update_correct( _.first( this.model.get( 'choices' ).get_correct() ) );\n\n\t\t},\n\n\t\t/**\n\t\t * Update the model's points when the value of the points input is updated\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_points: function() {\n\n\t\t\tthis.model.set( 'points', this.$el.find( 'input[name=\"question_points\"]' ).val() * 1 );\n\n\t\t}\n\n\t}, Editable ) );\n\n} );\n\n","/**\n * Quiz question bank view\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionList',[ 'Views/Question' ], function( QuestionView ) {\n\n\treturn Backbone.CollectionView.extend( {\n\n\t\tclassName: 'llms-quiz-questions',\n\n\t\t/**\n\t\t * Parent element\n\t\t * @type  {String}\n\t\t */\n\t\t// el: '#llms-quiz-questions',\n\n\t\t/**\n\t\t * Section model\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: QuestionView,\n\n\t\t/**\n\t\t * Enable keyboard events\n\t\t * @type  {Bool}\n\t\t */\n\t\tprocessKeyEvents: false,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: false,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: true,\n\n\t\tsortableOptions: {\n\t\t\taxis: false,\n\t\t\tconnectWith: '.llms-quiz-questions',\n\t\t\tcursor: 'move',\n\t\t\thandle: '.llms-data-stamp',\n\t\t\titems: '.llms-question',\n\t\t\tplaceholder: 'llms-question llms-sortable-placeholder',\n\t\t},\n\n\t\t/**\n\t\t * Highlight drop areas when dragging starts\n\t\t * @param    obj   model  model being sorted\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tsortable_start: function( model ) {\n\t\t\tvar selector = 'group' === model.get( 'question_type' ).get( 'id' ) ? '.llms-editor-tab > .llms-quiz-questions' : '.llms-quiz-questions';\n\t\t\t$( selector ).addClass( 'dragging' );\n\t\t},\n\n\t\t/**\n\t\t * Remove highlights when dragging stops\n\t\t * @param    obj   model  model being sorted\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tsortable_stop: function() {\n\t\t\t$( '.llms-quiz-questions' ).removeClass( 'dragging' );\n\t\t},\n\n\t\t/**\n\t\t * Overrides receive to ensure that question groups can't be moved into queston groups\n\t\t * @param    obj   event  js event object\n\t\t * @param    obj   ui     jQuery UI Sortable ui object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_receive : function( event, ui ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\t// prevent moving a question group into a question group\n\t\t\tif ( ui.item.hasClass( 'qtype--group' ) && $( event.target ).closest( '.qtype--group' ).length ) {;\n\t\t\t\tui.sender.sortable( 'cancel' );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar senderListEl = ui.sender;\n\t\t\tvar senderCollectionListView = senderListEl.data( \"view\" );\n\t\t\tif( ! senderCollectionListView || ! senderCollectionListView.collection ) return;\n\n\t\t\tvar newIndex = this._getContainerEl().children().index( ui.item );\n\t\t\tvar modelReceived = senderCollectionListView.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\t\t\tsenderCollectionListView.collection.remove( modelReceived );\n\t\t\tthis.collection.add( modelReceived, { at : newIndex } );\n\t\t\tmodelReceived.collection = this.collection; // otherwise will not get properly set, since modelReceived.collection might already have a value.\n\t\t\tthis.setSelectedModel( modelReceived );\n\t\t},\n\n\t\t/**\n\t\t * Override to allow manipulatino of placeholder element\n\t\t * @param    {[type]}   event  [description]\n\t\t * @param    {[type]}   ui     [description]\n\t\t * @return   {[type]}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_sortStart : function( event, ui ) {\n\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\n\t\t\tui.placeholder.addClass( 'qtype--' + modelBeingSorted.get( 'question_type' ).get( 'id' ) );\n\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"sortStart\", { modelBeingSorted : modelBeingSorted } );\n\t\t\telse this.trigger( \"sortStart\", modelBeingSorted );\n\t\t},\n\n\t\t/**\n\t\t * Overloads the function from Backbone.CollectionView core because it doesn't send stop events\n\t\t * if moving from one sortable to another... :-(\n\t\t * @param    obj   event  js event object\n\t\t * @param    obj   ui     jQuery UI object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_sortStop : function( event, ui ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( 'data-model-cid' ) ),\n\t\t\t\tmodelViewContainerEl = this._getContainerEl(),\n\t\t\t\tnewIndex = modelViewContainerEl.children().index( ui.item );\n\n\t\t\tif ( newIndex == -1 && modelBeingSorted ) {\n\t\t\t\tthis.collection.remove( modelBeingSorted );\n\t\t\t}\n\n\t\t\tthis._reorderCollectionBasedOnHTML();\n\t\t\tthis.updateDependentControls();\n\n\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\tthis.spawn( 'sortStop', { modelBeingSorted : modelBeingSorted, newIndex : newIndex } );\n\t\t\t} else {\n\t\t\t\tthis.trigger( 'sortStop', modelBeingSorted, newIndex );\n\t\t\t}\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Subview utility mixin\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/_Subview',[], function() {\n\n\treturn {\n\n\t\tsubscriptions: {},\n\n\t\t/**\n\t\t * Name of the current subview\n\t\t * @type  {String}\n\t\t */\n\t\tstate: '',\n\n\t\t/**\n\t\t * Object of subview data\n\t\t * @type  {Object}\n\t\t */\n\t\tviews: {},\n\n\t\t/**\n\t\t * Retrieve a subview by name from this.views\n\t\t * @param    string   name   name of the subview\n\t\t * @return   obl|false\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_subview: function( name ) {\n\n\t\t\tif ( this.views[ name ] ) {\n\t\t\t\treturn this.views[ name ];\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tevents_subscribe: function( events ) {\n\n\t\t\t_.each( events, function( func, event ) {\n\n\t\t\t\tthis.subscriptions[ event ] = func;\n\t\t\t\tBackbone.pubSub.on( event, func, this );\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\tevents_unsubscribe: function() {\n\n\t\t\t_.each( this.subscriptions, function( func, event ) {\n\n\t\t\t\tBackbone.pubSub.off( event, func, this );\n\t\t\t\tdelete this.subscriptions[ event ];\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Remove a single subview (and all it's subviews) by name\n\t\t * @param    string   name   name of the subview\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tremove_subview: function( name ) {\n\n\t\t\tvar view = this.get_subview( name );\n\n\t\t\tif ( ! view ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( view.instance ) {\n\n\t\t\t\t// remove the subviews if the view has subviews\n\t\t\t\tif ( ! _.isEmpty( view.instance.views ) ) {\n\t\t\t\t\tview.instance.events_unsubscribe();\n\t\t\t\t\tview.instance.remove_subviews();\n\t\t\t\t}\n\n\t\t\t\tview.instance.off();\n\t\t\t\tview.instance.off( null, null, null );\n\t\t\t\tview.instance.remove();\n\t\t\t\tview.instance.undelegateEvents();\n\n\t\t\t\t// _.each( view.instance, function( val, key ) {\n\t\t\t\t// \tdelete view.instance[ key ];\n\t\t\t\t// } );\n\n\t\t\t\tview.instance = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Remove all subviews (and all the subviews of those subviews)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tremove_subviews: function() {\n\n\t\t\t_.each( this.views, function( data, name ) {\n\n\t\t\t\tthis.remove_subview( name );\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Render subviews based on current state\n\t\t * @param    obj   view_data  additional data to pass to the subviews\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender_subviews: function( view_data ) {\n\n\t\t\tview_data = view_data || {};\n\n\t\t\t_.each( this.views, function( data, name ) {\n\n\t\t\t\tif ( this.state === data.state ) {\n\n\t\t\t\t\tthis.render_subview( name, view_data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.remove_subview( name );\n\n\t\t\t\t}\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Render a single subview by name\n\t\t * @param    string   name       name of the subview\n\t\t * @param    obj      view_data  additional data to pass to the subview initializer\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender_subview: function( name, view_data ) {\n\n\t\t\tvar view = this.get_subview( name );\n\n\t\t\tif ( ! view ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.remove_subview( name );\n\n\t\t\tif ( ! view.instance ) {\n\t\t\t\tview.instance = new view.class( view_data );\n\t\t\t}\n\n\t\t\tview.instance.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Set the current subview\n\t\t * Must call render after!\n\t\t * @param    string   state  name of the state [builder|editor]\n\t\t * @return   obj             this for chaining\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tset_state: function ( state ) {\n\n\t\t\tthis.state = state;\n\t\t\treturn this;\n\n\t\t},\n\n\t}\n\n} );\n\n","/**\n * Single Quiz View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Quiz',[\n\t\t'Models/Quiz',\n\t\t'Views/Popover',\n\t\t'Views/QuizHeader',\n\t\t'Views/QuestionBank',\n\t\t'Views/QuestionList',\n\t\t'Views/_Editable',\n\t\t'Views/_Subview'\n\t], function(\n\t\tQuizModel,\n\t\tPopover,\n\t\tQuizHeader,\n\t\tQuestionBank,\n\t\tQuestionList,\n\t\tEditable,\n\t\tSubview\n\t) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Current view state\n\t\t * @type  {String}\n\t\t */\n\t\tstate: 'default', // [lesson|quiz]\n\n\t\t/**\n\t\t * Current Subviews\n\t\t * @type  {Object}\n\t\t */\n\t\tviews: {\n\t\t\theader: {\n\t\t\t\tclass: QuizHeader,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'default',\n\t\t\t},\n\t\t\tbank: {\n\t\t\t\tclass: QuestionBank,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'default',\n\t\t\t},\n\t\t\tlist: {\n\t\t\t\tclass: QuestionList,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'default',\n\t\t\t},\n\t\t},\n\n\t\tel: '#llms-editor-quiz',\n\n\t\t/**\n\t\t * Events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: _.defaults( {\n\t\t\t'click #llms-enable-quiz': 'enable_quiz',\n\t\t\t'click #llms-show-question-bank': 'show_tools',\n\t\t\t'click .bulk-toggle': 'bulk_toggle',\n\t\t\t// 'keyup #llms-question-bank-filter': 'filter_question_types',\n\t\t\t// 'search #llms-question-bank-filter': 'filter_question_types',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-quiz-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\tthis.lesson = data.lesson;\n\n\t\t\t// initialize the model if the quiz is enabled or it's disabled but we still have data for a quiz\n\t\t\tif ( 'yes' === this.lesson.get( 'quiz_enabled' ) || ! _.isEmpty( this.lesson.get( 'quiz' ) ) ) {\n\t\t\t\tthis.model = this.lesson.get( 'quiz' );\n\n\t\t\t\t/**\n\t\t\t\t * @todo  this is a terrilbe terrible patch\n\t\t\t\t *        I've spent nearly 3 days trying to figure out how to not use this line of code\n\t\t\t\t *        ISSUE REPRODUCTION:\n\t\t\t\t *        Open course builder\n\t\t\t\t *        Open a lesson (A) and add a quiz\n\t\t\t\t *        Switch to a new lesson (B)\n\t\t\t\t *        Add a new quiz\n\t\t\t\t *        Return to lesson A and the quizzes parent will be set to LESSON B\n\t\t\t\t *        This will happen for *every* quiz in the builder...\n\t\t\t\t *        Adding this set_parent on init guarantees that the quizzes correct parent is set\n\t\t\t\t *        after adding new quizzes to other lessons\n\t\t\t\t *        it's awful and it's gross...\n\t\t\t\t *        I'm confused and tired and going to miss release dates again because of it\n\t\t\t\t */\n\t\t\t\tthis.model.set_parent( this.lesson );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model ) );\n\n\t\t\t// render the quiz builder\n\t\t\tif ( this.model ) {\n\n\t\t\t\tthis.render_subview( 'header', {\n\t\t\t\t\tmodel: this.model,\n\t\t\t\t} );\n\n\t\t\t\tthis.render_subview( 'bank', {\n\t\t\t\t\tcollection: window.llms_builder.questions,\n\t\t\t\t} );\n\n\t\t\t\tvar last_group = null,\n\t\t\t\t\tgroup = null;\n\t\t\t\t// let all the question types reference the quiz for adding questions quickly\n\t\t\t\tthis.get_subview( 'bank' ).instance.viewManager.each( function( view ) {\n\n\t\t\t\t\tview.quiz = this.model;\n\n\t\t\t\t\tgroup = view.model.get( 'group' ).name;\n\n\t\t\t\t\tif ( last_group !== group ) {\n\t\t\t\t\t\tlast_group = group;\n\t\t\t\t\t\tview.$el.before( '<li class=\"llms-question-bank-header\"><h4>' + group + '</h4></li>' );\n\t\t\t\t\t}\n\n\t\t\t\t}, this );\n\n\t\t\t\tthis.render_subview( 'list', {\n\t\t\t\t\tel: '#llms-quiz-questions',\n\t\t\t\t\tcollection: this.model.get( 'questions' ),\n\t\t\t\t} );\n\t\t\t\tvar list = this.get_subview( 'list' ).instance;\n\t\t\t\tlist.quiz = this;\n\t\t\t\tlist.collection.on( 'add', function() {\n\t\t\t\t\tlist.collection.trigger( 'reorder' );\n\t\t\t\t}, this );\n\t\t\t\tlist.on( 'sortStart', list.sortable_start );\n\t\t\t\tlist.on( 'sortStop', list.sortable_stop );\n\n\t\t\t\tthis.model.on( 'new-question-added', function() {\n\t\t\t\t\tvar $questions = this.$el.find( '#llms-quiz-questions' );\n\t\t\t\t\t$questions.animate( { scrollTop: $questions.prop( 'scrollHeight' ) }, 200 );\n\t\t\t\t}, this );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Bulk expand / collapse question buttons\n\t\t * @param    obj   event  js event object\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tbulk_toggle: function( event ) {\n\n\t\t\tvar expanded = ( 'expand' === $( event.target ).attr( 'data-action' ) );\n\n\t\t\tthis.model.get( 'questions' ).each( function( question ) {\n\t\t\t\tquestion.set( '_expanded', expanded );\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Adds a new quiz to a lesson which currently has no quiz associated with it\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tenable_quiz: function() {\n\n\t\t\tvar quiz = this.lesson.get( 'quiz' );\n\t\t\tif ( _.isEmpty( quiz ) ) {\n\t\t\t\tquiz = this.lesson.add_quiz();\n\t\t\t} else {\n\t\t\t\tthis.lesson.set( 'quiz_enabled', 'yes' );\n\t\t\t}\n\n\t\t\tthis.model = quiz;\n\t\t\tthis.render();\n\n\t\t},\n\n\t\t// filter_question_types: _.debounce( function( event ) {\n\n\t\t// \tvar term = $( event.target ).val();\n\n\t\t// \tthis.QuestionBankView.viewManager.each( function( view ) {\n\t\t// \t\tif ( ! term ) {\n\t\t// \t\t\tview.clear_filter();\n\t\t// \t\t} else {\n\t\t// \t\t\tview.filter( term );\n\t\t// \t\t}\n\t\t// \t} );\n\n\n\t\t// }, 300 ),\n\n\t\t/**\n\t\t * \"Add Question\" button click event\n\t\t * Creates a popover with question type list interface\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tshow_tools: function() {\n\n\t\t\t// create popover\n\t\t\tvar pop = new Popover( {\n\t\t\t\tel: '#llms-show-question-bank',\n\t\t\t\targs: {\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\tcloseable: true,\n\t\t\t\t\tcontainer: '#llms-builder-sidebar',\n\t\t\t\t\tdismissible: true,\n\t\t\t\t\tplacement: 'top-left',\n\t\t\t\t\twidth: 'calc( 100% - 40px )',\n\t\t\t\t\ttitle: LLMS.l10n.translate( 'Add a Question' ),\n\t\t\t\t\turl: '#llms-quiz-tools',\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// show it\n\t\t\tpop.show();\n\n\t\t\t// if a question is added, hide the popover\n\t\t\tthis.model.on( 'new-question-added', function() {\n\t\t\t\tpop.hide();\n\t\t\t} );\n\n\t\t},\n\n\t\tget_question_list: function( options ) {\n\t\t\treturn new QuestionList( options );\n\t\t}\n\n\t}, Editable, Subview ) );\n\n} );\n\n","/**\n * Sidebar Editor View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Editor',[ 'Views/LessonEditor', 'Views/Quiz', 'Views/_Subview' ], function( LessonEditor, Quiz, Subview ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Current view state\n\t\t * @type  {String}\n\t\t */\n\t\tstate: 'lesson', // [lesson|quiz]\n\n\t\t/**\n\t\t * Current Subviews\n\t\t * @type  {Object}\n\t\t */\n\t\tviews: {\n\t\t\tlesson: {\n\t\t\t\tclass: LessonEditor,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'lesson',\n\t\t\t},\n\t\t\tquiz: {\n\t\t\t\tclass: Quiz,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'quiz',\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-editor',\n\n\t\tevents: {\n\t\t\t'click .llms-editor-nav a[href=\"#llms-editor-close\"]': 'close_editor',\n\t\t\t'click .llms-editor-nav a:not([href=\"#llms-editor-close\"])': 'switch_tab',\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-editor-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\tthis.SidebarView = data.SidebarView;\n\t\t\tif ( data.tab ) {\n\t\t\t\tthis.state = data.tab;\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function( view_data ) {\n\n\t\t\tview_data = view_data || {};\n\n\t\t\tthis.$el.html( this.template( this ) );\n\n\t\t\tthis.render_subviews( _.extend( view_data, {\n\t\t\t\tlesson: this.model,\n\t\t\t} ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for close sidebar editor button\n\t\t * Sends event to main SidebarView to trigger editor closing events\n\t\t * @param    obj   event  js event obj\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tclose_editor: function( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'sidebar-editor-close' );\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for switching tabs in the editor navigation\n\t\t * @param    object  event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tswitch_tab: function( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar $btn = $( event.target ),\n\t\t\t\tview = $btn.attr( 'data-view' ),\n\t\t\t\t$tab = this.$el.find( $btn.attr( 'href' ) );\n\n\t\t\tthis.set_state( view ).render();\n\n\t\t\t// Backbone.pubSub.trigger( 'editor-tab-activated', $btn.attr( 'href' ).substring( 1 ) );\n\n\t\t},\n\n\t}, Subview ) );\n\n} );\n\n","/**\n * Existing Lesson Popover content View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/LessonSearch',[], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\t/**\n\t\t * DOM Events\n\t\t * @type     obj\n\t\t * @since    3.14.4\n\t\t * @version  3.14.4\n\t\t */\n\t\tevents: {\n\t\t\t'select2:select': 'add_lesson',\n\t\t},\n\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'select',\n\n\t\t/**\n\t\t * Select event, adds the existing lesson to the course\n\t\t * @param    obj   event  select2:select event object\n\t\t * @since    3.14.4\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_lesson: function( event ) {\n\n\t\t\tBackbone.pubSub.trigger( 'lesson-search-select', event.params.data, event );\n\n\t\t\tthis.$el.val( null ).trigger( 'change' );\n\n\t\t},\n\n\t\t/**\n\t\t * Render the section\n\t\t * Initalizes a new collection and views for all lessons in the section\n\t\t * @return   void\n\t\t * @since    3.14.4\n\t\t * @version  3.14.4\n\t\t */\n\t\trender: function() {\n\t\t\tvar self = this;\n\t\t\tsetTimeout( function () {\n\t\t\t\tself.$el.llmsSelect2( {\n\t\t\t\t\tajax: {\n\t\t\t\t\t\tdataType: 'JSON',\n\t\t\t\t\t\tdelay: 250,\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: window.ajaxurl,\n\t\t\t\t\t\tdata: function( params ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\taction: 'llms_builder',\n\t\t\t\t\t\t\t\taction_type: 'search',\n\t\t\t\t\t\t\t\tcourse_id: window.llms_builder.course.id,\n\t\t\t\t\t\t\t\tterm: params.term,\n\t\t\t\t\t\t\t\tpage: params.page,\n\t\t\t\t\t\t\t\t_ajax_nonce: wp_ajax_data.nonce,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// error: function( xhr, status, error ) {\n\t\t\t\t\t\t// \tconsole.log( status, error );\n\t\t\t\t\t\t// },\n\t\t\t\t\t},\n\t\t\t\t\tdropdownParent: $( '.webui-popover-inner' ),\n\t\t\t\t\t// don't escape html from render_result\n\t\t\t\t\tescapeMarkup: function( markup ) {\n\t\t\t\t\t\treturn markup;\n\t\t\t\t\t},\n\t\t\t\t\tplaceholder: LLMS.l10n.translate( 'Search for existing lessons...' ),\n\t\t\t\t\ttemplateResult: self.render_result,\n\t\t\t\t\twidth: '100%',\n\t\t\t\t} );\n\t\t\t}, 0 );\n\t\t\treturn this;\n\n\t\t},\n\n\t\trender_result: function( res ) {\n\n\t\t\tvar $html = $( '<div class=\"llms-existing-lesson-result\" />' );\n\n\t\t\tif ( res.loading ) {\n\t\t\t\treturn $html.append( res.text );\n\t\t\t}\n\n\t\t\tvar $side = $( '<aside class=\"llms-existing-action\" />' ),\n\t\t\t\t$main = $( '<div class=\"llms-existing-info\" />' );\n\t\t\t\ticon = ( 'attach' === res.action ) ? 'paperclip' : 'clone',\n\t\t\t\ttext = ( 'attach' === res.action ) ? 'Attach' : 'Clone';\n\n\t\t\ttext = LLMS.l10n.translate( text );\n\n\t\t\t$side.append( '<i class=\"fa fa-' + icon + '\" aria-hidden=\"true\"></i><small>' + text + '</small>' );\n\n\t\t\t$main.append( '<h4>' + res.data.title + '</h4>' );\n\t\t\t$main.append( '<h5>' + LLMS.l10n.translate( 'ID' ) + ': <em>' + res.data.id + '</em></h5>' );\n\t\t\tif ( res.course_title ) {\n\t\t\t\t$main.append( '<h5>' + LLMS.l10n.translate( 'Course' ) + ': <em>' + res.course_title + '</em></h5>' );\n\t\t\t}\n\n\t\t\treturn $html.append( $side ).append( $main );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Sidebar Elements View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Elements',[ 'Models/Section', 'Views/Section', 'Models/Lesson', 'Views/Lesson', 'Views/Popover', 'Views/LessonSearch' ], function( Section, SectionView, Lesson, LessonView, Popover, LessonSearch ) {\n\n\treturn Backbone.View.extend( {\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-elements',\n\n\t\tevents: {\n\t\t\t'click #llms-new-section': 'add_new_section',\n\t\t\t'click #llms-new-lesson': 'add_new_lesson',\n\t\t\t'click #llms-existing-lesson': 'add_existing_lesson',\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-elements-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\t// save a reference to the main Course view\n\t\t\tthis.SidebarView = data.SidebarView;\n\n\t\t\t// watch course sections and enable/disable lesson buttons conditionally\n\t\t\tthis.listenTo( this.SidebarView.CourseView.model.get( 'sections' ), 'add', this.maybe_disable_buttons );\n\t\t\tthis.listenTo( this.SidebarView.CourseView.model.get( 'sections' ), 'remove', this.maybe_disable_buttons );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template() );\n\t\t\tthis.draggable();\n\t\t\tthis.maybe_disable_buttons();\n\n\t\t\treturn this;\n\t\t},\n\n\t\tdraggable: function() {\n\n\t\t\t$( '#llms-new-section' ).draggable( {\n\t\t\t\tappendTo: '#llms-sections',\n\t\t\t\tcancel: false,\n\t\t\t\tconnectToSortable: '.llms-sections',\n\t\t\t\thelper: function() {\n\t\t\t\t\treturn new SectionView( { model: new Section() } ).render().$el;\n\t\t\t\t},\n\t\t\t\tstart: function() {\n\t\t\t\t\t$( '.llms-sections' ).addClass( 'dragging' );\n\t\t\t\t},\n\t\t\t\tstop: function() {\n\t\t\t\t\t$( '.llms-sections' ).removeClass( 'dragging' );\n\t\t\t\t},\n\t\t\t} );\n\n\t\t\t$( '#llms-new-lesson' ).draggable( {\n\t\t\t\t// appendTo: '#llms-sections .llms-section:first-child .llms-lessons',\n\t\t\t\tappendTo: '#llms-sections',\n\t\t\t\tcancel: false,\n\t\t\t\tconnectToSortable: '.llms-lessons',\n\t\t\t\thelper: function() {\n\t\t\t\t\treturn new LessonView( { model: new Lesson() } ).render().$el;\n\t\t\t\t},\n\t\t\t\tstart: function() {\n\n\t\t\t\t\t$( '.llms-lessons' ).addClass( 'dragging' );\n\n\t\t\t\t},\n\t\t\t\tstop: function() {\n\t\t\t\t\t$( '.llms-lessons' ).removeClass( 'dragging' );\n\t\t\t\t\t$( '.drag-expanded' ).removeClass( '.drag-expanded' );\n\t\t\t\t},\n\t\t\t} );\n\n\t\t},\n\n\t\tadd_new_section: function( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'add-new-section' );\n\t\t},\n\n\t\tadd_new_lesson: function( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'add-new-lesson' );\n\t\t},\n\n\t\tadd_existing_lesson: function( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar pop = new Popover( {\n\t\t\t\tel: '#llms-existing-lesson',\n\t\t\t\targs: {\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\tcloseable: true,\n\t\t\t\t\tcontainer: '.wrap.lifterlms.llms-builder',\n\t\t\t\t\tdismissible: true,\n\t\t\t\t\tplacement: 'left',\n\t\t\t\t\twidth: 480,\n\t\t\t\t\ttitle: LLMS.l10n.translate( 'Add Existing Lesson' ),\n\t\t\t\t\tcontent: new LessonSearch().render().$el,\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tpop.show();\n\t\t\tBackbone.pubSub.on( 'lesson-search-select', function() {\n\t\t\t\tpop.hide();\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Disables lesson add buttons if no sections are available to add a lesson to\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tmaybe_disable_buttons: function() {\n\n\t\t\tvar $els = $( '#llms-new-lesson, #llms-existing-lesson' );\n\n\t\t\tif ( ! this.SidebarView.CourseView.model.get( 'sections' ).length ) {\n\t\t\t\t$els.attr( 'disabled', 'disabled' );\n\t\t\t} else {\n\t\t\t\t$els.removeAttr( 'disabled' );\n\t\t\t}\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Sidebar Utilities View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Utilities',[], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-utilities',\n\n\t\tevents: {\n\t\t\t'click #llms-collapse-all': 'collapse_all',\n\t\t\t'click #llms-expand-all': 'expand_all'\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-utilities-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\t// this.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\t\t\tthis.$el.html( this.template() );\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Collapse all sections\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcollapse_all: function( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'collapse-all' );\n\t\t},\n\n\t\t/**\n\t\t * Expand all sections\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\texpand_all: function( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'expand-all' );\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Main sidebar view\n * @since    3.16.0\n * @version  3.16.7\n */\ndefine( 'Views/Sidebar',[\n\t\t'Views/Editor',\n\t\t'Views/Elements',\n\t\t'Views/Utilities',\n\t\t'Views/_Subview'\n\t], function(\n\t\tEditor,\n\t\tElements,\n\t\tUtilities,\n\t\tSubview\n\t) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Current builder state\n\t\t * @type  {String}\n\t\t */\n\t\tstate: 'builder', // [builder|editor]\n\n\t\t/**\n\t\t * Current Subviews\n\t\t * @type  {Object}\n\t\t */\n\t\tviews: {\n\t\t\telements: {\n\t\t\t\tclass: Elements,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'builder',\n\t\t\t},\n\t\t\tutilities: {\n\t\t\t\tclass: Utilities,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'builder',\n\t\t\t},\n\t\t\teditor: {\n\t\t\t\tclass: Editor,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'editor',\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-builder-sidebar',\n\n\t\t/**\n\t\t * DOM events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click #llms-save-button': 'save_now',\n\t\t\t'click #llms-exit-button': 'exit_now',\n\t\t\t'click .llms-builder-error': 'clear_errors',\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'aside',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-sidebar-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\t// save a reference to the main Course view\n\t\t\tthis.CourseView = data.CourseView;\n\n\t\t\tthis.render();\n\n\t\t\tBackbone.pubSub.on( 'current-save-status', this.changes_made, this );\n\n\t\t\tBackbone.pubSub.on( 'heartbeat-send', this.heartbeat_send, this );\n\t\t\tBackbone.pubSub.on( 'heartbeat-tick', this.heartbeat_tick, this );\n\n\t\t\tBackbone.pubSub.on( 'lesson-selected', this.on_lesson_select, this );\n\t\t\tBackbone.pubSub.on( 'sidebar-editor-close', this.on_editor_close, this );\n\n\t\t\tthis.$saveButton = $( '#llms-save-button' );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function( view_data ) {\n\n\t\t\tview_data = view_data || {};\n\n\t\t\tthis.$el.html( this.template() );\n\n\t\t\tthis.render_subviews( _.extend( view_data, {\n\t\t\t\tSidebarView: this,\n\t\t\t} ) );\n\n\t\t\tvar $el = $( '.wrap.lifterlms.llms-builder' );\n\t\t\tif ( 'builder' === this.state ) {\n\t\t\t\t$el.removeClass( 'editor-active' );\n\t\t\t} else {\n\t\t\t\t$el.addClass( 'editor-active' );\n\t\t\t}\n\n\t\t\tthis.$saveButton = this.$el.find( '#llms-save-button' );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Adds error message element\n\t\t * @param    {[type]}   $err  [description]\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_error: function( $err ) {\n\n\t\t\tthis.$el.find( '.llms-builder-save' ).prepend( $err );\n\n\t\t},\n\n\t\t/**\n\t\t * Clear any existing error message elements\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tclear_errors: function() {\n\n\t\t\tthis.$el.find( '.llms-builder-save .llms-builder-error' ).remove();\n\n\t\t},\n\n\t\t/**\n\t\t * Update save status button when changes are detected\n\t\t * runs on an interval to check status of course regularly for unsaved changes\n\t\t * @param    obj   sync  instance of the sync controller\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tchanges_made: function( sync ) {\n\n\t\t\t// if a save is currently running, don't do anything\n\t\t\tif ( sync.saving ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( sync.has_unsaved_changes ) {\n\n\t\t\t\tthis.$saveButton.attr( 'data-status', 'unsaved' );\n\t\t\t\tthis.$saveButton.removeAttr( 'disabled' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.$saveButton.attr( 'data-status', 'saved' );\n\t\t\t\tthis.$saveButton.attr( 'disabled', 'disabled' );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Exit the builder and return to the WP Course Editor\n\t\t * @return   void\n\t\t * @since    3.16.7\n\t\t * @version  3.16.7\n\t\t */\n\t\texit_now: function() {\n\n\t\t\twindow.location.href = window.llms_builder.CourseModel.get_edit_post_link();\n\n\t\t},\n\n\t\t/**\n\t\t * Triggered when a heartbeat send event starts containing builder information\n\t\t * @param    obj   sync  instance of the sync controller\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\theartbeat_send: function( sync ) {\n\n\t\t\tif ( sync.saving ) {\n\t\t\t\tLLMS.Spinner.start( this.$saveButton.find( 'i' ), 'small' );\n\t\t\t\tthis.$saveButton.attr( {\n\t\t\t\t\t'data-status': 'saving',\n\t\t\t\t\tdisabled: 'disabled',\n\t\t\t\t} );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Triggered when a heartbeat tick completes and updates save status or appends errors\n\t\t * @param    obj   sync  instance of the sync controller\n\t\t * @param    obj   data  updated data\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\theartbeat_tick: function( sync, data ) {\n\n\t\t\tif ( ! sync.saving ) {\n\n\t\t\t\tvar status = 'saved';\n\n\t\t\t\tthis.clear_errors();\n\n\t\t\t\tif ( 'error' === data.status ) {\n\n\t\t\t\t\tstatus = 'error';\n\n\t\t\t\t\tvar msg = data.message,\n\t\t\t\t\t\t$err = $( '<ol class=\"llms-builder-error\" />' );\n\n\t\t\t\t\tif ( 'object' === typeof msg ) {\n\t\t\t\t\t\t_.each( msg, function( txt ) {\n\t\t\t\t\t\t\t$err.append( '<li>' + txt + '</li>' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$err = $err.append( '<li>' + msg + '</li>' );;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.add_error( $err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.$saveButton.find( '.llms-spinning' ).remove();\n\t\t\t\tthis.$saveButton.attr( {\n\t\t\t\t\t'data-status': status,\n\t\t\t\t\tdisabled: 'disabled',\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if the editor is the currently active state\n\t\t * @return   boolean\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tis_editor_active: function() {\n\n\t\t\treturn ( 'editor' === this.state );\n\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the editor closes, updates state to be the course builder view\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_editor_close: function() {\n\n\t\t\tthis.set_state( 'builder' ).render();\n\n\t\t},\n\n\t\t/**\n\t\t * When a lesson is selected, opens the sidebar to the editor view\n\t\t * @param    obj   lesson_model  instance of the lesson model which was selected\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_lesson_select: function( lesson_model, tab ) {\n\n\t\t\tif ( 'editor' !== this.state ) {\n\t\t\t\tthis.set_state( 'editor' );\n\t\t\t} else {\n\t\t\t\tthis.remove_subview( 'editor' );\n\t\t\t}\n\n\t\t\tthis.render( {\n\t\t\t\tmodel: lesson_model,\n\t\t\t\ttab: tab,\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Save button click event\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tsave_now: function() {\n\n\t\t\twindow.llms_builder.sync.save_now();\n\n\t\t},\n\n\t}, Subview ) );\n\n} );\n\n","require( [\n\t'../vendor/backbone.collectionView',\n\t'../vendor/backbone-forms',\n\t'../vendor/backbone.trackit',\n\t'Controllers/Construct',\n\t'Controllers/Debug',\n\t'Controllers/Sync',\n\t'Models/loader',\n\t'Views/Editors/wysiwyg',\n\t'Views/Course',\n\t'Views/Sidebar'\n], function(\n\tForms,\n\tCV,\n\tTrackIt,\n\tConstruct,\n\tDebug,\n\tSync,\n\tModels,\n\tWysiwygEditor,\n\tCourseView,\n\tSidebarView\n) {\n\n\twindow.llms_builder.debug = new Debug( window.llms_builder.debug );\n\twindow.llms_builder.construct = new Construct();\n\n\t// register custom backbone forms editor\n\tBackbone.Form.editors.Wysiwyg = WysiwygEditor;\n\n\tBackbone.pubSub = _.extend( {}, Backbone.Events );\n\n\t$( document ).trigger( 'llms-builder-pre-init' );\n\n\twindow.llms_builder.questions = window.llms_builder.construct.get_collection( 'QuestionTypes', window.llms_builder.questions );\n\n\tvar CourseModel = window.llms_builder.construct.get_model( 'Course', window.llms_builder.course );\n\twindow.llms_builder.CourseModel = CourseModel;\n\n\twindow.llms_builder.sync = new Sync( CourseModel, window.llms_builder.sync );\n\n\tvar Course = new CourseView( {\n\t\tmodel: CourseModel,\n\t} );\n\n\tvar Sidebar = new SidebarView( {\n\t\tCourseView: Course\n\t} );\n\n\t$( document ).trigger( 'llms-builder-init', {\n\t\tcourse: Course,\n\t\tsidebar: Sidebar,\n\t} );\n\n} );\n\ndefine(\"main\", function(){});\n\n"]}