{"version":3,"sources":["../../../config-wrap-start-default.js","../vendor/almond.js","underscore.js","backbone.js","jquery.js","../vendor/backbone.collectionView.js","../vendor/backbone-forms.js","../vendor/backbone.trackit.js","Models/Image.js","Models/_Relationships.js","Models/QuestionChoice.js","Collections/QuestionChoices.js","Models/QuestionType.js","Models/Question.js","Collections/Questions.js","Models/Quiz.js","Models/_Utilities.js","Models/Lesson.js","Collections/Lessons.js","Collections/QuestionTypes.js","Models/Section.js","Collections/Sections.js","Collections/loader.js","Models/Course.js","Models/loader.js","Controllers/Construct.js","Controllers/Debug.js","Controllers/Sync.js","Views/Editors/wysiwyg.js","Views/_Editable.js","Views/_Shiftable.js","Views/Lesson.js","Views/_Receivable.js","Views/LessonList.js","Views/Section.js","Views/SectionList.js","Views/Course.js","Views/LessonEditor.js","Views/Popover.js","Views/QuizHeader.js","Views/QuestionType.js","Views/QuestionBank.js","Views/QuestionChoice.js","Views/QuestionChoiceList.js","Views/Question.js","Views/QuestionList.js","Views/_Subview.js","Views/Quiz.js","Views/Editor.js","Views/LessonSearch.js","Views/Elements.js","Views/Utilities.js","Views/Sidebar.js","main.js","../../../config-wrap-end-default.js"],"names":[],"mappingsrbivMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxttpzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACltEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClpldA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjjhrRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnjxzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxlnjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjnTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1DA;AACA","file":"llms-builder.min.js","sourcesContent":["(function($){\n","/**\n * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/almond/LICENSE\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n\tvar main, req, makeMap, handlers,\n\t\tdefined = {},\n\t\twaiting = {},\n\t\tconfig = {},\n\t\tdefining = {},\n\t\thasOwn = Object.prototype.hasOwnProperty,\n\t\taps = [].slice,\n\t\tjsSuffixRegExp = /\\.js$/;\n\n\tfunction hasProp(obj, prop) {\n\t\treturn hasOwn.call(obj, prop);\n\t}\n\n\t/**\n\t * Given a relative module name, like ./something, normalize it to\n\t * a real name that can be mapped to a path.\n\t * @param {String} name the relative name\n\t * @param {String} baseName a real name that the name arg is relative\n\t * to.\n\t * @returns {String} normalized name\n\t */\n\tfunction normalize(name, baseName) {\n\t\tvar nameParts, nameSegment, mapValue, foundMap, lastIndex,\n\t\t\tfoundI, foundStarMap, starI, i, j, part, normalizedBaseParts,\n\t\t\tbaseParts = baseName && baseName.split(\"/\"),\n\t\t\tmap = config.map,\n\t\t\tstarMap = (map && map['*']) || {};\n\n\t\t//Adjust any relative paths.\n\t\tif (name) {\n\t\t\tname = name.split('/');\n\t\t\tlastIndex = name.length - 1;\n\n\t\t\t// If wanting node ID compatibility, strip .js from end\n\t\t\t// of IDs. Have to do this here, and not in nameToUrl\n\t\t\t// because node allows either .js or non .js to map\n\t\t\t// to same file.\n\t\t\tif (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n\t\t\t\tname[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n\t\t\t}\n\n\t\t\t// Starts with a '.' so need the baseName\n\t\t\tif (name[0].charAt(0) === '.' && baseParts) {\n\t\t\t\t//Convert baseName to array, and lop off the last part,\n\t\t\t\t//so that . matches that 'directory' and not name of the baseName's\n\t\t\t\t//module. For instance, baseName of 'one/two/three', maps to\n\t\t\t\t//'one/two/three.js', but we want the directory, 'one/two' for\n\t\t\t\t//this normalization.\n\t\t\t\tnormalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n\t\t\t\tname = normalizedBaseParts.concat(name);\n\t\t\t}\n\n\t\t\t//start trimDots\n\t\t\tfor (i = 0; i < name.length; i++) {\n\t\t\t\tpart = name[i];\n\t\t\t\tif (part === '.') {\n\t\t\t\t\tname.splice(i, 1);\n\t\t\t\t\ti -= 1;\n\t\t\t\t} else if (part === '..') {\n\t\t\t\t\t// If at the start, or previous value is still ..,\n\t\t\t\t\t// keep them so that when converted to a path it may\n\t\t\t\t\t// still work when converted to a path, even though\n\t\t\t\t\t// as an ID it is less than ideal. In larger point\n\t\t\t\t\t// releases, may be better to just kick out an error.\n\t\t\t\t\tif (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (i > 0) {\n\t\t\t\t\t\tname.splice(i - 1, 2);\n\t\t\t\t\t\ti -= 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//end trimDots\n\n\t\t\tname = name.join('/');\n\t\t}\n\n\t\t//Apply map config if available.\n\t\tif ((baseParts || starMap) && map) {\n\t\t\tnameParts = name.split('/');\n\n\t\t\tfor (i = nameParts.length; i > 0; i -= 1) {\n\t\t\t\tnameSegment = nameParts.slice(0, i).join(\"/\");\n\n\t\t\t\tif (baseParts) {\n\t\t\t\t\t//Find the longest baseName segment match in the config.\n\t\t\t\t\t//So, do joins on the biggest to smallest lengths of baseParts.\n\t\t\t\t\tfor (j = baseParts.length; j > 0; j -= 1) {\n\t\t\t\t\t\tmapValue = map[baseParts.slice(0, j).join('/')];\n\n\t\t\t\t\t\t//baseName segment has  config, find if it has one for\n\t\t\t\t\t\t//this name.\n\t\t\t\t\t\tif (mapValue) {\n\t\t\t\t\t\t\tmapValue = mapValue[nameSegment];\n\t\t\t\t\t\t\tif (mapValue) {\n\t\t\t\t\t\t\t\t//Match, update name to the new value.\n\t\t\t\t\t\t\t\tfoundMap = mapValue;\n\t\t\t\t\t\t\t\tfoundI = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (foundMap) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t//Check for a star map match, but just hold on to it,\n\t\t\t\t//if there is a shorter segment match later in a matching\n\t\t\t\t//config, then favor over this star map.\n\t\t\t\tif (!foundStarMap && starMap && starMap[nameSegment]) {\n\t\t\t\t\tfoundStarMap = starMap[nameSegment];\n\t\t\t\t\tstarI = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!foundMap && foundStarMap) {\n\t\t\t\tfoundMap = foundStarMap;\n\t\t\t\tfoundI = starI;\n\t\t\t}\n\n\t\t\tif (foundMap) {\n\t\t\t\tnameParts.splice(0, foundI, foundMap);\n\t\t\t\tname = nameParts.join('/');\n\t\t\t}\n\t\t}\n\n\t\treturn name;\n\t}\n\n\tfunction makeRequire(relName, forceSync) {\n\t\treturn function () {\n\t\t\t//A version of a require function that passes a moduleName\n\t\t\t//value for items that may need to\n\t\t\t//look up paths relative to the moduleName\n\t\t\tvar args = aps.call(arguments, 0);\n\n\t\t\t//If first arg is not require('string'), and there is only\n\t\t\t//one arg, it is the array form without a callback. Insert\n\t\t\t//a null so that the following concat is correct.\n\t\t\tif (typeof args[0] !== 'string' && args.length === 1) {\n\t\t\t\targs.push(null);\n\t\t\t}\n\t\t\treturn req.apply(undef, args.concat([relName, forceSync]));\n\t\t};\n\t}\n\n\tfunction makeNormalize(relName) {\n\t\treturn function (name) {\n\t\t\treturn normalize(name, relName);\n\t\t};\n\t}\n\n\tfunction makeLoad(depName) {\n\t\treturn function (value) {\n\t\t\tdefined[depName] = value;\n\t\t};\n\t}\n\n\tfunction callDep(name) {\n\t\tif (hasProp(waiting, name)) {\n\t\t\tvar args = waiting[name];\n\t\t\tdelete waiting[name];\n\t\t\tdefining[name] = true;\n\t\t\tmain.apply(undef, args);\n\t\t}\n\n\t\tif (!hasProp(defined, name) && !hasProp(defining, name)) {\n\t\t\tthrow new Error('No ' + name);\n\t\t}\n\t\treturn defined[name];\n\t}\n\n\t//Turns a plugin!resource to [plugin, resource]\n\t//with the plugin being undefined if the name\n\t//did not have a plugin prefix.\n\tfunction splitPrefix(name) {\n\t\tvar prefix,\n\t\t\tindex = name ? name.indexOf('!') : -1;\n\t\tif (index > -1) {\n\t\t\tprefix = name.substring(0, index);\n\t\t\tname = name.substring(index + 1, name.length);\n\t\t}\n\t\treturn [prefix, name];\n\t}\n\n\t//Creates a parts array for a relName where first part is plugin ID,\n\t//second part is resource ID. Assumes relName has already been normalized.\n\tfunction makeRelParts(relName) {\n\t\treturn relName ? splitPrefix(relName) : [];\n\t}\n\n\t/**\n\t * Makes a name map, normalizing the name, and using a plugin\n\t * for normalization if necessary. Grabs a ref to plugin\n\t * too, as an optimization.\n\t */\n\tmakeMap = function (name, relParts) {\n\t\tvar plugin,\n\t\t\tparts = splitPrefix(name),\n\t\t\tprefix = parts[0],\n\t\t\trelResourceName = relParts[1];\n\n\t\tname = parts[1];\n\n\t\tif (prefix) {\n\t\t\tprefix = normalize(prefix, relResourceName);\n\t\t\tplugin = callDep(prefix);\n\t\t}\n\n\t\t//Normalize according\n\t\tif (prefix) {\n\t\t\tif (plugin && plugin.normalize) {\n\t\t\t\tname = plugin.normalize(name, makeNormalize(relResourceName));\n\t\t\t} else {\n\t\t\t\tname = normalize(name, relResourceName);\n\t\t\t}\n\t\t} else {\n\t\t\tname = normalize(name, relResourceName);\n\t\t\tparts = splitPrefix(name);\n\t\t\tprefix = parts[0];\n\t\t\tname = parts[1];\n\t\t\tif (prefix) {\n\t\t\t\tplugin = callDep(prefix);\n\t\t\t}\n\t\t}\n\n\t\t//Using ridiculous property names for space reasons\n\t\treturn {\n\t\t\tf: prefix ? prefix + '!' + name : name, //fullName\n\t\t\tn: name,\n\t\t\tpr: prefix,\n\t\t\tp: plugin\n\t\t};\n\t};\n\n\tfunction makeConfig(name) {\n\t\treturn function () {\n\t\t\treturn (config && config.config && config.config[name]) || {};\n\t\t};\n\t}\n\n\thandlers = {\n\t\trequire: function (name) {\n\t\t\treturn makeRequire(name);\n\t\t},\n\t\texports: function (name) {\n\t\t\tvar e = defined[name];\n\t\t\tif (typeof e !== 'undefined') {\n\t\t\t\treturn e;\n\t\t\t} else {\n\t\t\t\treturn (defined[name] = {});\n\t\t\t}\n\t\t},\n\t\tmodule: function (name) {\n\t\t\treturn {\n\t\t\t\tid: name,\n\t\t\t\turi: '',\n\t\t\t\texports: defined[name],\n\t\t\t\tconfig: makeConfig(name)\n\t\t\t};\n\t\t}\n\t};\n\n\tmain = function (name, deps, callback, relName) {\n\t\tvar cjsModule, depName, ret, map, i, relParts,\n\t\t\targs = [],\n\t\t\tcallbackType = typeof callback,\n\t\t\tusingExports;\n\n\t\t//Use name if no relName\n\t\trelName = relName || name;\n\t\trelParts = makeRelParts(relName);\n\n\t\t//Call the callback to define the module, if necessary.\n\t\tif (callbackType === 'undefined' || callbackType === 'function') {\n\t\t\t//Pull out the defined dependencies and pass the ordered\n\t\t\t//values to the callback.\n\t\t\t//Default to [require, exports, module] if no deps\n\t\t\tdeps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n\t\t\tfor (i = 0; i < deps.length; i += 1) {\n\t\t\t\tmap = makeMap(deps[i], relParts);\n\t\t\t\tdepName = map.f;\n\n\t\t\t\t//Fast path CommonJS standard dependencies.\n\t\t\t\tif (depName === \"require\") {\n\t\t\t\t\targs[i] = handlers.require(name);\n\t\t\t\t} else if (depName === \"exports\") {\n\t\t\t\t\t//CommonJS module spec 1.1\n\t\t\t\t\targs[i] = handlers.exports(name);\n\t\t\t\t\tusingExports = true;\n\t\t\t\t} else if (depName === \"module\") {\n\t\t\t\t\t//CommonJS module spec 1.1\n\t\t\t\t\tcjsModule = args[i] = handlers.module(name);\n\t\t\t\t} else if (hasProp(defined, depName) ||\n\t\t\t\t\t\t   hasProp(waiting, depName) ||\n\t\t\t\t\t\t   hasProp(defining, depName)) {\n\t\t\t\t\targs[i] = callDep(depName);\n\t\t\t\t} else if (map.p) {\n\t\t\t\t\tmap.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n\t\t\t\t\targs[i] = defined[depName];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(name + ' missing ' + depName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tret = callback ? callback.apply(defined[name], args) : undefined;\n\n\t\t\tif (name) {\n\t\t\t\t//If setting exports via \"module\" is in play,\n\t\t\t\t//favor that over return value and exports. After that,\n\t\t\t\t//favor a non-undefined return value over exports use.\n\t\t\t\tif (cjsModule && cjsModule.exports !== undef &&\n\t\t\t\t\t\tcjsModule.exports !== defined[name]) {\n\t\t\t\t\tdefined[name] = cjsModule.exports;\n\t\t\t\t} else if (ret !== undef || !usingExports) {\n\t\t\t\t\t//Use the return value from the function.\n\t\t\t\t\tdefined[name] = ret;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (name) {\n\t\t\t//May just be an object definition for the module. Only\n\t\t\t//worry about defining if have a module name.\n\t\t\tdefined[name] = callback;\n\t\t}\n\t};\n\n\trequirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n\t\tif (typeof deps === \"string\") {\n\t\t\tif (handlers[deps]) {\n\t\t\t\t//callback in this case is really relName\n\t\t\t\treturn handlers[deps](callback);\n\t\t\t}\n\t\t\t//Just return the module wanted. In this scenario, the\n\t\t\t//deps arg is the module name, and second arg (if passed)\n\t\t\t//is just the relName.\n\t\t\t//Normalize module name, if it contains . or ..\n\t\t\treturn callDep(makeMap(deps, makeRelParts(callback)).f);\n\t\t} else if (!deps.splice) {\n\t\t\t//deps is a config object, not an array.\n\t\t\tconfig = deps;\n\t\t\tif (config.deps) {\n\t\t\t\treq(config.deps, config.callback);\n\t\t\t}\n\t\t\tif (!callback) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (callback.splice) {\n\t\t\t\t//callback is an array, which means it is a dependency list.\n\t\t\t\t//Adjust args if there are dependencies\n\t\t\t\tdeps = callback;\n\t\t\t\tcallback = relName;\n\t\t\t\trelName = null;\n\t\t\t} else {\n\t\t\t\tdeps = undef;\n\t\t\t}\n\t\t}\n\n\t\t//Support require(['a'])\n\t\tcallback = callback || function () {};\n\n\t\t//If relName is a function, it is an errback handler,\n\t\t//so remove it.\n\t\tif (typeof relName === 'function') {\n\t\t\trelName = forceSync;\n\t\t\tforceSync = alt;\n\t\t}\n\n\t\t//Simulate async callback;\n\t\tif (forceSync) {\n\t\t\tmain(undef, deps, callback, relName);\n\t\t} else {\n\t\t\t//Using a non-zero value because of concern for what old browsers\n\t\t\t//do, and latest browsers \"upgrade\" to 4 if lower value is used:\n\t\t\t//http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n\t\t\t//If want a value immediately, use require('id') instead -- something\n\t\t\t//that works in almond on the global level, but not guaranteed and\n\t\t\t//unlikely to work in other AMD implementations.\n\t\t\tsetTimeout(function () {\n\t\t\t\tmain(undef, deps, callback, relName);\n\t\t\t}, 4);\n\t\t}\n\n\t\treturn req;\n\t};\n\n\t/**\n\t * Just drops the config on the floor, but returns req in case\n\t * the config return value is used.\n\t */\n\treq.config = function (cfg) {\n\t\treturn req(cfg);\n\t};\n\n\t/**\n\t * Expose module registry for debugging and tooling\n\t */\n\trequirejs._defined = defined;\n\n\tdefine = function (name, deps, callback) {\n\t\tif (typeof name !== 'string') {\n\t\t\tthrow new Error('See almond README: incorrect module build, no module name');\n\t\t}\n\n\t\t//This module may not have dependencies\n\t\tif (!deps.splice) {\n\t\t\t//deps is not an array, so probably means\n\t\t\t//an object literal or factory function for\n\t\t\t//the value. Adjust args.\n\t\t\tcallback = deps;\n\t\t\tdeps = [];\n\t\t}\n\n\t\tif (!hasProp(defined, name) && !hasProp(waiting, name)) {\n\t\t\twaiting[name] = [name, deps, callback];\n\t\t}\n\t};\n\n\tdefine.amd = {\n\t\tjQuery: true\n\t};\n}());\n\ndefine(\"../vendor/almond\", function(){});\n\n","/**\n * Returns the WordPress-loaded version of Underscore for use with things that need it and use Require.\n * @return   obj\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'underscore',[],function() {\n\treturn _;\n} );\n\n","/**\n * Returns the WordPress-loaded version of Backbone for use with things that need it and use Require.\n * @return   obj\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'backbone',[],function() {\n\treturn Backbone;\n} );\n\n","/**\n * Returns the WordPress-loaded version of Underscore for use with things that need it and use Require.\n * @return   obj\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'jquery',[],function() {\n\treturn jQuery;\n} );\n\n","/*!\n* Backbone.CollectionView, v1.3.4\n* Copyright (c)2013 Rotunda Software, LLC.\n* Distributed under MIT license\n* http://github.com/rotundasoftware/backbone-collection-view\n*/\n\n( function( root, factory ) {\n\t// UMD wrapper\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( '../vendor/backbone.collectionView',[ 'underscore', 'backbone', 'jquery' ], factory );\n\t} else if ( typeof exports !== 'undefined' ) {\n\t\t// Node/CommonJS\n\t\tmodule.exports = factory( require('underscore' ), require( 'backbone' ), require( 'backbone' ).$ );\n\t} else {\n\t\t// Browser globals\n\t\tfactory( root._, root.Backbone, ( root.jQuery || root.Zepto || root.$ ) );\n\t}\n}( this, function( _, Backbone, $ ) {\n\tvar mDefaultModelViewConstructor = Backbone.View;\n\n\tvar kDefaultReferenceBy = \"model\";\n\n\tvar kOptionsRequiringRerendering = [ \"collection\", \"modelView\", \"modelViewOptions\", \"itemTemplate\", \"itemTemplateFunction\", \"detachedRendering\" ];\n\n\tvar kStylesForEmptyListCaption = {\n\t\t\"background\" : \"transparent\",\n\t\t\"border\" : \"none\",\n\t\t\"box-shadow\" : \"none\"\n\t};\n\n\tBackbone.CollectionView = Backbone.View.extend( {\n\n\t\ttagName : \"ul\",\n\n\t\tevents : {\n\t\t\t\"mousedown > li, tbody > tr > td\" : \"_listItem_onMousedown\",\n\t\t\t\"dblclick > li, tbody > tr > td\" : \"_listItem_onDoubleClick\",\n\t\t\t\"click\" : \"_listBackground_onClick\",\n\t\t\t\"click ul.collection-view, table.collection-view\" : \"_listBackground_onClick\",\n\t\t\t\"keydown\" : \"_onKeydown\"\n\t\t},\n\n\t\t// only used if Backbone.Courier is available\n\t\tspawnMessages : {\n\t\t\t\"focus\" : \"focus\"\n\t\t},\n\n\t\t//only used if Backbone.Courier is available\n\t\tpassMessages : { \"*\" : \".\" },\n\n\t\t// viewOption definitions with default values.\n\t\tinitializationOptions : [\n\t\t\t{ \"collection\" : null },\n\t\t\t{ \"modelView\" : null },\n\t\t\t{ \"modelViewOptions\" : {} },\n\t\t\t{ \"itemTemplate\" : null },\n\t\t\t{ \"itemTemplateFunction\" : null },\n\t\t\t{ \"selectable\" : true },\n\t\t\t{ \"clickToSelect\" : true },\n\t\t\t{ \"selectableModelsFilter\" : null },\n\t\t\t{ \"visibleModelsFilter\" : null },\n\t\t\t{ \"sortableModelsFilter\" : null },\n\t\t\t{ \"selectMultiple\" : false },\n\t\t\t{ \"clickToToggle\" : false },\n\t\t\t{ \"processKeyEvents\" : true },\n\t\t\t{ \"sortable\" : false },\n\t\t\t{ \"sortableOptions\" : null },\n\t\t\t{ \"reuseModelViews\" : true },\n\t\t\t{ \"detachedRendering\" : false },\n\t\t\t{ \"emptyListCaption\" : null }\n\t\t],\n\n\t\tinitialize : function( options ) {\n\t\t\tBackbone.ViewOptions.add( this, \"initializationOptions\" ); // setup the ViewOptions functionality.\n\t\t\tthis.setOptions( options ); // and make use of any provided options\n\n\t\t\tif( ! this.collection ) this.collection = new Backbone.Collection();\n\n\t\t\tthis._hasBeenRendered = false;\n\n\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\tBackbone.Courier.add( this );\n\t\t\t}\n\n\t\t\tthis.$el.data( \"view\", this ); // needed for connected sortable lists\n\t\t\tthis.$el.addClass( \"collection-view collection-list\" ); // collection-list is in there for legacy purposes\n\t\t\tif( this.selectable ) this.$el.addClass( \"selectable\" );\n\n\t\t\tif( this.selectable && this.processKeyEvents )\n\t\t\t\tthis.$el.attr( \"tabindex\", 0 ); // so we get keyboard events\n\n\t\t\tthis.selectedItems = [];\n\n\t\t\tthis._updateItemTemplate();\n\n\t\t\tif( this.collection )\n\t\t\t\tthis._registerCollectionEvents();\n\n\t\t\tthis.viewManager = new ChildViewContainer();\n\t\t},\n\n\t\t_onOptionsChanged : function( changedOptions, originalOptions ) {\n\t\t\tvar _this = this;\n\t\t\tvar rerender = false;\n\n\t\t\t_.each( _.keys( changedOptions ), function( changedOptionKey ) {\n\t\t\t\tvar newVal = changedOptions[ changedOptionKey ];\n\t\t\t\tvar oldVal = originalOptions[ changedOptionKey ];\n\t\t\t\tswitch( changedOptionKey ) {\n\t\t\t\t\tcase \"collection\" :\n\t\t\t\t\t\tif ( newVal !== oldVal ) {\n\t\t\t\t\t\t\t_this.stopListening( oldVal );\n\t\t\t\t\t\t\t_this._registerCollectionEvents();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"selectMultiple\" :\n\t\t\t\t\t\tif( ! newVal && _this.selectedItems.length > 1 )\n\t\t\t\t\t\t\t_this.setSelectedModel( _.first( _this.selectedItems ), { by : \"cid\" } );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"selectable\" :\n\t\t\t\t\t\tif( ! newVal && _this.selectedItems.length > 0 )\n\t\t\t\t\t\t\t_this.setSelectedModels( [] );\n\n\t\t\t\t\t\tif( newVal && this.processKeyEvents ) _this.$el.attr( \"tabindex\", 0 ); // so we get keyboard events\n\t\t\t\t\t\telse _this.$el.removeAttr( \"tabindex\", 0 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sortable\" :\n\t\t\t\t\t\tchangedOptions.sortable ? _this._setupSortable() : _this.$el.sortable( \"destroy\" );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"selectableModelsFilter\" :\n\t\t\t\t\t\t_this.reapplyFilter( 'selectableModels' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sortableOptions\" :\n\t\t\t\t\t\t_this.$el.sortable( \"destroy\" );\n\t\t\t\t\t\t_this._setupSortable();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sortableModelsFilter\" :\n\t\t\t\t\t\t_this.reapplyFilter( 'sortableModels' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"visibleModelsFilter\" :\n\t\t\t\t\t\t_this.reapplyFilter( 'visibleModels' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"itemTemplate\" :\n\t\t\t\t\t\t_this._updateItemTemplate();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"processKeyEvents\" :\n\t\t\t\t\t\tif( newVal && this.selectable ) _this.$el.attr( \"tabindex\", 0 ); // so we get keyboard events\n\t\t\t\t\t\telse _this.$el.removeAttr( \"tabindex\", 0 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"modelView\" :\n\t\t\t\t\t\t//need to remove all old view instances\n\t\t\t\t\t\t_this.viewManager.each( function( view ) {\n\t\t\t\t\t\t\t_this.viewManager.remove( view );\n\t\t\t\t\t\t\t// destroy the View itself\n\t\t\t\t\t\t\tview.remove();\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif( _.contains( kOptionsRequiringRerendering, changedOptionKey ) ) rerender = true;\n\t\t\t} );\n\n\t\t\tif( this._hasBeenRendered && rerender ) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t},\n\n\t\tsetOption : function( optionName, optionValue ) { // now is mearly a wrapper around backbone.viewOptions' setOptions()\n\t\t\tvar optionHash = {};\n\t\t\toptionHash[ optionName ] = optionValue;\n\t\t\tthis.setOptions( optionHash );\n\t\t},\n\n\t\tgetSelectedModel : function( options ) {\n\t\t\treturn this.selectedItems.length ? _.first( this.getSelectedModels( options ) ) : null;\n\t\t},\n\n\t\tgetSelectedModels : function ( options ) {\n\t\t\tvar _this = this;\n\n\t\t\toptions = _.extend( {}, {\n\t\t\t\tby : kDefaultReferenceBy\n\t\t\t}, options );\n\n\t\t\tvar referenceBy = options.by;\n\t\t\tvar items = [];\n\n\t\t\tswitch( referenceBy ) {\n\t\t\t\tcase \"id\" :\n\t\t\t\t\t_.each( this.selectedItems, function ( item ) {\n\t\t\t\t\t\titems.push( _this.collection.get( item ).id );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"cid\" :\n\t\t\t\t\titems = items.concat( this.selectedItems );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"offset\" :\n\t\t\t\t\tvar curLineNumber = 0;\n\n\t\t\t\t\tvar itemElements = this._getVisibleItemEls();\n\n\t\t\t\t\titemElements.each( function() {\n\t\t\t\t\t\tvar thisItemEl = $( this );\n\t\t\t\t\t\tif( thisItemEl.is( \".selected\" ) )\n\t\t\t\t\t\t\titems.push( curLineNumber );\n\t\t\t\t\t\tcurLineNumber++;\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"model\" :\n\t\t\t\t\t_.each( this.selectedItems, function ( item ) {\n\t\t\t\t\t\titems.push( _this.collection.get( item ) );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"view\" :\n\t\t\t\t\t_.each( this.selectedItems, function ( item ) {\n\t\t\t\t\t\titems.push( _this.viewManager.findByModel( _this.collection.get( item ) ) );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error( \"Invalid referenceBy option: \" + referenceBy );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn items;\n\n\t\t},\n\n\t\tsetSelectedModels : function( newSelectedItems, options ) {\n\t\t\tif( ! _.isArray( newSelectedItems ) ) throw \"Invalid parameter value\";\n\t\t\tif( ! this.selectable && newSelectedItems.length > 0 ) return; // used to throw error, but there are some circumstances in which a list can be selectable at times and not at others, don't want to have to worry about catching errors\n\n\t\t\toptions = _.extend( {}, {\n\t\t\t\tsilent : false,\n\t\t\t\tby : kDefaultReferenceBy\n\t\t\t}, options );\n\n\t\t\tvar referenceBy = options.by;\n\t\t\tvar newSelectedCids = [];\n\n\t\t\tswitch( referenceBy ) {\n\t\t\t\tcase \"cid\" :\n\t\t\t\t\tnewSelectedCids = newSelectedItems;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"id\" :\n\t\t\t\t\tthis.collection.each( function( thisModel ) {\n\t\t\t\t\t\tif( _.contains( newSelectedItems, thisModel.id ) ) newSelectedCids.push( thisModel.cid );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"model\" :\n\t\t\t\t\tnewSelectedCids = _.pluck( newSelectedItems, \"cid\" );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"view\" :\n\t\t\t\t\t_.each( newSelectedItems, function( item ) {\n\t\t\t\t\t\tnewSelectedCids.push( item.model.cid );\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"offset\" :\n\t\t\t\t\tvar curLineNumber = 0;\n\t\t\t\t\tvar selectedItems = [];\n\n\t\t\t\t\tvar itemElements = this._getVisibleItemEls();\n\t\t\t\t\titemElements.each( function() {\n\t\t\t\t\t\tvar thisItemEl = $( this );\n\t\t\t\t\t\tif( _.contains( newSelectedItems, curLineNumber ) )\n\t\t\t\t\t\t\tnewSelectedCids.push( thisItemEl.attr( \"data-model-cid\" ) );\n\t\t\t\t\t\tcurLineNumber++;\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error( \"Invalid referenceBy option: \" + referenceBy );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar oldSelectedModels = this.getSelectedModels();\n\t\t\tvar oldSelectedCids = _.clone( this.selectedItems );\n\n\t\t\tthis.selectedItems = this._convertStringsToInts( newSelectedCids );\n\t\t\tthis._validateSelection();\n\n\t\t\tvar newSelectedModels = this.getSelectedModels();\n\n\t\t\tif( ! this._containSameElements( oldSelectedCids, this.selectedItems ) )\n\t\t\t{\n\t\t\t\tthis._addSelectedClassToSelectedItems( oldSelectedCids );\n\n\t\t\t\tif( ! options.silent )\n\t\t\t\t{\n\t\t\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\t\t\tthis.spawn( \"selectionChanged\", {\n\t\t\t\t\t\t\tselectedModels : newSelectedModels,\n\t\t\t\t\t\t\toldSelectedModels : oldSelectedModels\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else this.trigger( \"selectionChanged\", newSelectedModels, oldSelectedModels );\n\t\t\t\t}\n\n\t\t\t\tthis.updateDependentControls();\n\t\t\t}\n\t\t},\n\n\t\tsetSelectedModel : function( newSelectedItem, options ) {\n\t\t\tif( ! newSelectedItem && newSelectedItem !== 0 )\n\t\t\t\tthis.setSelectedModels( [], options );\n\t\t\telse\n\t\t\t\tthis.setSelectedModels( [ newSelectedItem ], options );\n\t\t},\n\n\t\tgetView : function( reference, options ) {\n\t\t\toptions = _.extend( {}, {\n\t\t\t\tby : kDefaultReferenceBy\n\t\t\t}, options );\n\n\t\t\tswitch( options.by ) {\n\t\t\t\tcase \"id\" :\n\t\t\t\tcase \"cid\" :\n\t\t\t\t\tvar model = this.collection.get( reference ) || null;\n\t\t\t\t\treturn model && this.viewManager.findByModel( model );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"offset\" :\n\t\t\t\t\tvar itemElements = this._getVisibleItemEls();\n\t\t\t\t\treturn $( itemElements.get( reference ) );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"model\" :\n\t\t\t\t\treturn this.viewManager.findByModel( reference );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault :\n\t\t\t\t\tthrow new Error( \"Invalid referenceBy option: \" + referenceBy );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\trender : function() {\n\t\t\tvar _this = this;\n\n\t\t\tthis._hasBeenRendered = true;\n\n\t\t\tif( this.selectable ) this._saveSelection();\n\n\t\t\tvar modelViewContainerEl;\n\n\t\t\t// If collection view element is a table and it has a tbody\n\t\t\t// within it, render the model views inside of the tbody\n\t\t\tmodelViewContainerEl = this._getContainerEl();\n\n\t\t\tvar oldViewManager = this.viewManager;\n\t\t\tthis.viewManager = new ChildViewContainer();\n\n\t\t\t// detach each of our subviews that we have already created to represent models\n\t\t\t// in the collection. We are going to re-use the ones that represent models that\n\t\t\t// are still here, instead of creating new ones, so that we don't loose state\n\t\t\t// information in the views.\n\t\t\toldViewManager.each( function( thisModelView ) {\n\t\t\t\t// to boost performance, only detach those views that will be sticking around.\n\t\t\t\t// we won't need the other ones later, so no need to detach them individually.\n\t\t\t\tif( this.reuseModelViews && this.collection.get( thisModelView.model.cid ) ) {\n\t\t\t\t\tthisModelView.$el.detach();\n\t\t\t\t} else thisModelView.remove();\n\t\t\t}, this );\n\n\t\t\tmodelViewContainerEl.empty();\n\t\t\tvar fragmentContainer;\n\n\t\t\tif( this.detachedRendering )\n\t\t\t\tfragmentContainer = document.createDocumentFragment();\n\n\t\t\tthis.collection.each( function( thisModel ) {\n\t\t\t\tvar thisModelView = oldViewManager.findByModelCid( thisModel.cid );\n\t\t\t\tif( ! this.reuseModelViews || _.isUndefined( thisModelView ) ) {\n\t\t\t\t\t// if the model view has not already been created on a\n\t\t\t\t\t// previous render then create and initialize it now.\n\t\t\t\t\tthisModelView = this._createNewModelView( thisModel, this._getModelViewOptions( thisModel ) );\n\t\t\t\t}\n\n\t\t\t\tthis._insertAndRenderModelView( thisModelView, fragmentContainer || modelViewContainerEl );\n\t\t\t}, this );\n\n\t\t\tif( this.detachedRendering )\n\t\t\t\tmodelViewContainerEl.append( fragmentContainer );\n\n\t\t\tif( this.sortable ) this._setupSortable();\n\n\t\t\tthis._showEmptyListCaptionIfAppropriate();\n\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"render\" );\n\t\t\telse this.trigger( \"render\" );\n\n\t\t\tif( this.selectable ) {\n\t\t\t\tthis._restoreSelection();\n\t\t\t\tthis.updateDependentControls();\n\t\t\t}\n\n\t\t\tthis.forceRerenderOnNextSortEvent = false;\n\t\t},\n\n\t\t_showEmptyListCaptionIfAppropriate : function ( ) {\n\t\t\tthis._removeEmptyListCaption();\n\n\t\t\tif( this.emptyListCaption ) {\n\t\t\t\tvar visibleEls = this._getVisibleItemEls();\n\n\t\t\t\tif( visibleEls.length === 0 ) {\n\t\t\t\t\tvar emptyListString;\n\n\t\t\t\t\tif( _.isFunction( this.emptyListCaption ) )\n\t\t\t\t\t\temptyListString = this.emptyListCaption();\n\t\t\t\t\telse\n\t\t\t\t\t\temptyListString = this.emptyListCaption;\n\n\t\t\t\t\tvar $emptyListCaptionEl;\n\t\t\t\t\tvar $varEl = $( \"<var class='empty-list-caption'>\" + emptyListString + \"</var>\" );\n\n\t\t\t\t\t// need to wrap the empty caption to make it fit the rendered list structure (either with an li or a tr td)\n\t\t\t\t\tif( this._isRenderedAsList() )\n\t\t\t\t\t\t$emptyListCaptionEl = $varEl.wrapAll( \"<li class='not-sortable'></li>\" ).parent().css( kStylesForEmptyListCaption );\n\t\t\t\t\telse\n\t\t\t\t\t\t$emptyListCaptionEl = $varEl.wrapAll( \"<tr class='not-sortable'><td colspan='1000'></td></tr>\" ).parent().parent().css( kStylesForEmptyListCaption );\n\n\t\t\t\t\tthis._getContainerEl().append( $emptyListCaptionEl );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_removeEmptyListCaption : function( ) {\n\t\t\tif( this._isRenderedAsList() )\n\t\t\t\tthis._getContainerEl().find( \"> li > var.empty-list-caption\" ).parent().remove();\n\t\t\telse\n\t\t\t\tthis._getContainerEl().find( \"> tr > td > var.empty-list-caption\" ).parent().parent().remove();\n\t\t},\n\n\t\t// Render a single model view in container object \"parentElOrDocumentFragment\", which is either\n\t\t// a documentFragment or a jquery object. optional arg atIndex is not support for document fragments.\n\t\t_insertAndRenderModelView : function( modelView, parentElOrDocumentFragment, atIndex ) {\n\t\t\tvar thisModelViewWrapped = this._wrapModelView( modelView );\n\n\t\t\tif( parentElOrDocumentFragment.nodeType === 11 ) // if we are inserting into a document fragment, we need to use the DOM appendChild method\n\t\t\t\tparentElOrDocumentFragment.appendChild( thisModelViewWrapped.get( 0 ) );\n\t\t\telse {\n\t\t\t\tvar numberOfModelViewsCurrentlyInDOM = parentElOrDocumentFragment.children().length;\n\t\t\t\tif( ! _.isUndefined( atIndex ) && atIndex >= 0 && atIndex < numberOfModelViewsCurrentlyInDOM )\n\t\t\t\t\t// note this.collection.length might be greater than parentElOrDocumentFragment.children().length here\n\t\t\t\t\tparentElOrDocumentFragment.children().eq( atIndex ).before( thisModelViewWrapped );\n\t\t\t\telse {\n\t\t\t\t\t// if we are attempting to insert a modelView in an position that is beyond what is currently in the\n\t\t\t\t\t// DOM, then make a note that we need to re-render the collection view on the next sort event. If we dont\n\t\t\t\t\t// force this re-render, we can end up with modelViews in the wrong order when the collection defines\n\t\t\t\t\t// a comparator and multiple models are added at once. See https://github.com/rotundasoftware/backbone.collectionView/issues/69\n\t\t\t\t\tif( ! _.isUndefined( atIndex ) && atIndex > numberOfModelViewsCurrentlyInDOM ) this.forceRerenderOnNextSortEvent = true;\n\n\t\t\t\t\tparentElOrDocumentFragment.append( thisModelViewWrapped );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.viewManager.add( modelView );\n\n\t\t\t// we have to render the modelView after it has been put in context, as opposed to in the\n\t\t\t// initialize function of the modelView, because some rendering might be dependent on\n\t\t\t// the modelView's context in the DOM tree. For example, if the modelView stretch()'s itself,\n\t\t\t// it must be in full context in the DOM tree or else the stretch will not behave as intended.\n\t\t\tvar renderResult = modelView.render();\n\n\t\t\t// return false from the view's render function to hide this item\n\t\t\tif( renderResult === false ) {\n\t\t\t\tthisModelViewWrapped.hide();\n\t\t\t\tthisModelViewWrapped.addClass( \"not-visible\" );\n\t\t\t}\n\n\t\t\tvar hideThisModelView = false;\n\t\t\tif( _.isFunction( this.visibleModelsFilter ) )\n\t\t\t\thideThisModelView = ! this.visibleModelsFilter( modelView.model );\n\n\t\t\tif( thisModelViewWrapped.children().length === 1 )\n\t\t\t\tthisModelViewWrapped.toggle( ! hideThisModelView );\n\t\t\telse modelView.$el.toggle( ! hideThisModelView );\n\n\t\t\tthisModelViewWrapped.toggleClass( \"not-visible\", hideThisModelView );\n\n\t\t\tif( ! hideThisModelView && this.emptyListCaption ) this._removeEmptyListCaption();\n\t\t},\n\n\t\tupdateDependentControls : function() {\n\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\tthis.spawn( \"updateDependentControls\", {\n\t\t\t\t\tselectedModels : this.getSelectedModels()\n\t\t\t\t} );\n\t\t\t} else this.trigger( \"updateDependentControls\", this.getSelectedModels() );\n\t\t},\n\n\t\t// Override `Backbone.View.remove` to also destroy all Views in `viewManager`\n\t\tremove : function() {\n\t\t\tthis.viewManager.each( function( view ) {\n\t\t\t\tview.remove();\n\t\t\t} );\n\n\t\t\tBackbone.View.prototype.remove.apply( this, arguments );\n\t\t},\n\n\t\treapplyFilter : function( whichFilter ) {\n\t\t\tvar _this = this;\n\n\t\t\tif( ! _.contains( [ \"selectableModels\", \"sortableModels\", \"visibleModels\" ], whichFilter ) ) {\n\t\t\t\tthrow new Error( \"Invalid filter identifier supplied to reapplyFilter: \" + whichFilter );\n\t\t\t}\n\n\t\t\tswitch( whichFilter ) {\n\t\t\t\tcase \"visibleModels\":\n\t\t\t\t\t_this.viewManager.each( function( thisModelView ) {\n\t\t\t\t\t\tvar notVisible = _this.visibleModelsFilter && ! _this.visibleModelsFilter.call( _this, thisModelView.model );\n\n\t\t\t\t\t\tthisModelView.$el.toggleClass( \"not-visible\", notVisible );\n\t\t\t\t\t\tif( _this._modelViewHasWrapperLI( thisModelView ) ) {\n\t\t\t\t\t\t\tthisModelView.$el.closest( \"li\" ).toggleClass( \"not-visible\", notVisible ).toggle( ! notVisible );\n\t\t\t\t\t\t} else thisModelView.$el.toggle( ! notVisible );\n\t\t\t\t\t} );\n\n\t\t\t\t\tthis._showEmptyListCaptionIfAppropriate();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sortableModels\":\n\t\t\t\t\t_this.$el.sortable( \"destroy\" );\n\n\t\t\t\t\t_this.viewManager.each( function( thisModelView ) {\n\t\t\t\t\t\tvar notSortable = _this.sortableModelsFilter && ! _this.sortableModelsFilter.call( _this, thisModelView.model );\n\n\t\t\t\t\t\tthisModelView.$el.toggleClass( \"not-sortable\", notSortable );\n\t\t\t\t\t\tif( _this._modelViewHasWrapperLI( thisModelView ) ) {\n\t\t\t\t\t\t\tthisModelView.$el.closest( \"li\" ).toggleClass( \"not-sortable\", notSortable );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\t_this._setupSortable();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"selectableModels\":\n\t\t\t\t\t_this.viewManager.each( function( thisModelView ) {\n\t\t\t\t\t\tvar notSelectable = _this.selectableModelsFilter && ! _this.selectableModelsFilter.call( _this, thisModelView.model );\n\n\t\t\t\t\t\tthisModelView.$el.toggleClass( \"not-selectable\", notSelectable );\n\t\t\t\t\t\tif( _this._modelViewHasWrapperLI( thisModelView ) ) {\n\t\t\t\t\t\t\tthisModelView.$el.closest( \"li\" ).toggleClass( \"not-selectable\", notSelectable );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\t_this._validateSelection();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// A method to remove the view relating to model.\n\t\t_removeModelView : function( modelView ) {\n\t\t\tif( this.selectable ) this._saveSelection();\n\n\t\t\tthis.viewManager.remove( modelView ); // Remove the view from the viewManager\n\t\t\tif( this._modelViewHasWrapperLI( modelView ) ) modelView.$el.parent().remove(); // Remove the li wrapper from the DOM\n\t\t\tmodelView.remove(); // Remove the view from the DOM and stop listening to events\n\n\t\t\tif( this.selectable ) this._restoreSelection();\n\n\t\t\tthis._showEmptyListCaptionIfAppropriate();\n\t\t},\n\n\t\t_validateSelectionAndRender : function() {\n\t\t\tthis._validateSelection();\n\t\t\tthis.render();\n\t\t},\n\n\t\t_registerCollectionEvents : function() {\n\n\t\t\tthis.listenTo( this.collection, \"add\", function( model ) {\n\t\t\t\tvar modelView;\n\t\t\t\tif( this._hasBeenRendered ) {\n\t\t\t\t\tmodelView = this._createNewModelView( model, this._getModelViewOptions( model ) );\n\t\t\t\t\tthis._insertAndRenderModelView( modelView, this._getContainerEl(), this.collection.indexOf( model ) );\n\t\t\t\t}\n\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"add\", modelView );\n\t\t\t\telse this.trigger( \"add\", modelView );\n\t\t\t} );\n\n\t\t\tthis.listenTo( this.collection, \"remove\", function( model ) {\n\t\t\t\tvar modelView;\n\n\t\t\t\tif( this._hasBeenRendered ) {\n\t\t\t\t\tmodelView = this.viewManager.findByModelCid( model.cid );\n\t\t\t\t\tthis._removeModelView( modelView );\n\t\t\t\t}\n\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"remove\" );\n\t\t\t\telse this.trigger( \"remove\" );\n\t\t\t} );\n\n\t\t\tthis.listenTo( this.collection, \"reset\", function() {\n\t\t\t\tif( this._hasBeenRendered ) this.render();\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"reset\" );\n\t\t\t\telse this.trigger( \"reset\" );\n\t\t\t} );\n\n\t\t\t// we should not be listening to change events on the model as a default behavior. the models\n\t\t\t// should be responsible for re-rendering themselves if necessary, and if the collection does\n\t\t\t// also need to re-render as a result of a model change, this should be handled by overriding\n\t\t\t// this method. by default the collection view should not re-render in response to model changes\n\t\t\t// this.listenTo( this.collection, \"change\", function( model ) {\n\t\t\t// \tif( this._hasBeenRendered ) this.viewManager.findByModel( model ).render();\n\t\t\t// \tif( this._isBackboneCourierAvailable() )\n\t\t\t// \t\tthis.spawn( \"change\", { model : model } );\n\t\t\t// } );\n\n\t\t\tthis.listenTo( this.collection, \"sort\", function( collection, options ) {\n\t\t\t\tif( this._hasBeenRendered && ( options.add !== true || this.forceRerenderOnNextSortEvent ) ) this.render();\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"sort\" );\n\t\t\t\telse this.trigger( \"sort\" );\n\t\t\t} );\n\t\t},\n\n\t\t_getContainerEl : function() {\n\t\t\tif ( this._isRenderedAsTable() ) {\n\t\t\t\t// not all tables have a tbody, so we test\n\t\t\t\tvar tbody = this.$el.find( \"> tbody\" );\n\t\t\t\tif ( tbody.length > 0 )\n\t\t\t\t\treturn tbody;\n\t\t\t}\n\t\t\treturn this.$el;\n\t\t},\n\n\t\t_getClickedItemId : function( theEvent ) {\n\t\t\tvar clickedItemId = null;\n\n\t\t\t// important to use currentTarget as opposed to target, since we could be bubbling\n\t\t\t// an event that took place within another collectionList\n\t\t\tvar clickedItemEl = $( theEvent.currentTarget );\n\t\t\tif( clickedItemEl.closest( \".collection-view\" ).get(0) !== this.$el.get(0) ) return;\n\n\t\t\t// determine which list item was clicked. If we clicked in the blank area\n\t\t\t// underneath all the elements, we want to know that too, since in this\n\t\t\t// case we will want to deselect all elements. so check to see if the clicked\n\t\t\t// DOM element is the list itself to find that out.\n\t\t\tvar clickedItem = clickedItemEl.closest( \"[data-model-cid]\" );\n\t\t\tif( clickedItem.length > 0 )\n\t\t\t{\n\t\t\t\tclickedItemId = clickedItem.attr( \"data-model-cid\" );\n\t\t\t\tif( $.isNumeric( clickedItemId ) ) clickedItemId = parseInt( clickedItemId, 10 );\n\t\t\t}\n\n\t\t\treturn clickedItemId;\n\t\t},\n\n\t\t_updateItemTemplate : function() {\n\t\t\tvar itemTemplateHtml;\n\t\t\tif( this.itemTemplate )\n\t\t\t{\n\t\t\t\tif( $( this.itemTemplate ).length === 0 )\n\t\t\t\t\tthrow \"Could not find item template from selector: \" + this.itemTemplate;\n\n\t\t\t\titemTemplateHtml = $( this.itemTemplate ).html();\n\t\t\t}\n\t\t\telse\n\t\t\t\titemTemplateHtml = this.$( \".item-template\" ).html();\n\n\t\t\tif( itemTemplateHtml ) this.itemTemplateFunction = _.template( itemTemplateHtml );\n\n\t\t},\n\n\t\t_validateSelection : function() {\n\t\t\t// note can't use the collection's proxy to underscore because \"cid\" is not an attribute,\n\t\t\t// but an element of the model object itself.\n\t\t\tvar modelReferenceIds = _.pluck( this.collection.models, \"cid\" );\n\t\t\tthis.selectedItems = _.intersection( modelReferenceIds, this.selectedItems );\n\n\t\t\tif( _.isFunction( this.selectableModelsFilter ) )\n\t\t\t{\n\t\t\t\tthis.selectedItems = _.filter( this.selectedItems, function( thisItemId ) {\n\t\t\t\t\treturn this.selectableModelsFilter.call( this, this.collection.get( thisItemId ) );\n\t\t\t\t}, this );\n\t\t\t}\n\t\t},\n\n\t\t_saveSelection : function() {\n\t\t\t// save the current selection. use restoreSelection() to restore the selection to the state it was in the last time saveSelection() was called.\n\t\t\tif( ! this.selectable ) throw \"Attempt to save selection on non-selectable list\";\n\t\t\tthis.savedSelection = {\n\t\t\t\titems : _.clone( this.selectedItems ),\n\t\t\t\toffset : this.getSelectedModel( { by : \"offset\" } )\n\t\t\t};\n\t\t},\n\n\t\t_restoreSelection : function() {\n\t\t\tif( ! this.savedSelection ) throw \"Attempt to restore selection but no selection has been saved!\";\n\n\t\t\t// reset selectedItems to empty so that we \"redraw\" all \"selected\" classes\n\t\t\t// when we set our new selection. We do this because it is likely that our\n\t\t\t// contents have been refreshed, and we have thus lost all old \"selected\" classes.\n\t\t\tthis.setSelectedModels( [], { silent : true } );\n\n\t\t\tif( this.savedSelection.items.length > 0 )\n\t\t\t{\n\t\t\t\t// first try to restore the old selected items using their reference ids.\n\t\t\t\tthis.setSelectedModels( this.savedSelection.items, { by : \"cid\", silent : true } );\n\n\t\t\t\t// all the items with the saved reference ids have been removed from the list.\n\t\t\t\t// ok. try to restore the selection based on the offset that used to be selected.\n\t\t\t\t// this is the expected behavior after a item is deleted from a list (i.e. select\n\t\t\t\t// the line that immediately follows the deleted line).\n\t\t\t\tif( this.selectedItems.length === 0 )\n\t\t\t\t\tthis.setSelectedModel( this.savedSelection.offset, { by : \"offset\" } );\n\n\t\t\t\t// Trigger a selection changed if the previously selected items were not all found\n\t\t\t\tif (this.selectedItems.length !== this.savedSelection.items.length)\n\t\t\t\t{\n\t\t\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\t\t\tthis.spawn( \"selectionChanged\", {\n\t\t\t\t\t\t\tselectedModels : this.getSelectedModels(),\n\t\t\t\t\t\t\toldSelectedModels : []\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else this.trigger( \"selectionChanged\", this.getSelectedModels(), [] );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_addSelectedClassToSelectedItems : function( oldItemsIdsWithSelectedClass ) {\n\t\t\tif( _.isUndefined( oldItemsIdsWithSelectedClass ) ) oldItemsIdsWithSelectedClass = [];\n\n\t\t\t// oldItemsIdsWithSelectedClass is used for optimization purposes only. If this info is supplied then we\n\t\t\t// only have to add / remove the \"selected\" class from those items that \"selected\" state has changed.\n\n\t\t\tvar itemsIdsFromWhichSelectedClassNeedsToBeRemoved = oldItemsIdsWithSelectedClass;\n\t\t\titemsIdsFromWhichSelectedClassNeedsToBeRemoved = _.without( itemsIdsFromWhichSelectedClassNeedsToBeRemoved, this.selectedItems );\n\n\t\t\t_.each( itemsIdsFromWhichSelectedClassNeedsToBeRemoved, function( thisItemId ) {\n\t\t\t\tthis._getContainerEl().find( \"[data-model-cid=\" + thisItemId + \"]\" ).removeClass( \"selected\" );\n\n\t\t\t\tif( this._isRenderedAsList() ) {\n\t\t\t\t\tthis._getContainerEl().find( \"li[data-model-cid=\" + thisItemId + \"] > *\" ).removeClass( \"selected\" );\n\t\t\t\t}\n\t\t\t}, this );\n\n\t\t\tvar itemsIdsFromWhichSelectedClassNeedsToBeAdded = this.selectedItems;\n\t\t\titemsIdsFromWhichSelectedClassNeedsToBeAdded = _.without( itemsIdsFromWhichSelectedClassNeedsToBeAdded, oldItemsIdsWithSelectedClass );\n\n\t\t\t_.each( itemsIdsFromWhichSelectedClassNeedsToBeAdded, function( thisItemId ) {\n\t\t\t\tthis._getContainerEl().find( \"[data-model-cid=\" + thisItemId + \"]\" ).addClass( \"selected\" );\n\n\t\t\t\tif( this._isRenderedAsList() ) {\n\t\t\t\t\tthis._getContainerEl().find( \"li[data-model-cid=\" + thisItemId + \"] > *\" ).addClass( \"selected\" );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t},\n\n\t\t_reorderCollectionBasedOnHTML : function() {\n\n\t\t\tvar _this = this;\n\n\t\t\tthis._getContainerEl().children().each( function() {\n\t\t\t\tvar thisModelCid = $( this ).attr( \"data-model-cid\" );\n\n\t\t\t\tif( thisModelCid )\n\t\t\t\t{\n\t\t\t\t\t// remove the current model and then add it back (at the end of the collection).\n\t\t\t\t\t// When we are done looping through all models, they will be in the correct order.\n\t\t\t\t\tvar thisModel = _this.collection.get( thisModelCid );\n\t\t\t\t\tif( thisModel )\n\t\t\t\t\t{\n\t\t\t\t\t\t_this.collection.remove( thisModel, { silent : true } );\n\t\t\t\t\t\t_this.collection.add( thisModel, { silent : true, sort : ! _this.collection.comparator } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( this._isBackboneCourierAvailable() ) this.spawn( \"reorder\" );\n\t\t\telse this.collection.trigger( \"reorder\" );\n\n\t\t\tif( this.collection.comparator ) this.collection.sort();\n\n\t\t},\n\n\t\t_getModelViewConstructor : function( thisModel ) {\n\t\t\treturn this.modelView || mDefaultModelViewConstructor;\n\t\t},\n\n\t\t_getModelViewOptions : function( thisModel ) {\n\t\t\tvar modelViewOptions = this.modelViewOptions;\n\t\t\tif( _.isFunction( modelViewOptions ) ) modelViewOptions = modelViewOptions( thisModel );\n\n\t\t\treturn _.extend( { model : thisModel }, modelViewOptions );\n\t\t},\n\n\t\t_createNewModelView : function( model, modelViewOptions ) {\n\t\t\tvar modelViewConstructor = this._getModelViewConstructor( model );\n\t\t\tif( _.isUndefined( modelViewConstructor ) ) throw \"Could not find modelView constructor for model\";\n\n\t\t\tvar newModelView = new( modelViewConstructor )( modelViewOptions );\n\t\t\tnewModelView.collectionListView = newModelView.collectionView = this;  // collectionListView for legacy\n\n\t\t\treturn newModelView;\n\t\t},\n\n\t\t_wrapModelView : function( modelView ) {\n\t\t\tvar _this = this;\n\n\t\t\t// we use items client ids as opposed to real ids, since we may not have a representation\n\t\t\t// of these models on the server\n\t\t\tvar modelViewWrapperEl;\n\n\t\t\tif( this._isRenderedAsTable() ) {\n\t\t\t\t// if we are rendering the collection in a table, the template $el is a tr so we just need to set the data-model-cid\n\t\t\t\tmodelViewWrapperEl = modelView.$el;\n\t\t\t\tmodelView.$el.attr( \"data-model-cid\", modelView.model.cid );\n\t\t\t}\n\t\t\telse if( this._isRenderedAsList() ) {\n\t\t\t\t// if we are rendering the collection in a list, we need wrap each item in an <li></li> (if its not already an <li>)\n\t\t\t\t// and set the data-model-cid\n\t\t\t\tif( modelView.$el.is( \"li\" ) ) {\n\t\t\t\t\tmodelViewWrapperEl = modelView.$el;\n\t\t\t\t\tmodelView.$el.attr( \"data-model-cid\", modelView.model.cid );\n\t\t\t\t} else {\n\t\t\t\t\tmodelViewWrapperEl = modelView.$el.wrapAll( \"<li data-model-cid='\" + modelView.model.cid + \"'></li>\" ).parent();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( _.isFunction( this.sortableModelsFilter ) )\n\t\t\t\tif( ! this.sortableModelsFilter.call( _this, modelView.model ) ) {\n\t\t\t\t\tmodelViewWrapperEl.addClass( \"not-sortable\" );\n\t\t\t\t\tmodelView.$el.addClass( \"not-selectable\" );\n\t\t\t\t}\n\n\t\t\tif( _.isFunction( this.selectableModelsFilter ) )\n\t\t\t\tif( ! this.selectableModelsFilter.call( _this, modelView.model ) ) {\n\t\t\t\t\tmodelViewWrapperEl.addClass( \"not-selectable\" );\n\t\t\t\t\tmodelView.$el.addClass( \"not-selectable\" );\n\t\t\t\t}\n\n\t\t\treturn modelViewWrapperEl;\n\t\t},\n\n\t\t_convertStringsToInts : function( theArray ) {\n\t\t\treturn _.map( theArray, function( thisEl ) {\n\t\t\t\tif( ! _.isString( thisEl ) ) return thisEl;\n\t\t\t\tvar thisElAsNumber = parseInt( thisEl, 10 );\n\t\t\t\treturn( thisElAsNumber == thisEl ? thisElAsNumber : thisEl );\n\t\t\t} );\n\t\t},\n\n\t\t_containSameElements : function( arrayA, arrayB ) {\n\t\t\tif( arrayA.length != arrayB.length ) return false;\n\t\t\tvar intersectionSize = _.intersection( arrayA, arrayB ).length;\n\t\t\treturn intersectionSize == arrayA.length; // and must also equal arrayB.length, since arrayA.length == arrayB.length\n\t\t},\n\n\t\t_isRenderedAsTable : function() {\n\t\t\treturn this.$el.prop( \"tagName\" ).toLowerCase() === \"table\";\n\t\t},\n\n\t\t_isRenderedAsList : function() {\n\t\t\treturn ! this._isRenderedAsTable();\n\t\t},\n\n\t\t_modelViewHasWrapperLI : function( modelView ) {\n\t\t\treturn this._isRenderedAsList() && ! modelView.$el.is( \"li\" );\n\t\t},\n\n\t\t// Returns the wrapper HTML element for each visible modelView.\n\t\t// When rendering in a table context, the returned elements are the $el of each modelView.\n\t\t// When rendering in a list context,\n\t\t//   If the $el of the modelView is an <li>, the returned elements are the $el of each modelView.\n\t\t//   Otherwise, the returned elements are the <li>'s the collectionView wrapped around each modelView $el.\n\t\t_getVisibleItemEls : function() {\n\t\t\tvar itemElements = [];\n\t\t\titemElements = this._getContainerEl().find( \"> [data-model-cid]:not(.not-visible)\" );\n\n\t\t\treturn itemElements;\n\t\t},\n\n\t\t_charCodes : {\n\t\t\tupArrow : 38,\n\t\t\tdownArrow : 40\n\t\t},\n\n\t\t_isBackboneCourierAvailable : function() {\n\t\t\treturn !_.isUndefined( Backbone.Courier );\n\t\t},\n\n\t\t_setupSortable : function() {\n\t\t\tvar sortableOptions = _.extend( {\n\t\t\t\taxis : \"y\",\n\t\t\t\tdistance : 10,\n\t\t\t\tforcePlaceholderSize : true,\n\t\t\t\titems : this._isRenderedAsTable() ? \"> tbody > tr:not(.not-sortable)\" : \"> li:not(.not-sortable)\",\n\t\t\t\tstart : _.bind( this._sortStart, this ),\n\t\t\t\tchange : _.bind( this._sortChange, this ),\n\t\t\t\tstop : _.bind( this._sortStop, this ),\n\t\t\t\treceive : _.bind( this._receive, this ),\n\t\t\t\tover : _.bind( this._over, this )\n\t\t\t}, _.result( this, \"sortableOptions\" ) );\n\n\t\t\tthis.$el = this.$el.sortable( sortableOptions );\n\t\t\t//this.$el.sortable( \"enable\" ); // in case it was disabled previously\n\t\t},\n\n\t\t_sortStart : function( event, ui ) {\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"sortStart\", { modelBeingSorted : modelBeingSorted } );\n\t\t\telse this.trigger( \"sortStart\", modelBeingSorted );\n\t\t},\n\n\t\t_sortChange : function( event, ui ) {\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"sortChange\", { modelBeingSorted : modelBeingSorted } );\n\t\t\telse this.trigger( \"sortChange\", modelBeingSorted );\n\t\t},\n\n\t\t_sortStop : function( event, ui ) {\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\t\t\tvar modelViewContainerEl = this._getContainerEl();\n\t\t\tvar newIndex = modelViewContainerEl.children().index( ui.item );\n\n\t\t\tif( newIndex == -1 && modelBeingSorted ) {\n\t\t\t\t// the element was removed from this list. can happen if this sortable is connected\n\t\t\t\t// to another sortable, and the item was dropped into the other sortable.\n\t\t\t\tthis.collection.remove( modelBeingSorted );\n\t\t\t}\n\n\t\t\tif( ! modelBeingSorted ) return; // something is wacky. we don't mess with this case, preferring to guarantee that we can always provide a reference to the model\n\n\t\t\tthis._reorderCollectionBasedOnHTML();\n\t\t\tthis.updateDependentControls();\n\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"sortStop\", { modelBeingSorted : modelBeingSorted, newIndex : newIndex } );\n\t\t\telse this.trigger( \"sortStop\", modelBeingSorted, newIndex );\n\t\t},\n\n\t\t_receive : function( event, ui ) {\n\n\t\t\tvar senderListEl = ui.sender;\n\t\t\tvar senderCollectionListView = senderListEl.data( \"view\" );\n\t\t\tif( ! senderCollectionListView || ! senderCollectionListView.collection ) return;\n\n\t\t\tvar newIndex = this._getContainerEl().children().index( ui.item );\n\t\t\tvar modelReceived = senderCollectionListView.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\t\t\tsenderCollectionListView.collection.remove( modelReceived );\n\t\t\tthis.collection.add( modelReceived, { at : newIndex } );\n\t\t\tmodelReceived.collection = this.collection; // otherwise will not get properly set, since modelReceived.collection might already have a value.\n\t\t\tthis.setSelectedModel( modelReceived );\n\t\t},\n\n\t\t_over : function( event, ui ) {\n\t\t\t// when an item is being dragged into the sortable,\n\t\t\t// hide the empty list caption if it exists\n\t\t\tthis._getContainerEl().find( \"> var.empty-list-caption\" ).hide();\n\t\t},\n\n\t\t_onKeydown : function( event ) {\n\t\t\tif( ! this.processKeyEvents ) return true;\n\n\t\t\tvar trap = false;\n\n\t\t\tif( this.getSelectedModels( { by : \"offset\" } ).length == 1 )\n\t\t\t{\n\t\t\t\t// need to trap down and up arrows or else the browser\n\t\t\t\t// will end up scrolling a autoscroll div.\n\n\t\t\t\tvar currentOffset = this.getSelectedModel( { by : \"offset\" } );\n\t\t\t\tif( event.which === this._charCodes.upArrow && currentOffset !== 0 )\n\t\t\t\t{\n\t\t\t\t\tthis.setSelectedModel( currentOffset - 1, { by : \"offset\" } );\n\t\t\t\t\ttrap = true;\n\t\t\t\t}\n\t\t\t\telse if( event.which === this._charCodes.downArrow && currentOffset !== this.collection.length - 1 )\n\t\t\t\t{\n\t\t\t\t\tthis.setSelectedModel( currentOffset + 1, { by : \"offset\" } );\n\t\t\t\t\ttrap = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ! trap;\n\t\t},\n\n\t\t_listItem_onMousedown : function( theEvent ) {\n\t\t\tvar clickedItemId = this._getClickedItemId( theEvent );\n\n\t\t\tif( clickedItemId ) {\n\t\t\t\tvar clickedModel = this.collection.get( clickedItemId );\n\t\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tclickedModel : clickedModel,\n\t\t\t\t\t\tmetaKeyPressed : theEvent.ctrlKey || theEvent.metaKey\n\t\t\t\t\t};\n\n\t\t\t\t\t_.each( [ 'preventDefault', 'stopPropagation', 'stopImmediatePropagation' ], function( thisMethod ) {\n\t\t\t\t\t\tdata[ thisMethod ] = function() {\n\t\t\t\t\t\t\ttheEvent[ thisMethod ]();\n\t\t\t\t\t\t};\n\t\t\t\t\t} );\n\n\t\t\t\t\tthis.spawn( \"click\", data );\n\t\t\t\t}\n\t\t\t\telse this.trigger( \"click\", clickedModel );\n\t\t\t}\n\n\t\t\tif( ! this.selectable || ! this.clickToSelect ) return;\n\n\t\t\tif( clickedItemId )\n\t\t\t{\n\t\t\t\t// Exit if an unselectable item was clicked\n\t\t\t\tif( _.isFunction( this.selectableModelsFilter ) &&\n\t\t\t\t\t! this.selectableModelsFilter.call( this, this.collection.get( clickedItemId ) ) )\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// a selectable list item was clicked\n\t\t\t\tif( this.selectMultiple && theEvent.shiftKey )\n\t\t\t\t{\n\t\t\t\t\tvar firstSelectedItemIndex = -1;\n\n\t\t\t\t\tif( this.selectedItems.length > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.collection.find( function( thisItemModel ) {\n\t\t\t\t\t\t\tfirstSelectedItemIndex++;\n\n\t\t\t\t\t\t\t// exit when we find our first selected element\n\t\t\t\t\t\t\treturn _.contains( this.selectedItems, thisItemModel.cid );\n\t\t\t\t\t\t}, this );\n\t\t\t\t\t}\n\n\t\t\t\t\tvar clickedItemIndex = -1;\n\t\t\t\t\tthis.collection.find( function( thisItemModel ) {\n\t\t\t\t\t\tclickedItemIndex++;\n\n\t\t\t\t\t\t// exit when we find the clicked element\n\t\t\t\t\t\treturn thisItemModel.cid == clickedItemId;\n\t\t\t\t\t}, this );\n\n\t\t\t\t\tvar shiftKeyRootSelectedItemIndex = firstSelectedItemIndex == -1 ? clickedItemIndex : firstSelectedItemIndex;\n\t\t\t\t\tvar minSelectedItemIndex = Math.min( clickedItemIndex, shiftKeyRootSelectedItemIndex );\n\t\t\t\t\tvar maxSelectedItemIndex = Math.max( clickedItemIndex, shiftKeyRootSelectedItemIndex );\n\n\t\t\t\t\tvar newSelectedItems = [];\n\t\t\t\t\tfor( var thisIndex = minSelectedItemIndex; thisIndex <= maxSelectedItemIndex; thisIndex ++ )\n\t\t\t\t\t\tnewSelectedItems.push( this.collection.at( thisIndex ).cid );\n\t\t\t\t\tthis.setSelectedModels( newSelectedItems, { by : \"cid\" } );\n\n\t\t\t\t\t// shift clicking will usually highlight selectable text, which we do not want.\n\t\t\t\t\t// this is a cross browser (hopefully) snippet that deselects all text selection.\n\t\t\t\t\tif( document.selection && document.selection.empty )\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\telse if(window.getSelection) {\n\t\t\t\t\t\tvar sel = window.getSelection();\n\t\t\t\t\t\tif( sel && sel.removeAllRanges )\n\t\t\t\t\t\t\tsel.removeAllRanges();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( ( this.selectMultiple || _.contains( this.selectedItems, clickedItemId ) ) && ( this.clickToToggle || theEvent.metaKey || theEvent.ctrlKey ) )\n\t\t\t\t{\n\t\t\t\t\tif( _.contains( this.selectedItems, clickedItemId ) )\n\t\t\t\t\t\tthis.setSelectedModels( _.without( this.selectedItems, clickedItemId ), { by : \"cid\" } );\n\t\t\t\t\telse this.setSelectedModels( _.union( this.selectedItems, [clickedItemId] ), { by : \"cid\" } );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.setSelectedModels( [ clickedItemId ], { by : \"cid\" } );\n\t\t\t}\n\t\t\telse\n\t\t\t\t// the blank area of the list was clicked\n\t\t\t\tthis.setSelectedModels( [] );\n\n\t\t},\n\n\t\t_listItem_onDoubleClick : function( theEvent ) {\n\n\t\t\tvar clickedItemId = this._getClickedItemId( theEvent );\n\n\t\t\tif( clickedItemId )\n\t\t\t{\n\t\t\t\tvar clickedModel = this.collection.get( clickedItemId );\n\n\t\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\t\tthis.spawn( \"doubleClick\", { clickedModel : clickedModel, metaKeyPressed : theEvent.ctrlKey || theEvent.metaKey } );\n\t\t\t\telse this.trigger( \"doubleClick\", clickedModel );\n\t\t\t}\n\t\t},\n\n\t\t_listBackground_onClick : function( theEvent ) {\n\t\t\tif( ! this.selectable || ! this.clickToSelect ) return;\n\t\t\tif( ! $( theEvent.target ).is( \".collection-view\" ) ) return;\n\n\t\t\tthis.setSelectedModels( [] );\n\t\t}\n\n\t}, {\n\t\tsetDefaultModelViewConstructor : function( theConstructor ) {\n\t\t\tmDefaultModelViewConstructor = theConstructor;\n\t\t}\n\t});\n\n\t/*\n\t* Backbone.ViewOptions, v0.2.4\n\t* Copyright (c)2014 Rotunda Software, LLC.\n\t* Distributed under MIT license\n\t* http://github.com/rotundasoftware/backbone.viewOptions\n\t*/\n\n\tBackbone.ViewOptions = {};\n\n\tBackbone.ViewOptions.add = function( view, optionsDeclarationsProperty ) {\n\t\tif( _.isUndefined( optionsDeclarationsProperty ) ) optionsDeclarationsProperty = \"options\";\n\n\t\t// ****************** Public methods added to view ******************\n\n\t\tview.setOptions = function( options ) {\n\t\t\tvar _this = this;\n\t\t\tvar optionsThatWereChanged = {};\n\t\t\tvar optionsThatWereChangedPreviousValues = {};\n\n\t\t\tvar optionDeclarations = _.result( this, optionsDeclarationsProperty );\n\n\t\t\tif( ! _.isUndefined( optionDeclarations ) ) {\n\t\t\t\tvar normalizedOptionDeclarations = _normalizeOptionDeclarations( optionDeclarations );\n\n\t\t\t\t_.each( normalizedOptionDeclarations, function( thisOptionProperties, thisOptionName ) {\n\t\t\t\t\tvar thisOptionRequired = thisOptionProperties.required;\n\t\t\t\t\tvar thisOptionDefaultValue = thisOptionProperties.defaultValue;\n\n\t\t\t\t\tif( thisOptionRequired ) {\n\t\t\t\t\t\t// note we do not throw an error if a required option is not supplied, but it is\n\t\t\t\t\t\t// found on the object itself (due to a prior call of view.setOptions, most likely)\n\n\t\t\t\t\t\tif( ( ! options || ! _.contains( _.keys( options ), thisOptionName ) ) && _.isUndefined( _this[ thisOptionName ] ) )\n\t\t\t\t\t\t\tthrow new Error( \"Required option \\\"\" + thisOptionName + \"\\\" was not supplied.\" );\n\n\t\t\t\t\t\tif( options && _.contains( _.keys( options ), thisOptionName ) && _.isUndefined( options[ thisOptionName ] ) )\n\t\t\t\t\t\t\tthrow new Error( \"Required option \\\"\" + thisOptionName + \"\\\" can not be set to undefined.\" );\n\t\t\t\t\t}\n\n\t\t\t\t\t// attach the supplied value of this option, or the appropriate default value, to the view object\n\t\t\t\t\tif( options && thisOptionName in options && ! _.isUndefined( options[ thisOptionName ] ) ) {\n\t\t\t\t\t\tvar oldValue = _this[ thisOptionName ];\n\t\t\t\t\t\tvar newValue = options[ thisOptionName ];\n\t\t\t\t\t\t// if this option already exists on the view, and the new value is different,\n\t\t\t\t\t\t// make a note that we will be changing it\n\t\t\t\t\t\tif( ! _.isUndefined( oldValue ) && oldValue !== newValue ) {\n\t\t\t\t\t\t\toptionsThatWereChangedPreviousValues[ thisOptionName ] = oldValue;\n\t\t\t\t\t\t\toptionsThatWereChanged[ thisOptionName ] = newValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_this[ thisOptionName ] = newValue;\n\t\t\t\t\t\t// note we do NOT delete the option off the options object here so that\n\t\t\t\t\t\t// multiple views can be passed the same options object without issue.\n\t\t\t\t\t}\n\t\t\t\t\telse if( _.isUndefined( _this[ thisOptionName ] ) ) {\n\t\t\t\t\t\t// note defaults do not write over any existing properties on the view itself.\n\t\t\t\t\t\t_this[ thisOptionName ] = thisOptionDefaultValue;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif( _.keys( optionsThatWereChanged ).length > 0 ) {\n\t\t\t\tif( _.isFunction( _this.onOptionsChanged ) )\n\t\t\t\t\t_this.onOptionsChanged( optionsThatWereChanged, optionsThatWereChangedPreviousValues );\n\t\t\t\telse if( _.isFunction( _this._onOptionsChanged ) )\n\t\t\t\t\t_this._onOptionsChanged( optionsThatWereChanged, optionsThatWereChangedPreviousValues );\n\t\t\t}\n\t\t};\n\n\t\tview.getOptions = function() {\n\t\t\tvar optionDeclarations = _.result( this, optionsDeclarationsProperty );\n\t\t\tif( _.isUndefined( optionDeclarations ) ) return {};\n\n\t\t\tvar normalizedOptionDeclarations = _normalizeOptionDeclarations( optionDeclarations );\n\t\t\tvar optionsNames = _.keys( normalizedOptionDeclarations );\n\n\t\t\treturn _.pick( this, optionsNames );\n\t\t};\n\t};\n\n\t// ****************** Private Utility Functions ******************\n\n\tfunction _normalizeOptionDeclarations( optionDeclarations ) {\n\t\t// convert our short-hand option syntax (with exclamation marks, etc.)\n\t\t// to a simple array of standard option declaration objects.\n\n\t\tvar normalizedOptionDeclarations = {};\n\n\t\tif( ! _.isArray( optionDeclarations ) ) throw new Error( \"Option declarations must be an array.\" );\n\n\t\t_.each( optionDeclarations, function( thisOptionDeclaration ) {\n\t\t\tvar thisOptionName, thisOptionRequired, thisOptionDefaultValue;\n\n\t\t\tthisOptionRequired = false;\n\t\t\tthisOptionDefaultValue = undefined;\n\n\t\t\tif( _.isString( thisOptionDeclaration ) )\n\t\t\t\tthisOptionName = thisOptionDeclaration;\n\t\t\telse if( _.isObject( thisOptionDeclaration ) ) {\n\t\t\t\tthisOptionName = _.first( _.keys( thisOptionDeclaration ) );\n\t\t\t\tif( _.isFunction( thisOptionDeclaration[ thisOptionName ] ) )\n\t\t\t\t\tthisOptionDefaultValue = thisOptionDeclaration[ thisOptionName ];\n\t\t\t\telse\n\t\t\t\t\tthisOptionDefaultValue = _.clone( thisOptionDeclaration[ thisOptionName ] );\n\t\t\t}\n\t\t\telse throw new Error( \"Each element in the option declarations array must be either a string or an object.\" );\n\n\t\t\tif( thisOptionName[ thisOptionName.length - 1 ] === \"!\" ) {\n\t\t\t\tthisOptionRequired = true;\n\t\t\t\tthisOptionName = thisOptionName.slice( 0, thisOptionName.length - 1 );\n\t\t\t}\n\n\t\t\tnormalizedOptionDeclarations[ thisOptionName ] = normalizedOptionDeclarations[ thisOptionName ] || {};\n\t\t\tnormalizedOptionDeclarations[ thisOptionName ].required = thisOptionRequired;\n\t\t\tif( ! _.isUndefined( thisOptionDefaultValue ) ) normalizedOptionDeclarations[ thisOptionName ].defaultValue = thisOptionDefaultValue;\n\t\t} );\n\n\t\treturn normalizedOptionDeclarations;\n\t}\n\n\n\t// Backbone.BabySitter\n\t// -------------------\n\t// v0.0.6\n\t//\n\t// Copyright (c)2013 Derick Bailey, Muted Solutions, LLC.\n\t// Distributed under MIT license\n\t//\n\t// http://github.com/babysitterjs/backbone.babysitter\n\n\t// Backbone.ChildViewContainer\n\t// ---------------------------\n\t//\n\t// Provide a container to store, retrieve and\n\t// shut down child views.\n\n\tChildViewContainer = (function(Backbone, _){\n\n\t\t// Container Constructor\n\t\t// ---------------------\n\n\t\tvar Container = function(views){\n\t\t\tthis._views = {};\n\t\t\tthis._indexByModel = {};\n\t\t\tthis._indexByCustom = {};\n\t\t\tthis._updateLength();\n\n\t\t\t_.each(views, this.add, this);\n\t\t};\n\n\t\t// Container Methods\n\t\t// -----------------\n\n\t\t_.extend(Container.prototype, {\n\n\t\t\t// Add a view to this container. Stores the view\n\t\t\t// by `cid` and makes it searchable by the model\n\t\t\t// cid (and model itself). Optionally specify\n\t\t\t// a custom key to store an retrieve the view.\n\t\t\tadd: function(view, customIndex){\n\t\t\t\tvar viewCid = view.cid;\n\n\t\t\t\t// store the view\n\t\t\t\tthis._views[viewCid] = view;\n\n\t\t\t\t// index it by model\n\t\t\t\tif (view.model){\n\t\t\t\t\tthis._indexByModel[view.model.cid] = viewCid;\n\t\t\t\t}\n\n\t\t\t\t// index by custom\n\t\t\t\tif (customIndex){\n\t\t\t\t\tthis._indexByCustom[customIndex] = viewCid;\n\t\t\t\t}\n\n\t\t\t\tthis._updateLength();\n\t\t\t},\n\n\t\t\t// Find a view by the model that was attached to\n\t\t\t// it. Uses the model's `cid` to find it.\n\t\t\tfindByModel: function(model){\n\t\t\t\treturn this.findByModelCid(model.cid);\n\t\t\t},\n\n\t\t\t// Find a view by the `cid` of the model that was attached to\n\t\t\t// it. Uses the model's `cid` to find the view `cid` and\n\t\t\t// retrieve the view using it.\n\t\t\tfindByModelCid: function(modelCid){\n\t\t\t\tvar viewCid = this._indexByModel[modelCid];\n\t\t\t\treturn this.findByCid(viewCid);\n\t\t\t},\n\n\t\t\t// Find a view by a custom indexer.\n\t\t\tfindByCustom: function(index){\n\t\t\t\tvar viewCid = this._indexByCustom[index];\n\t\t\t\treturn this.findByCid(viewCid);\n\t\t\t},\n\n\t\t\t// Find by index. This is not guaranteed to be a\n\t\t\t// stable index.\n\t\t\tfindByIndex: function(index){\n\t\t\t\treturn _.values(this._views)[index];\n\t\t\t},\n\n\t\t\t// retrieve a view by it's `cid` directly\n\t\t\tfindByCid: function(cid){\n\t\t\t\treturn this._views[cid];\n\t\t\t},\n\n\t\t\tfindIndexByCid : function( cid ) {\n\t\t\t\tvar index = -1;\n\t\t\t\tvar view = _.find( this._views, function ( view ) {\n\t\t\t\t\tindex++;\n\t\t\t\t\tif( view.model.cid == cid )\n\t\t\t\t\t\treturn view;\n\t\t\t\t} );\n\t\t\t\treturn ( view ) ? index : -1;\n\t\t\t},\n\n\t\t\t// Remove a view\n\t\t\tremove: function(view){\n\t\t\t\tvar viewCid = view.cid;\n\n\t\t\t\t// delete model index\n\t\t\t\tif (view.model){\n\t\t\t\t\tdelete this._indexByModel[view.model.cid];\n\t\t\t\t}\n\n\t\t\t\t// delete custom index\n\t\t\t\t_.any(this._indexByCustom, function(cid, key) {\n\t\t\t\t\tif (cid === viewCid) {\n\t\t\t\t\t\tdelete this._indexByCustom[key];\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\t// remove the view from the container\n\t\t\t\tdelete this._views[viewCid];\n\n\t\t\t\t// update the length\n\t\t\t\tthis._updateLength();\n\t\t\t},\n\n\t\t\t// Call a method on every view in the container,\n\t\t\t// passing parameters to the call method one at a\n\t\t\t// time, like `function.call`.\n\t\t\tcall: function(method){\n\t\t\t\tthis.apply(method, _.tail(arguments));\n\t\t\t},\n\n\t\t\t// Apply a method on every view in the container,\n\t\t\t// passing parameters to the call method one at a\n\t\t\t// time, like `function.apply`.\n\t\t\tapply: function(method, args){\n\t\t\t\t_.each(this._views, function(view){\n\t\t\t\t\tif (_.isFunction(view[method])){\n\t\t\t\t\t\tview[method].apply(view, args || []);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// Update the `.length` attribute on this container\n\t\t\t_updateLength: function(){\n\t\t\t\tthis.length = _.size(this._views);\n\t\t\t}\n\t\t});\n\n\t\t// Borrowing this code from Backbone.Collection:\n\t\t// http://backbonejs.org/docs/backbone.html#section-106\n\t\t//\n\t\t// Mix in methods from Underscore, for iteration, and other\n\t\t// collection related features.\n\t\tvar methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n\t\t\t       'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n\t\t\t       'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n\t\t\t       'last', 'without', 'isEmpty', 'pluck'];\n\n\t\t_.each(methods, function(method) {\n\t\t\tContainer.prototype[method] = function() {\n\t\t\t\tvar views = _.values(this._views);\n\t\t\t\tvar args = [views].concat(_.toArray(arguments));\n\t\t\t\treturn _[method].apply(_, args);\n\t\t\t};\n\t\t});\n\n\t\t// return the public API\n\t\treturn Container;\n\t})(Backbone, _);\n\n\treturn Backbone.CollectionView;\n} ) );\n\n","/**\n * Backbone Forms v0.14.0\n *\n * NOTE:\n * This version is for use with RequireJS\n * If using regular <script> tags to include your files, use backbone-forms.min.js\n *\n * Copyright (c) 2013 Charles Davison, Pow Media Ltd\n *\n * License and more information at:\n * http://github.com/powmedia/backbone-forms\n */\ndefine('../vendor/backbone-forms',['jquery', 'underscore', 'backbone'], function($, _, Backbone) {\n\n  //==================================================================================================\n//FORM\n//==================================================================================================\n\nvar Form = Backbone.View.extend({\n\n  events: {\n    'submit': function(event) {\n      this.trigger('submit', event);\n    }\n  },\n\n  /**\n   * Constructor\n   *\n   * @param {Object} [options.schema]\n   * @param {Backbone.Model} [options.model]\n   * @param {Object} [options.data]\n   * @param {String[]|Object[]} [options.fieldsets]\n   * @param {String[]} [options.fields]\n   * @param {String} [options.idPrefix]\n   * @param {Form.Field} [options.Field]\n   * @param {Form.Fieldset} [options.Fieldset]\n   * @param {Function} [options.template]\n   * @param {Boolean|String} [options.submitButton]\n   */\n  initialize: function(options) {\n    var self = this;\n\n    //Merge default options\n    options = this.options = _.extend({\n      submitButton: false\n    }, options);\n\n    //Find the schema to use\n    var schema = this.schema = (function() {\n      //Prefer schema from options\n      if (options.schema) return _.result(options, 'schema');\n\n      //Then schema on model\n      var model = options.model;\n      if (model && model.schema) return _.result(model, 'schema');\n\n      //Then built-in schema\n      if (self.schema) return _.result(self, 'schema');\n\n      //Fallback to empty schema\n      return {};\n    })();\n\n    //Store important data\n    _.extend(this, _.pick(options, 'model', 'data', 'idPrefix', 'templateData'));\n\n    //Override defaults\n    var constructor = this.constructor;\n    this.template = options.template || this.template || constructor.template;\n    this.Fieldset = options.Fieldset || this.Fieldset || constructor.Fieldset;\n    this.Field = options.Field || this.Field || constructor.Field;\n    this.NestedField = options.NestedField || this.NestedField || constructor.NestedField;\n\n    //Check which fields will be included (defaults to all)\n    var selectedFields = this.selectedFields = options.fields || _.keys(schema);\n\n    //Create fields\n    var fields = this.fields = {};\n\n    _.each(selectedFields, function(key) {\n      var fieldSchema = schema[key];\n      fields[key] = this.createField(key, fieldSchema);\n    }, this);\n\n    //Create fieldsets\n    var fieldsetSchema = options.fieldsets || _.result(this, 'fieldsets') || _.result(this.model, 'fieldsets') || [selectedFields],\n        fieldsets = this.fieldsets = [];\n\n    _.each(fieldsetSchema, function(itemSchema) {\n      this.fieldsets.push(this.createFieldset(itemSchema));\n    }, this);\n  },\n\n  /**\n   * Creates a Fieldset instance\n   *\n   * @param {String[]|Object[]} schema       Fieldset schema\n   *\n   * @return {Form.Fieldset}\n   */\n  createFieldset: function(schema) {\n    var options = {\n      schema: schema,\n      fields: this.fields,\n      legend: schema.legend || null\n    };\n\n    return new this.Fieldset(options);\n  },\n\n  /**\n   * Creates a Field instance\n   *\n   * @param {String} key\n   * @param {Object} schema       Field schema\n   *\n   * @return {Form.Field}\n   */\n  createField: function(key, schema) {\n    var options = {\n      form: this,\n      key: key,\n      schema: schema,\n      idPrefix: this.idPrefix\n    };\n\n    if (this.model) {\n      options.model = this.model;\n    } else if (this.data) {\n      options.value = this.data[key];\n    } else {\n      options.value = undefined;\n    }\n\n    var field = new this.Field(options);\n\n    this.listenTo(field.editor, 'all', this.handleEditorEvent);\n\n    return field;\n  },\n\n  /**\n   * Callback for when an editor event is fired.\n   * Re-triggers events on the form as key:event and triggers additional form-level events\n   *\n   * @param {String} event\n   * @param {Editor} editor\n   */\n  handleEditorEvent: function(event, editor) {\n    //Re-trigger editor events on the form\n    var formEvent = editor.key+':'+event;\n\n    this.trigger.call(this, formEvent, this, editor, Array.prototype.slice.call(arguments, 2));\n\n    //Trigger additional events\n    switch (event) {\n      case 'change':\n        this.trigger('change', this);\n        break;\n\n      case 'focus':\n        if (!this.hasFocus) this.trigger('focus', this);\n        break;\n\n      case 'blur':\n        if (this.hasFocus) {\n          //TODO: Is the timeout etc needed?\n          var self = this;\n          setTimeout(function() {\n            var focusedField = _.find(self.fields, function(field) {\n              return field.editor.hasFocus;\n            });\n\n            if (!focusedField) self.trigger('blur', self);\n          }, 0);\n        }\n        break;\n    }\n  },\n\n  templateData: function() {\n    var options = this.options;\n\n    return {\n      submitButton: options.submitButton\n    }\n  },\n\n  render: function() {\n    var self = this,\n        fields = this.fields,\n        $ = Backbone.$;\n\n    //Render form\n    var $form = $($.trim(this.template(_.result(this, 'templateData'))));\n\n    //Render standalone editors\n    $form.find('[data-editors]').add($form).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-editors');\n\n      if (_.isUndefined(selection)) return;\n\n      //Work out which fields to include\n      var keys = (selection == '*')\n        ? self.selectedFields || _.keys(fields)\n        : selection.split(',');\n\n      //Add them\n      _.each(keys, function(key) {\n        var field = fields[key];\n\n        $container.append(field.editor.render().el);\n      });\n    });\n\n    //Render standalone fields\n    $form.find('[data-fields]').add($form).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-fields');\n\n      if (_.isUndefined(selection)) return;\n\n      //Work out which fields to include\n      var keys = (selection == '*')\n        ? self.selectedFields || _.keys(fields)\n        : selection.split(',');\n\n      //Add them\n      _.each(keys, function(key) {\n        var field = fields[key];\n\n        $container.append(field.render().el);\n      });\n    });\n\n    //Render fieldsets\n    $form.find('[data-fieldsets]').add($form).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-fieldsets');\n\n      if (_.isUndefined(selection)) return;\n\n      _.each(self.fieldsets, function(fieldset) {\n        $container.append(fieldset.render().el);\n      });\n    });\n\n    //Set the main element\n    this.setElement($form);\n\n    //Set class\n    $form.addClass(this.className);\n\n    //Set attributes\n    if (this.attributes) {\n      $form.attr(this.attributes)\n    }\n\n    return this;\n  },\n\n  /**\n   * Validate the data\n   *\n   * @return {Object}       Validation errors\n   */\n  validate: function(options) {\n    var self = this,\n        fields = this.fields,\n        model = this.model,\n        errors = {};\n\n    options = options || {};\n\n    //Collect errors from schema validation\n    _.each(fields, function(field) {\n      var error = field.validate();\n      if (error) {\n        errors[field.key] = error;\n      }\n    });\n\n    //Get errors from default Backbone model validator\n    if (!options.skipModelValidate && model && model.validate) {\n      var modelErrors = model.validate(this.getValue());\n\n      if (modelErrors) {\n        var isDictionary = _.isObject(modelErrors) && !_.isArray(modelErrors);\n\n        //If errors are not in object form then just store on the error object\n        if (!isDictionary) {\n          errors._others = errors._others || [];\n          errors._others.push(modelErrors);\n        }\n\n        //Merge programmatic errors (requires model.validate() to return an object e.g. { fieldKey: 'error' })\n        if (isDictionary) {\n          _.each(modelErrors, function(val, key) {\n            //Set error on field if there isn't one already\n            if (fields[key] && !errors[key]) {\n              fields[key].setError(val);\n              errors[key] = val;\n            }\n\n            else {\n              //Otherwise add to '_others' key\n              errors._others = errors._others || [];\n              var tmpErr = {};\n              tmpErr[key] = val;\n              errors._others.push(tmpErr);\n            }\n          });\n        }\n      }\n    }\n\n    return _.isEmpty(errors) ? null : errors;\n  },\n\n  /**\n   * Update the model with all latest values.\n   *\n   * @param {Object} [options]  Options to pass to Model#set (e.g. { silent: true })\n   *\n   * @return {Object}  Validation errors\n   */\n  commit: function(options) {\n    //Validate\n    options = options || {};\n\n    var validateOptions = {\n        skipModelValidate: !options.validate\n    };\n\n    var errors = this.validate(validateOptions);\n    if (errors) return errors;\n\n    //Commit\n    var modelError;\n\n    var setOptions = _.extend({\n      error: function(model, e) {\n        modelError = e;\n      }\n    }, options);\n\n    this.model.set(this.getValue(), setOptions);\n\n    if (modelError) return modelError;\n  },\n\n  /**\n   * Get all the field values as an object.\n   * Use this method when passing data instead of objects\n   *\n   * @param {String} [key]    Specific field value to get\n   */\n  getValue: function(key) {\n    //Return only given key if specified\n    if (key) return this.fields[key].getValue();\n\n    //Otherwise return entire form\n    var values = {};\n    _.each(this.fields, function(field) {\n      values[field.key] = field.getValue();\n    });\n\n    return values;\n  },\n\n  /**\n   * Update field values, referenced by key\n   *\n   * @param {Object|String} key     New values to set, or property to set\n   * @param val                     Value to set\n   */\n  setValue: function(prop, val) {\n    var data = {};\n    if (typeof prop === 'string') {\n      data[prop] = val;\n    } else {\n      data = prop;\n    }\n\n    var key;\n    for (key in this.schema) {\n      if (data[key] !== undefined) {\n        this.fields[key].setValue(data[key]);\n      }\n    }\n  },\n\n  /**\n   * Returns the editor for a given field key\n   *\n   * @param {String} key\n   *\n   * @return {Editor}\n   */\n  getEditor: function(key) {\n    var field = this.fields[key];\n    if (!field) throw new Error('Field not found: '+key);\n\n    return field.editor;\n  },\n\n  /**\n   * Gives the first editor in the form focus\n   */\n  focus: function() {\n    if (this.hasFocus) return;\n\n    //Get the first field\n    var fieldset = this.fieldsets[0],\n        field = fieldset.getFieldAt(0);\n\n    if (!field) return;\n\n    //Set focus\n    field.editor.focus();\n  },\n\n  /**\n   * Removes focus from the currently focused editor\n   */\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    var focusedField = _.find(this.fields, function(field) {\n      return field.editor.hasFocus;\n    });\n\n    if (focusedField) focusedField.editor.blur();\n  },\n\n  /**\n   * Manages the hasFocus property\n   *\n   * @param {String} event\n   */\n  trigger: function(event) {\n    if (event === 'focus') {\n      this.hasFocus = true;\n    }\n    else if (event === 'blur') {\n      this.hasFocus = false;\n    }\n\n    return Backbone.View.prototype.trigger.apply(this, arguments);\n  },\n\n  /**\n   * Override default remove function in order to remove embedded views\n   *\n   * TODO: If editors are included directly with data-editors=\"x\", they need to be removed\n   * May be best to use XView to manage adding/removing views\n   */\n  remove: function() {\n    _.each(this.fieldsets, function(fieldset) {\n      fieldset.remove();\n    });\n\n    _.each(this.fields, function(field) {\n      field.remove();\n    });\n\n    return Backbone.View.prototype.remove.apply(this, arguments);\n  }\n\n}, {\n    editors: {}\n\n});\n\n//Statics to add on after Form is declared\nForm.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n};\n\nForm.template = _.template('\\\n    <form>\\\n     <div data-fieldsets></div>\\\n      <% if (submitButton) { %>\\\n        <button type=\"submit\"><%= submitButton %></button>\\\n      <% } %>\\\n    </form>\\\n  ', null, Form.templateSettings);\n\n\n//==================================================================================================\n//VALIDATORS\n//==================================================================================================\n\nForm.validators = (function() {\n\n  var validators = {};\n\n  validators.errMessages = {\n    required: 'Required',\n    regexp: 'Invalid',\n    number: 'Must be a number',\n    range: _.template('Must be a number between <%= min %> and <%= max %>', null, Form.templateSettings),\n    email: 'Invalid email address',\n    url: 'Invalid URL',\n    match: _.template('Must match field \"<%= field %>\"', null, Form.templateSettings)\n  };\n\n  validators.required = function(options) {\n    options = _.extend({\n      type: 'required',\n      message: this.errMessages.required\n    }, options);\n\n    return function required(value) {\n      options.value = value;\n\n      var err = {\n        type: options.type,\n        message: _.isFunction(options.message) ? options.message(options) : options.message\n      };\n\n      if (value === null || value === undefined || value === false || value === '' || $.trim(value) === '' ) return err;\n    };\n  };\n\n  validators.regexp = function(options) {\n    if (!options.regexp) throw new Error('Missing required \"regexp\" option for \"regexp\" validator');\n\n    options = _.extend({\n      type: 'regexp',\n      match: true,\n      message: this.errMessages.regexp\n    }, options);\n\n    return function regexp(value) {\n      options.value = value;\n\n      var err = {\n        type: options.type,\n        message: _.isFunction(options.message) ? options.message(options) : options.message\n      };\n\n      //Don't check empty values (add a 'required' validator for this)\n      if (value === null || value === undefined || value === '') return;\n\n      //Create RegExp from string if it's valid\n      if ('string' === typeof options.regexp) options.regexp = new RegExp(options.regexp, options.flags);\n\n      if ((options.match) ? !options.regexp.test(value) : options.regexp.test(value)) return err;\n    };\n  };\n\n  validators.number = function(options) {\n    options = _.extend({\n      type: 'number',\n      message: this.errMessages.number,\n      regexp: /^[-+]?([0-9]*.[0-9]+|[0-9]+)$/\n    }, options);\n\n    return validators.regexp(options);\n  };\n\n  validators.range = function(options) {\n    options = _.extend({\n      type: 'range',\n      message: this.errMessages.range,\n      numberMessage: this.errMessages.number,\n      min: 0,\n      max: 100\n    }, options);\n\n    return function range(value) {\n      options.value = value;\n      var err = {\n        type: options.type,\n        message: _.isFunction(options.message) ? options.message(options) : options.message\n      };\n\n      //Don't check empty values (add a 'required' validator for this)\n      if (value === null || value === undefined || value === '') return;\n\n      // check value is a number\n      var numberCheck = validators.number({message: options.numberMessage})(value);\n      if (numberCheck) return numberCheck;\n\n      // check value is in range\n      var number = parseFloat(options.value);\n      if (number < options.min || number > options.max) return err;\n    }\n  }\n\n  validators.email = function(options) {\n    options = _.extend({\n      type: 'email',\n      message: this.errMessages.email,\n      regexp: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i\n    }, options);\n\n    return validators.regexp(options);\n  };\n\n  validators.url = function(options) {\n    options = _.extend({\n      type: 'url',\n      message: this.errMessages.url,\n      regexp: /^((http|https):\\/\\/)?(([A-Z0-9][A-Z0-9_\\-]*)(\\.[A-Z0-9][A-Z0-9_\\-]*)+)(:(\\d+))?\\/?/i\n    }, options);\n\n    return validators.regexp(options);\n  };\n\n  validators.match = function(options) {\n    if (!options.field) throw new Error('Missing required \"field\" options for \"match\" validator');\n\n    options = _.extend({\n      type: 'match',\n      message: this.errMessages.match\n    }, options);\n\n    return function match(value, attrs) {\n      options.value = value;\n\n      var err = {\n        type: options.type,\n        message: _.isFunction(options.message) ? options.message(options) : options.message\n      };\n\n      //Don't check empty values (add a 'required' validator for this)\n      if (value === null || value === undefined || value === '') return;\n\n      if (value !== attrs[options.field]) return err;\n    };\n  };\n\n\n  return validators;\n\n})();\n\n\n//==================================================================================================\n//FIELDSET\n//==================================================================================================\n\nForm.Fieldset = Backbone.View.extend({\n\n  /**\n   * Constructor\n   *\n   * Valid fieldset schemas:\n   *   ['field1', 'field2']\n   *   { legend: 'Some Fieldset', fields: ['field1', 'field2'] }\n   *\n   * @param {String[]|Object[]} options.schema      Fieldset schema\n   * @param {Object} options.fields           Form fields\n   */\n  initialize: function(options) {\n    options = options || {};\n\n    //Create the full fieldset schema, merging defaults etc.\n    var schema = this.schema = this.createSchema(options.schema);\n\n    //Store the fields for this fieldset\n    this.fields = _.pick(options.fields, schema.fields);\n\n    //Override defaults\n    this.template = options.template || schema.template || this.template || this.constructor.template;\n  },\n\n  /**\n   * Creates the full fieldset schema, normalising, merging defaults etc.\n   *\n   * @param {String[]|Object[]} schema\n   *\n   * @return {Object}\n   */\n  createSchema: function(schema) {\n    //Normalise to object\n    if (_.isArray(schema)) {\n      schema = { fields: schema };\n    }\n\n    //Add null legend to prevent template error\n    schema.legend = schema.legend || null;\n\n    return schema;\n  },\n\n  /**\n   * Returns the field for a given index\n   *\n   * @param {Number} index\n   *\n   * @return {Field}\n   */\n  getFieldAt: function(index) {\n    var key = this.schema.fields[index];\n\n    return this.fields[key];\n  },\n\n  /**\n   * Returns data to pass to template\n   *\n   * @return {Object}\n   */\n  templateData: function() {\n    return this.schema;\n  },\n\n  /**\n   * Renders the fieldset and fields\n   *\n   * @return {Fieldset} this\n   */\n  render: function() {\n    var schema = this.schema,\n        fields = this.fields,\n        $ = Backbone.$;\n\n    //Render fieldset\n    var $fieldset = $($.trim(this.template(_.result(this, 'templateData'))));\n\n    //Render fields\n    $fieldset.find('[data-fields]').add($fieldset).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-fields');\n\n      if (_.isUndefined(selection)) return;\n\n      _.each(fields, function(field) {\n        $container.append(field.render().el);\n      });\n    });\n\n    this.setElement($fieldset);\n\n    return this;\n  },\n\n  /**\n   * Remove embedded views then self\n   */\n  remove: function() {\n    _.each(this.fields, function(field) {\n      field.remove();\n    });\n\n    Backbone.View.prototype.remove.call(this);\n  }\n\n}, {\n  //STATICS\n\n  template: _.template('\\\n    <fieldset data-fields>\\\n      <% if (legend) { %>\\\n        <legend><%= legend %></legend>\\\n      <% } %>\\\n    </fieldset>\\\n  ', null, Form.templateSettings)\n\n});\n\n\n//==================================================================================================\n//FIELD\n//==================================================================================================\n\nForm.Field = Backbone.View.extend({\n\n  /**\n   * Constructor\n   *\n   * @param {Object} options.key\n   * @param {Object} options.form\n   * @param {Object} [options.schema]\n   * @param {Function} [options.schema.template]\n   * @param {Backbone.Model} [options.model]\n   * @param {Object} [options.value]\n   * @param {String} [options.idPrefix]\n   * @param {Function} [options.template]\n   * @param {Function} [options.errorClassName]\n   */\n  initialize: function(options) {\n    options = options || {};\n\n    //Store important data\n    _.extend(this, _.pick(options, 'form', 'key', 'model', 'value', 'idPrefix'));\n\n    //Create the full field schema, merging defaults etc.\n    var schema = this.schema = this.createSchema(options.schema);\n\n    //Override defaults\n    this.template = options.template || schema.template || this.template || this.constructor.template;\n    this.errorClassName = options.errorClassName || schema.errorClassName || this.errorClassName || this.constructor.errorClassName;\n\n    //Create editor\n    this.editor = this.createEditor();\n  },\n\n  /**\n   * Creates the full field schema, merging defaults etc.\n   *\n   * @param {Object|String} schema\n   *\n   * @return {Object}\n   */\n  createSchema: function(schema) {\n    if (_.isString(schema)) schema = { type: schema };\n\n    //Set defaults\n    schema = _.extend({\n      type: 'Text',\n      title: this.createTitle()\n    }, schema);\n\n    //Get the real constructor function i.e. if type is a string such as 'Text'\n    schema.type = (_.isString(schema.type)) ? Form.editors[schema.type] : schema.type;\n\n    return schema;\n  },\n\n  /**\n   * Creates the editor specified in the schema; either an editor string name or\n   * a constructor function\n   *\n   * @return {View}\n   */\n  createEditor: function() {\n    var options = _.extend(\n      _.pick(this, 'schema', 'form', 'key', 'model', 'value'),\n      { id: this.createEditorId() }\n    );\n\n    var constructorFn = this.schema.type;\n\n    return new constructorFn(options);\n  },\n\n  /**\n   * Creates the ID that will be assigned to the editor\n   *\n   * @return {String}\n   */\n  createEditorId: function() {\n    var prefix = this.idPrefix,\n        id = this.key;\n\n    //Replace periods with underscores (e.g. for when using paths)\n    id = id.replace(/\\./g, '_');\n\n    //If a specific ID prefix is set, use it\n    if (_.isString(prefix) || _.isNumber(prefix)) return prefix + id;\n    if (_.isNull(prefix)) return id;\n\n    //Otherwise, if there is a model use it's CID to avoid conflicts when multiple forms are on the page\n    if (this.model) return this.model.cid + '_' + id;\n\n    return id;\n  },\n\n  /**\n   * Create the default field title (label text) from the key name.\n   * (Converts 'camelCase' to 'Camel Case')\n   *\n   * @return {String}\n   */\n  createTitle: function() {\n    var str = this.key;\n\n    //Add spaces\n    str = str.replace(/([A-Z])/g, ' $1');\n\n    //Uppercase first character\n    str = str.replace(/^./, function(str) { return str.toUpperCase(); });\n\n    return str;\n  },\n\n  /**\n   * Returns the data to be passed to the template\n   *\n   * @return {Object}\n   */\n  templateData: function() {\n    var schema = this.schema;\n\n    return {\n      help: schema.help || '',\n      title: schema.title,\n      titleHTML: schema.titleHTML,\n      fieldAttrs: schema.fieldAttrs,\n      editorAttrs: schema.editorAttrs,\n      key: this.key,\n      editorId: this.editor.id\n    };\n  },\n\n  /**\n   * Render the field and editor\n   *\n   * @return {Field} self\n   */\n  render: function() {\n    var schema = this.schema,\n        editor = this.editor,\n        $ = Backbone.$;\n\n    //Only render the editor if requested\n    if (this.editor.noField === true) {\n      return this.setElement(editor.render().el);\n    }\n\n    //Render field\n    var $field = $($.trim(this.template(_.result(this, 'templateData'))));\n\n    if (schema.fieldClass) $field.addClass(schema.fieldClass);\n    if (schema.fieldAttrs) $field.attr(schema.fieldAttrs);\n\n    //Render editor\n    $field.find('[data-editor]').add($field).each(function(i, el) {\n      var $container = $(el),\n          selection = $container.attr('data-editor');\n\n      if (_.isUndefined(selection)) return;\n\n      $container.append(editor.render().el);\n    });\n\n    this.setElement($field);\n\n    return this;\n  },\n\n  /**\n   * Disable the field's editor\n   * Will call the editor's disable method if it exists\n   * Otherwise will add the disabled attribute to all inputs in the editor\n   */\n  disable: function(){\n    if ( _.isFunction(this.editor.disable) ){\n      this.editor.disable();\n    }\n    else {\n      $input = this.editor.$el;\n      $input = $input.is(\"input\") ? $input : $input.find(\"input\");\n      $input.attr(\"disabled\",true);\n    }\n  },\n\n  /**\n   * Enable the field's editor\n   * Will call the editor's disable method if it exists\n   * Otherwise will remove the disabled attribute to all inputs in the editor\n   */\n  enable: function(){\n    if ( _.isFunction(this.editor.enable) ){\n      this.editor.enable();\n    }\n    else {\n      $input = this.editor.$el;\n      $input = $input.is(\"input\") ? $input : $input.find(\"input\");\n      $input.attr(\"disabled\",false);\n    }\n  },\n\n  /**\n   * Check the validity of the field\n   *\n   * @return {String}\n   */\n  validate: function() {\n    var error = this.editor.validate();\n\n    if (error) {\n      this.setError(error.message);\n    } else {\n      this.clearError();\n    }\n\n    return error;\n  },\n\n  /**\n   * Set the field into an error state, adding the error class and setting the error message\n   *\n   * @param {String} msg     Error message\n   */\n  setError: function(msg) {\n    //Nested form editors (e.g. Object) set their errors internally\n    if (this.editor.hasNestedForm) return;\n\n    //Add error CSS class\n    this.$el.addClass(this.errorClassName);\n\n    //Set error message\n    this.$('[data-error]').last().html(msg);\n  },\n\n  /**\n   * Clear the error state and reset the help message\n   */\n  clearError: function() {\n    //Remove error CSS class\n    this.$el.removeClass(this.errorClassName);\n\n    //Clear error message\n    this.$('[data-error]').empty();\n  },\n\n  /**\n   * Update the model with the new value from the editor\n   *\n   * @return {Mixed}\n   */\n  commit: function() {\n    return this.editor.commit();\n  },\n\n  /**\n   * Get the value from the editor\n   *\n   * @return {Mixed}\n   */\n  getValue: function() {\n    return this.editor.getValue();\n  },\n\n  /**\n   * Set/change the value of the editor\n   *\n   * @param {Mixed} value\n   */\n  setValue: function(value) {\n    this.editor.setValue(value);\n  },\n\n  /**\n   * Give the editor focus\n   */\n  focus: function() {\n    this.editor.focus();\n  },\n\n  /**\n   * Remove focus from the editor\n   */\n  blur: function() {\n    this.editor.blur();\n  },\n\n  /**\n   * Remove the field and editor views\n   */\n  remove: function() {\n    this.editor.remove();\n\n    Backbone.View.prototype.remove.call(this);\n  }\n\n}, {\n  //STATICS\n\n  template: _.template('\\\n    <div>\\\n      <label for=\"<%= editorId %>\">\\\n        <% if (titleHTML){ %><%= titleHTML %>\\\n        <% } else { %><%- title %><% } %>\\\n      </label>\\\n      <div>\\\n        <span data-editor></span>\\\n        <div data-error></div>\\\n        <div><%= help %></div>\\\n      </div>\\\n    </div>\\\n  ', null, Form.templateSettings),\n\n  /**\n   * CSS class name added to the field when there is a validation error\n   */\n  errorClassName: 'error'\n\n});\n\n\n//==================================================================================================\n//NESTEDFIELD\n//==================================================================================================\n\nForm.NestedField = Form.Field.extend({\n\n  template: _.template('\\\n    <div>\\\n      <label for=\"<%= editorId %>\">\\\n        <% if (titleHTML){ %><%= titleHTML %>\\\n        <% } else { %><%- title %><% } %>\\\n      </label>\\\n      <div>\\\n        <span data-editor></span>\\\n        <div class=\"error-text\" data-error></div>\\\n        <div class=\"error-help\"><%= help %></div>\\\n      </div>\\\n    </div>\\\n  ', null, Form.templateSettings)\n\n});\n\n/**\n * Base editor (interface). To be extended, not used directly\n *\n * @param {Object} options\n * @param {String} [options.id]         Editor ID\n * @param {Model} [options.model]       Use instead of value, and use commit()\n * @param {String} [options.key]        The model attribute key. Required when using 'model'\n * @param {Mixed} [options.value]       When not using a model. If neither provided, defaultValue will be used\n * @param {Object} [options.schema]     Field schema; may be required by some editors\n * @param {Object} [options.validators] Validators; falls back to those stored on schema\n * @param {Object} [options.form]       The form\n */\nForm.Editor = Form.editors.Base = Backbone.View.extend({\n\n  defaultValue: null,\n\n  hasFocus: false,\n\n  initialize: function(options) {\n    var options = options || {};\n\n    //Set initial value\n    if (options.model) {\n      if (!options.key) throw new Error(\"Missing option: 'key'\");\n\n      this.model = options.model;\n\n      this.value = this.model.get(options.key);\n    }\n    else if (options.value !== undefined) {\n      this.value = options.value;\n    }\n\n    if (this.value === undefined) this.value = this.defaultValue;\n\n    //Store important data\n    _.extend(this, _.pick(options, 'key', 'form'));\n\n    var schema = this.schema = options.schema || {};\n\n    this.validators = options.validators || schema.validators;\n\n    //Main attributes\n    this.$el.attr('id', this.id);\n    this.$el.attr('name', this.getName());\n    if (schema.editorClass) this.$el.addClass(schema.editorClass);\n    if (schema.editorAttrs) this.$el.attr(schema.editorAttrs);\n  },\n\n  /**\n   * Get the value for the form input 'name' attribute\n   *\n   * @return {String}\n   *\n   * @api private\n   */\n  getName: function() {\n    var key = this.key || '';\n\n    //Replace periods with underscores (e.g. for when using paths)\n    return key.replace(/\\./g, '_');\n  },\n\n  /**\n   * Get editor value\n   * Extend and override this method to reflect changes in the DOM\n   *\n   * @return {Mixed}\n   */\n  getValue: function() {\n    return this.value;\n  },\n\n  /**\n   * Set editor value\n   * Extend and override this method to reflect changes in the DOM\n   *\n   * @param {Mixed} value\n   */\n  setValue: function(value) {\n    this.value = value;\n  },\n\n  /**\n   * Give the editor focus\n   * Extend and override this method\n   */\n  focus: function() {\n    throw new Error('Not implemented');\n  },\n\n  /**\n   * Remove focus from the editor\n   * Extend and override this method\n   */\n  blur: function() {\n    throw new Error('Not implemented');\n  },\n\n  /**\n   * Update the model with the current value\n   *\n   * @param {Object} [options]              Options to pass to model.set()\n   * @param {Boolean} [options.validate]    Set to true to trigger built-in model validation\n   *\n   * @return {Mixed} error\n   */\n  commit: function(options) {\n    var error = this.validate();\n    if (error) return error;\n\n    this.listenTo(this.model, 'invalid', function(model, e) {\n      error = e;\n    });\n    this.model.set(this.key, this.getValue(), options);\n\n    if (error) return error;\n  },\n\n  /**\n   * Check validity\n   *\n   * @return {Object|Undefined}\n   */\n  validate: function() {\n    var $el = this.$el,\n        error = null,\n        value = this.getValue(),\n        formValues = this.form ? this.form.getValue() : {},\n        validators = this.validators,\n        getValidator = this.getValidator;\n\n    if (validators) {\n      //Run through validators until an error is found\n      _.every(validators, function(validator) {\n        error = getValidator(validator)(value, formValues);\n\n        return error ? false : true;\n      });\n    }\n\n    return error;\n  },\n\n  /**\n   * Set this.hasFocus, or call parent trigger()\n   *\n   * @param {String} event\n   */\n  trigger: function(event) {\n    if (event === 'focus') {\n      this.hasFocus = true;\n    }\n    else if (event === 'blur') {\n      this.hasFocus = false;\n    }\n\n    return Backbone.View.prototype.trigger.apply(this, arguments);\n  },\n\n  /**\n   * Returns a validation function based on the type defined in the schema\n   *\n   * @param {RegExp|String|Function} validator\n   * @return {Function}\n   */\n  getValidator: function(validator) {\n    var validators = Form.validators;\n\n    //Convert regular expressions to validators\n    if (_.isRegExp(validator)) {\n      return validators.regexp({ regexp: validator });\n    }\n\n    //Use a built-in validator if given a string\n    if (_.isString(validator)) {\n      if (!validators[validator]) throw new Error('Validator \"'+validator+'\" not found');\n\n      return validators[validator]();\n    }\n\n    //Functions can be used directly\n    if (_.isFunction(validator)) return validator;\n\n    //Use a customised built-in validator if given an object\n    if (_.isObject(validator) && validator.type) {\n      var config = validator;\n\n      return validators[config.type](config);\n    }\n\n    //Unkown validator type\n    throw new Error('Invalid validator: ' + validator);\n  }\n});\n\n/**\n * Text\n *\n * Text input with focus, blur and change events\n */\nForm.editors.Text = Form.Editor.extend({\n\n  tagName: 'input',\n\n  defaultValue: '',\n\n  previousValue: '',\n\n  events: {\n    'keyup':    'determineChange',\n    'keypress': function(event) {\n      var self = this;\n      setTimeout(function() {\n        self.determineChange();\n      }, 0);\n    },\n    'select':   function(event) {\n      this.trigger('select', this);\n    },\n    'focus':    function(event) {\n      this.trigger('focus', this);\n    },\n    'blur':     function(event) {\n      this.trigger('blur', this);\n    }\n  },\n\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    var schema = this.schema;\n\n    //Allow customising text type (email, phone etc.) for HTML5 browsers\n    var type = 'text';\n\n    if (schema && schema.editorAttrs && schema.editorAttrs.type) type = schema.editorAttrs.type;\n    if (schema && schema.dataType) type = schema.dataType;\n\n    this.$el.attr('type', type);\n  },\n\n  /**\n   * Adds the editor to the DOM\n   */\n  render: function() {\n    this.setValue(this.value);\n\n    return this;\n  },\n\n  determineChange: function(event) {\n    var currentValue = this.$el.val();\n    var changed = (currentValue !== this.previousValue);\n\n    if (changed) {\n      this.previousValue = currentValue;\n\n      this.trigger('change', this);\n    }\n  },\n\n  /**\n   * Returns the current editor value\n   * @return {String}\n   */\n  getValue: function() {\n    return this.$el.val();\n  },\n\n  /**\n   * Sets the value of the form element\n   * @param {String}\n   */\n  setValue: function(value) {\n    this.value = value;\n    this.$el.val(value);\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$el.focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$el.blur();\n  },\n\n  select: function() {\n    this.$el.select();\n  }\n\n});\n\n/**\n * TextArea editor\n */\nForm.editors.TextArea = Form.editors.Text.extend({\n\n  tagName: 'textarea',\n\n  /**\n   * Override Text constructor so type property isn't set (issue #261)\n   */\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n  }\n\n});\n\n/**\n * Password editor\n */\nForm.editors.Password = Form.editors.Text.extend({\n\n  initialize: function(options) {\n    Form.editors.Text.prototype.initialize.call(this, options);\n\n    this.$el.attr('type', 'password');\n  }\n\n});\n\n/**\n * NUMBER\n *\n * Normal text input that only allows a number. Letters etc. are not entered.\n */\nForm.editors.Number = Form.editors.Text.extend({\n\n  defaultValue: 0,\n\n  events: _.extend({}, Form.editors.Text.prototype.events, {\n    'keypress': 'onKeyPress',\n    'change': 'onKeyPress'\n  }),\n\n  initialize: function(options) {\n    Form.editors.Text.prototype.initialize.call(this, options);\n\n    var schema = this.schema;\n\n    this.$el.attr('type', 'number');\n\n    if (!schema || !schema.editorAttrs || !schema.editorAttrs.step) {\n      // provide a default for `step` attr,\n      // but don't overwrite if already specified\n      this.$el.attr('step', 'any');\n    }\n  },\n\n  /**\n   * Check value is numeric\n   */\n  onKeyPress: function(event) {\n    var self = this,\n        delayedDetermineChange = function() {\n          setTimeout(function() {\n            self.determineChange();\n          }, 0);\n        };\n\n    //Allow backspace\n    if (event.charCode === 0) {\n      delayedDetermineChange();\n      return;\n    }\n\n    //Get the whole new value so that we can prevent things like double decimals points etc.\n    var newVal = this.$el.val()\n    if( event.charCode != undefined ) {\n      newVal = newVal + String.fromCharCode(event.charCode);\n    }\n\n    var numeric = /^[0-9]*\\.?[0-9]*?$/.test(newVal);\n\n    if (numeric) {\n      delayedDetermineChange();\n    }\n    else {\n      event.preventDefault();\n    }\n  },\n\n  getValue: function() {\n    var value = this.$el.val();\n\n    return value === \"\" ? null : parseFloat(value, 10);\n  },\n\n  setValue: function(value) {\n    value = (function() {\n      if (_.isNumber(value)) return value;\n\n      if (_.isString(value) && value !== '') return parseFloat(value, 10);\n\n      return null;\n    })();\n\n    if (_.isNaN(value)) value = null;\n    this.value = value;\n    Form.editors.Text.prototype.setValue.call(this, value);\n  }\n\n});\n\n/**\n * Hidden editor\n */\nForm.editors.Hidden = Form.editors.Text.extend({\n\n  defaultValue: '',\n\n  noField: true,\n\n  initialize: function(options) {\n    Form.editors.Text.prototype.initialize.call(this, options);\n\n    this.$el.attr('type', 'hidden');\n  },\n\n  focus: function() {\n\n  },\n\n  blur: function() {\n\n  }\n\n});\n\n/**\n * Checkbox editor\n *\n * Creates a single checkbox, i.e. boolean value\n */\nForm.editors.Checkbox = Form.editors.Base.extend({\n\n  defaultValue: false,\n\n  tagName: 'input',\n\n  events: {\n    'click':  function(event) {\n      this.trigger('change', this);\n    },\n    'focus':  function(event) {\n      this.trigger('focus', this);\n    },\n    'blur':   function(event) {\n      this.trigger('blur', this);\n    }\n  },\n\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    this.$el.attr('type', 'checkbox');\n  },\n\n  /**\n   * Adds the editor to the DOM\n   */\n  render: function() {\n    this.setValue(this.value);\n\n    return this;\n  },\n\n  getValue: function() {\n    return this.$el.prop('checked');\n  },\n\n  setValue: function(value) {\n    if (value) {\n      this.$el.prop('checked', true);\n    }else{\n      this.$el.prop('checked', false);\n    }\n    this.value = !!value;\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$el.focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$el.blur();\n  }\n\n});\n\n/**\n * Select editor\n *\n * Renders a <select> with given options\n *\n * Requires an 'options' value on the schema.\n *  Can be an array of options, a function that calls back with the array of options, a string of HTML\n *  or a Backbone collection. If a collection, the models must implement a toString() method\n */\nForm.editors.Select = Form.editors.Base.extend({\n\n  tagName: 'select',\n\n  previousValue: '',\n\n  events: {\n    'keyup':    'determineChange',\n    'keypress': function(event) {\n      var self = this;\n      setTimeout(function() {\n        self.determineChange();\n      }, 0);\n    },\n    'change': function(event) {\n      this.trigger('change', this);\n    },\n    'focus':  function(event) {\n      this.trigger('focus', this);\n    },\n    'blur':   function(event) {\n      this.trigger('blur', this);\n    }\n  },\n\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    if (!this.schema || !this.schema.options) throw new Error(\"Missing required 'schema.options'\");\n  },\n\n  render: function() {\n    this.setOptions(this.schema.options);\n\n    return this;\n  },\n\n  /**\n   * Sets the options that populate the <select>\n   *\n   * @param {Mixed} options\n   */\n  setOptions: function(options) {\n    var self = this;\n\n    //If a collection was passed, check if it needs fetching\n    if (options instanceof Backbone.Collection) {\n      var collection = options;\n\n      //Don't do the fetch if it's already populated\n      if (collection.length > 0) {\n        this.renderOptions(options);\n      } else {\n        collection.fetch({\n          success: function(collection) {\n            self.renderOptions(options);\n          }\n        });\n      }\n    }\n\n    //If a function was passed, run it to get the options\n    else if (_.isFunction(options)) {\n      options(function(result) {\n        self.renderOptions(result);\n      }, self);\n    }\n\n    //Otherwise, ready to go straight to renderOptions\n    else {\n      this.renderOptions(options);\n    }\n  },\n\n  /**\n   * Adds the <option> html to the DOM\n   * @param {Mixed}   Options as a simple array e.g. ['option1', 'option2']\n   *                      or as an array of objects e.g. [{val: 543, label: 'Title for object 543'}]\n   *                      or as a string of <option> HTML to insert into the <select>\n   *                      or any object\n   */\n  renderOptions: function(options) {\n    var $select = this.$el,\n        html;\n\n    html = this._getOptionsHtml(options);\n\n    //Insert options\n    $select.html(html);\n\n    //Select correct option\n    this.setValue(this.value);\n  },\n\n  _getOptionsHtml: function(options) {\n    var html;\n    //Accept string of HTML\n    if (_.isString(options)) {\n      html = options;\n    }\n\n    //Or array\n    else if (_.isArray(options)) {\n      html = this._arrayToHtml(options);\n    }\n\n    //Or Backbone collection\n    else if (options instanceof Backbone.Collection) {\n      html = this._collectionToHtml(options);\n    }\n\n    else if (_.isFunction(options)) {\n      var newOptions;\n\n      options(function(opts) {\n        newOptions = opts;\n      }, this);\n\n      html = this._getOptionsHtml(newOptions);\n    //Or any object\n    }else{\n      html = this._objectToHtml(options);\n    }\n\n    return html;\n  },\n\n  determineChange: function(event) {\n    var currentValue = this.getValue();\n    var changed = (currentValue !== this.previousValue);\n\n    if (changed) {\n      this.previousValue = currentValue;\n\n      this.trigger('change', this);\n    }\n  },\n\n  getValue: function() {\n    return this.$el.val();\n  },\n\n  setValue: function(value) {\n    this.value = value;\n    this.$el.val(value);\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$el.focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$el.blur();\n  },\n\n  /**\n   * Transforms a collection into HTML ready to use in the renderOptions method\n   * @param {Backbone.Collection}\n   * @return {String}\n   */\n  _collectionToHtml: function(collection) {\n    //Convert collection to array first\n    var array = [];\n    collection.each(function(model) {\n      array.push({ val: model.id, label: model.toString() });\n    });\n\n    //Now convert to HTML\n    var html = this._arrayToHtml(array);\n\n    return html;\n  },\n  /**\n   * Transforms an object into HTML ready to use in the renderOptions method\n   * @param {Object}\n   * @return {String}\n   */\n  _objectToHtml: function(obj) {\n    //Convert object to array first\n    var array = [];\n    for(var key in obj){\n      if( obj.hasOwnProperty( key ) ) {\n        array.push({ val: key, label: obj[key] });\n      }\n    }\n\n    //Now convert to HTML\n    var html = this._arrayToHtml(array);\n\n    return html;\n  },\n\n\n\n  /**\n   * Create the <option> HTML\n   * @param {Array}   Options as a simple array e.g. ['option1', 'option2']\n   *                      or as an array of objects e.g. [{val: 543, label: 'Title for object 543'}]\n   * @return {String} HTML\n   */\n  _arrayToHtml: function(array) {\n    var html = $();\n\n    //Generate HTML\n    _.each(array, function(option) {\n      if (_.isObject(option)) {\n        if (option.group) {\n          var optgroup = $(\"<optgroup>\")\n            .attr(\"label\",option.group)\n            .html( this._getOptionsHtml(option.options) );\n          html = html.add(optgroup);\n        } else {\n          var val = (option.val || option.val === 0) ? option.val : '';\n          html = html.add( $('<option>').val(val).text(option.label) );\n        }\n      }\n      else {\n        html = html.add( $('<option>').text(option) );\n      }\n    }, this);\n\n    return html;\n  }\n\n});\n\n/**\n * Radio editor\n *\n * Renders a <ul> with given options represented as <li> objects containing radio buttons\n *\n * Requires an 'options' value on the schema.\n *  Can be an array of options, a function that calls back with the array of options, a string of HTML\n *  or a Backbone collection. If a collection, the models must implement a toString() method\n */\nForm.editors.Radio = Form.editors.Select.extend({\n\n  tagName: 'ul',\n\n  events: {\n    'change input[type=radio]': function() {\n      this.trigger('change', this);\n    },\n    'focus input[type=radio]': function() {\n      if (this.hasFocus) return;\n      this.trigger('focus', this);\n    },\n    'blur input[type=radio]': function() {\n      if (!this.hasFocus) return;\n      var self = this;\n      setTimeout(function() {\n        if (self.$('input[type=radio]:focus')[0]) return;\n        self.trigger('blur', self);\n      }, 0);\n    }\n  },\n\n  /**\n   * Returns the template. Override for custom templates\n   *\n   * @return {Function}       Compiled template\n   */\n  getTemplate: function() {\n    return this.schema.template || this.constructor.template;\n  },\n\n  getValue: function() {\n    return this.$('input[type=radio]:checked').val();\n  },\n\n  setValue: function(value) {\n    this.value = value;\n    this.$('input[type=radio]').val([value]);\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    var checked = this.$('input[type=radio]:checked');\n    if (checked[0]) {\n      checked.focus();\n      return;\n    }\n\n    this.$('input[type=radio]').first().focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$('input[type=radio]:focus').blur();\n  },\n\n  /**\n   * Create the radio list HTML\n   * @param {Array}   Options as a simple array e.g. ['option1', 'option2']\n   *                      or as an array of objects e.g. [{val: 543, label: 'Title for object 543'}]\n   * @return {String} HTML\n   */\n  _arrayToHtml: function (array) {\n    var self = this;\n\n    var template = this.getTemplate(),\n        name = self.getName(),\n        id = self.id;\n\n    var items = _.map(array, function(option, index) {\n      var item = {\n        name: name,\n        id: id + '-' + index\n      };\n\n      if (_.isObject(option)) {\n        item.value = (option.val || option.val === 0) ? option.val : '';\n        item.label = option.label;\n        item.labelHTML = option.labelHTML;\n      } else {\n        item.value = option;\n        item.label = option;\n      }\n\n      return item;\n    });\n\n    return template({ items: items });\n  }\n\n}, {\n\n  //STATICS\n  template: _.template('\\\n    <% _.each(items, function(item) { %>\\\n      <li>\\\n        <input type=\"radio\" name=\"<%= item.name %>\" value=\"<%- item.value %>\" id=\"<%= item.id %>\" />\\\n        <label for=\"<%= item.id %>\"><% if (item.labelHTML){ %><%= item.labelHTML %><% }else{ %><%- item.label %><% } %></label>\\\n      </li>\\\n    <% }); %>\\\n  ', null, Form.templateSettings)\n\n});\n\n/**\n * Checkboxes editor\n *\n * Renders a <ul> with given options represented as <li> objects containing checkboxes\n *\n * Requires an 'options' value on the schema.\n *  Can be an array of options, a function that calls back with the array of options, a string of HTML\n *  or a Backbone collection. If a collection, the models must implement a toString() method\n */\nForm.editors.Checkboxes = Form.editors.Select.extend({\n\n  tagName: 'ul',\n\n  groupNumber: 0,\n\n  events: {\n    'click input[type=checkbox]': function() {\n      this.trigger('change', this);\n    },\n    'focus input[type=checkbox]': function() {\n      if (this.hasFocus) return;\n      this.trigger('focus', this);\n    },\n    'blur input[type=checkbox]':  function() {\n      if (!this.hasFocus) return;\n      var self = this;\n      setTimeout(function() {\n        if (self.$('input[type=checkbox]:focus')[0]) return;\n        self.trigger('blur', self);\n      }, 0);\n    }\n  },\n\n  getValue: function() {\n    var values = [];\n    var self = this;\n    this.$('input[type=checkbox]:checked').each(function() {\n      values.push(self.$(this).val());\n    });\n    return values;\n  },\n\n  setValue: function(values) {\n    if (!_.isArray(values)) values = [values];\n    this.value = values;\n    this.$('input[type=checkbox]').val(values);\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$('input[type=checkbox]').first().focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$('input[type=checkbox]:focus').blur();\n  },\n\n  /**\n   * Create the checkbox list HTML\n   * @param {Array}   Options as a simple array e.g. ['option1', 'option2']\n   *                      or as an array of objects e.g. [{val: 543, label: 'Title for object 543'}]\n   * @return {String} HTML\n   */\n  _arrayToHtml: function (array) {\n    var html = $();\n    var self = this;\n\n    _.each(array, function(option, index) {\n      var itemHtml = $('<li>');\n      if (_.isObject(option)) {\n        if (option.group) {\n          var originalId = self.id;\n          self.id += \"-\" + self.groupNumber++;\n          itemHtml = $('<fieldset class=\"group\">').append( $('<legend>').text(option.group) );\n          itemHtml = itemHtml.append( self._arrayToHtml(option.options) );\n          self.id = originalId;\n          close = false;\n        }else{\n          var val = (option.val || option.val === 0) ? option.val : '';\n          itemHtml.append( $('<input type=\"checkbox\" name=\"'+self.getName()+'\" id=\"'+self.id+'-'+index+'\" />').val(val) );\n          if (option.labelHTML){\n            itemHtml.append( $('<label for=\"'+self.id+'-'+index+'\" />').html(option.labelHTML) );\n          }\n          else {\n            itemHtml.append( $('<label for=\"'+self.id+'-'+index+'\" />').text(option.label) );\n          }\n        }\n      }\n      else {\n        itemHtml.append( $('<input type=\"checkbox\" name=\"'+self.getName()+'\" id=\"'+self.id+'-'+index+'\" />').val(option) );\n        itemHtml.append( $('<label for=\"'+self.id+'-'+index+'\" />').text(option) );\n      }\n      html = html.add(itemHtml);\n    });\n\n    return html;\n  }\n\n});\n\n/**\n * Object editor\n *\n * Creates a child form. For editing Javascript objects\n *\n * @param {Object} options\n * @param {Form} options.form                 The form this editor belongs to; used to determine the constructor for the nested form\n * @param {Object} options.schema             The schema for the object\n * @param {Object} options.schema.subSchema   The schema for the nested form\n */\nForm.editors.Object = Form.editors.Base.extend({\n  //Prevent error classes being set on the main control; they are internally on the individual fields\n  hasNestedForm: true,\n\n  initialize: function(options) {\n    //Set default value for the instance so it's not a shared object\n    this.value = {};\n\n    //Init\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    //Check required options\n    if (!this.form) throw new Error('Missing required option \"form\"');\n    if (!this.schema.subSchema) throw new Error(\"Missing required 'schema.subSchema' option for Object editor\");\n  },\n\n  render: function() {\n    //Get the constructor for creating the nested form; i.e. the same constructor as used by the parent form\n    var NestedForm = this.form.constructor;\n\n    //Create the nested form\n    this.nestedForm = new NestedForm({\n      schema: this.schema.subSchema,\n      data: this.value,\n      idPrefix: this.id + '_',\n      Field: NestedForm.NestedField\n    });\n\n    this._observeFormEvents();\n\n    this.$el.html(this.nestedForm.render().el);\n\n    if (this.hasFocus) this.trigger('blur', this);\n\n    return this;\n  },\n\n  getValue: function() {\n    if (this.nestedForm) return this.nestedForm.getValue();\n\n    return this.value;\n  },\n\n  setValue: function(value) {\n    this.value = value;\n\n    this.render();\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.nestedForm.focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.nestedForm.blur();\n  },\n\n  remove: function() {\n    this.nestedForm.remove();\n\n    Backbone.View.prototype.remove.call(this);\n  },\n\n  validate: function() {\n    var errors = _.extend({},\n      Form.editors.Base.prototype.validate.call(this),\n      this.nestedForm.validate()\n    );\n    return _.isEmpty(errors)?false:errors;\n  },\n\n  _observeFormEvents: function() {\n    if (!this.nestedForm) return;\n\n    this.nestedForm.on('all', function() {\n      // args = [\"key:change\", form, fieldEditor]\n      var args = _.toArray(arguments);\n      args[1] = this;\n      // args = [\"key:change\", this=objectEditor, fieldEditor]\n\n      this.trigger.apply(this, args);\n    }, this);\n  }\n\n});\n\n/**\n * NestedModel editor\n *\n * Creates a child form. For editing nested Backbone models\n *\n * Special options:\n *   schema.model:   Embedded model constructor\n */\nForm.editors.NestedModel = Form.editors.Object.extend({\n  initialize: function(options) {\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    if (!this.form) throw new Error('Missing required option \"form\"');\n    if (!options.schema.model) throw new Error('Missing required \"schema.model\" option for NestedModel editor');\n  },\n\n  render: function() {\n    //Get the constructor for creating the nested form; i.e. the same constructor as used by the parent form\n    var NestedForm = this.form.constructor;\n\n    var data = this.value || {},\n        key = this.key,\n        nestedModel = this.schema.model;\n\n    //Wrap the data in a model if it isn't already a model instance\n    var modelInstance = (data.constructor === nestedModel) ? data : new nestedModel(data);\n\n    this.nestedForm = new NestedForm({\n      model: modelInstance,\n      idPrefix: this.id + '_',\n      fieldTemplate: 'nestedField'\n    });\n\n    this._observeFormEvents();\n\n    //Render form\n    this.$el.html(this.nestedForm.render().el);\n\n    if (this.hasFocus) this.trigger('blur', this);\n\n    return this;\n  },\n\n  /**\n   * Update the embedded model, checking for nested validation errors and pass them up\n   * Then update the main model if all OK\n   *\n   * @return {Error|null} Validation error or null\n   */\n  commit: function() {\n    var error = this.nestedForm.commit();\n    if (error) {\n      this.$el.addClass('error');\n      return error;\n    }\n\n    return Form.editors.Object.prototype.commit.call(this);\n  }\n\n});\n\n/**\n * Date editor\n *\n * Schema options\n * @param {Number|String} [options.schema.yearStart]  First year in list. Default: 100 years ago\n * @param {Number|String} [options.schema.yearEnd]    Last year in list. Default: current year\n *\n * Config options (if not set, defaults to options stored on the main Date class)\n * @param {Boolean} [options.showMonthNames]  Use month names instead of numbers. Default: true\n * @param {String[]} [options.monthNames]     Month names. Default: Full English names\n */\nForm.editors.Date = Form.editors.Base.extend({\n\n  events: {\n    'change select':  function() {\n      this.updateHidden();\n      this.trigger('change', this);\n    },\n    'focus select':   function() {\n      if (this.hasFocus) return;\n      this.trigger('focus', this);\n    },\n    'blur select':    function() {\n      if (!this.hasFocus) return;\n      var self = this;\n      setTimeout(function() {\n        if (self.$('select:focus')[0]) return;\n        self.trigger('blur', self);\n      }, 0);\n    }\n  },\n\n  initialize: function(options) {\n    options = options || {};\n\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    var Self = Form.editors.Date,\n        today = new Date();\n\n    //Option defaults\n    this.options = _.extend({\n      monthNames: Self.monthNames,\n      showMonthNames: Self.showMonthNames\n    }, options);\n\n    //Schema defaults\n    this.schema = _.extend({\n      yearStart: today.getFullYear() - 100,\n      yearEnd: today.getFullYear()\n    }, options.schema || {});\n\n    //Cast to Date\n    if (this.value && !_.isDate(this.value)) {\n      this.value = new Date(this.value);\n    }\n\n    //Set default date\n    if (!this.value) {\n      var date = new Date();\n      date.setSeconds(0);\n      date.setMilliseconds(0);\n\n      this.value = date;\n    }\n\n    //Template\n    this.template = options.template || this.constructor.template;\n  },\n\n  render: function() {\n    var options = this.options,\n        schema = this.schema,\n        $ = Backbone.$;\n\n    var datesOptions = _.map(_.range(1, 32), function(date) {\n      return '<option value=\"'+date+'\">' + date + '</option>';\n    });\n\n    var monthsOptions = _.map(_.range(0, 12), function(month) {\n      var value = (options.showMonthNames)\n          ? options.monthNames[month]\n          : (month + 1);\n\n      return '<option value=\"'+month+'\">' + value + '</option>';\n    });\n\n    var yearRange = (schema.yearStart < schema.yearEnd)\n      ? _.range(schema.yearStart, schema.yearEnd + 1)\n      : _.range(schema.yearStart, schema.yearEnd - 1, -1);\n\n    var yearsOptions = _.map(yearRange, function(year) {\n      return '<option value=\"'+year+'\">' + year + '</option>';\n    });\n\n    //Render the selects\n    var $el = $($.trim(this.template({\n      dates: datesOptions.join(''),\n      months: monthsOptions.join(''),\n      years: yearsOptions.join('')\n    })));\n\n    //Store references to selects\n    this.$date = $el.find('[data-type=\"date\"]');\n    this.$month = $el.find('[data-type=\"month\"]');\n    this.$year = $el.find('[data-type=\"year\"]');\n\n    //Create the hidden field to store values in case POSTed to server\n    this.$hidden = $('<input type=\"hidden\" name=\"'+this.key+'\" />');\n    $el.append(this.$hidden);\n\n    //Set value on this and hidden field\n    this.setValue(this.value);\n\n    //Remove the wrapper tag\n    this.setElement($el);\n    this.$el.attr('id', this.id);\n    this.$el.attr('name', this.getName());\n\n    if (this.hasFocus) this.trigger('blur', this);\n\n    return this;\n  },\n\n  /**\n   * @return {Date}   Selected date\n   */\n  getValue: function() {\n    var year = this.$year.val(),\n        month = this.$month.val(),\n        date = this.$date.val();\n\n    if (!year || !month || !date) return null;\n\n    return new Date(year, month, date);\n  },\n\n  /**\n   * @param {Date} date\n   */\n  setValue: function(date) {\n    this.value = date;\n    this.$date.val(date.getDate());\n    this.$month.val(date.getMonth());\n    this.$year.val(date.getFullYear());\n\n    this.updateHidden();\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$('select').first().focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$('select:focus').blur();\n  },\n\n  /**\n   * Update the hidden input which is maintained for when submitting a form\n   * via a normal browser POST\n   */\n  updateHidden: function() {\n    var val = this.getValue();\n\n    if (_.isDate(val)) val = val.toISOString();\n\n    this.$hidden.val(val);\n  }\n\n}, {\n  //STATICS\n  template: _.template('\\\n    <div>\\\n      <select data-type=\"date\"><%= dates %></select>\\\n      <select data-type=\"month\"><%= months %></select>\\\n      <select data-type=\"year\"><%= years %></select>\\\n    </div>\\\n  ', null, Form.templateSettings),\n\n  //Whether to show month names instead of numbers\n  showMonthNames: true,\n\n  //Month names to use if showMonthNames is true\n  //Replace for localisation, e.g. Form.editors.Date.monthNames = ['Janvier', 'Fevrier'...]\n  monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n});\n\n/**\n * DateTime editor\n *\n * @param {Editor} [options.DateEditor]           Date editor view to use (not definition)\n * @param {Number} [options.schema.minsInterval]  Interval between minutes. Default: 15\n */\nForm.editors.DateTime = Form.editors.Base.extend({\n\n  events: {\n    'change select':  function() {\n      this.updateHidden();\n      this.trigger('change', this);\n    },\n    'focus select':   function() {\n      if (this.hasFocus) return;\n      this.trigger('focus', this);\n    },\n    'blur select':    function() {\n      if (!this.hasFocus) return;\n      var self = this;\n      setTimeout(function() {\n        if (self.$('select:focus')[0]) return;\n        self.trigger('blur', self);\n      }, 0);\n    }\n  },\n\n  initialize: function(options) {\n    options = options || {};\n\n    Form.editors.Base.prototype.initialize.call(this, options);\n\n    //Option defaults\n    this.options = _.extend({\n      DateEditor: Form.editors.DateTime.DateEditor\n    }, options);\n\n    //Schema defaults\n    this.schema = _.extend({\n      minsInterval: 15\n    }, options.schema || {});\n\n    //Create embedded date editor\n    this.dateEditor = new this.options.DateEditor(options);\n\n    this.value = this.dateEditor.value;\n\n    //Template\n    this.template = options.template || this.constructor.template;\n  },\n\n  render: function() {\n    function pad(n) {\n      return n < 10 ? '0' + n : n;\n    }\n\n    var schema = this.schema,\n        $ = Backbone.$;\n\n    //Create options\n    var hoursOptions = _.map(_.range(0, 24), function(hour) {\n      return '<option value=\"'+hour+'\">' + pad(hour) + '</option>';\n    });\n\n    var minsOptions = _.map(_.range(0, 60, schema.minsInterval), function(min) {\n      return '<option value=\"'+min+'\">' + pad(min) + '</option>';\n    });\n\n    //Render time selects\n    var $el = $($.trim(this.template({\n      hours: hoursOptions.join(),\n      mins: minsOptions.join()\n    })));\n\n    //Include the date editor\n    $el.find('[data-date]').append(this.dateEditor.render().el);\n\n    //Store references to selects\n    this.$hour = $el.find('select[data-type=\"hour\"]');\n    this.$min = $el.find('select[data-type=\"min\"]');\n\n    //Get the hidden date field to store values in case POSTed to server\n    this.$hidden = $el.find('input[type=\"hidden\"]');\n\n    //Set time\n    this.setValue(this.value);\n\n    this.setElement($el);\n    this.$el.attr('id', this.id);\n    this.$el.attr('name', this.getName());\n\n    if (this.hasFocus) this.trigger('blur', this);\n\n    return this;\n  },\n\n  /**\n   * @return {Date}   Selected datetime\n   */\n  getValue: function() {\n    var date = this.dateEditor.getValue();\n\n    var hour = this.$hour.val(),\n        min = this.$min.val();\n\n    if (!date || !hour || !min) return null;\n\n    date.setHours(hour);\n    date.setMinutes(min);\n\n    return date;\n  },\n\n  /**\n   * @param {Date}\n   */\n  setValue: function(date) {\n    if (!_.isDate(date)) date = new Date(date);\n    this.value = date;\n    this.dateEditor.setValue(date);\n\n    this.$hour.val(date.getHours());\n    this.$min.val(date.getMinutes());\n\n    this.updateHidden();\n  },\n\n  focus: function() {\n    if (this.hasFocus) return;\n\n    this.$('select').first().focus();\n  },\n\n  blur: function() {\n    if (!this.hasFocus) return;\n\n    this.$('select:focus').blur();\n  },\n\n  /**\n   * Update the hidden input which is maintained for when submitting a form\n   * via a normal browser POST\n   */\n  updateHidden: function() {\n    var val = this.getValue();\n    if (_.isDate(val)) val = val.toISOString();\n\n    this.$hidden.val(val);\n  },\n\n  /**\n   * Remove the Date editor before removing self\n   */\n  remove: function() {\n    this.dateEditor.remove();\n\n    Form.editors.Base.prototype.remove.call(this);\n  }\n\n}, {\n  //STATICS\n  template: _.template('\\\n    <div class=\"bbf-datetime\">\\\n      <div class=\"bbf-date-container\" data-date></div>\\\n      <select data-type=\"hour\"><%= hours %></select>\\\n      :\\\n      <select data-type=\"min\"><%= mins %></select>\\\n    </div>\\\n  ', null, Form.templateSettings),\n\n  //The date editor to use (constructor function, not instance)\n  DateEditor: Form.editors.Date\n});\n\n\n\n  //Metadata\n  Form.VERSION = '0.14.0';\n\n  //Exports\n  Backbone.Form = Form;\n\n  return Form;\n});\n\n","//\n// backbone.trackit - 0.1.0\n// The MIT License\n// Copyright (c) 2013 The New York Times, CMS Group, Matthew DeLambo <delambo@gmail.com>\n//\n(function() {\n\n\t// Unsaved Record Keeping\n\t// ----------------------\n\n\t// Collection of all models in an app that have unsaved changes.\n\tvar unsavedModels = [];\n\n\t// If the given model has unsaved changes then add it to\n\t// the `unsavedModels` collection, otherwise remove it.\n\tvar updateUnsavedModels = function(model) {\n\t\tif (!_.isEmpty(model._unsavedChanges)) {\n\t\t\tif (!_.findWhere(unsavedModels, {cid:model.cid})) unsavedModels.push(model);\n\t\t} else {\n\t\t\tunsavedModels = _.filter(unsavedModels, function(m) { return model.cid != m.cid; });\n\t\t}\n\t};\n\n\t// Unload Handlers\n\t// ---------------\n\n\t// Helper which returns a prompt message for an unload handler.\n\t// Uses the given function name (one of the callback names\n\t// from the `model.unsaved` configuration hash) to evaluate\n\t// whether a prompt is needed/returned.\n\tvar getPrompt = function(fnName) {\n\t\tvar prompt, args = _.rest(arguments);\n\t\t// Evaluate and return a boolean result. The given `fn` may be a\n\t\t// boolean value, a function, or the name of a function on the model.\n\t\tvar evaluateModelFn = function(model, fn) {\n\t\t\tif (_.isBoolean(fn)) return fn;\n\t\t\treturn (_.isString(fn) ? model[fn] : fn).apply(model, args);\n\t\t};\n\t\t_.each(unsavedModels, function(model) {\n\t\t\tif (!prompt && evaluateModelFn(model, model._unsavedConfig[fnName]))\n\t\t\t\tprompt = model._unsavedConfig.prompt;\n\t\t});\n\t\treturn prompt;\n\t};\n\n\t// Wrap Backbone.History.navigate so that in-app routing\n\t// (`router.navigate('/path')`) can be intercepted with a\n\t// confirmation if there are any unsaved models.\n\tBackbone.History.prototype.navigate = _.wrap(Backbone.History.prototype.navigate, function(oldNav, fragment, options) {\n\t\tvar prompt = getPrompt('unloadRouterPrompt', fragment, options);\n\t\tif (prompt) {\n\t\t\tif (confirm(prompt + ' \\n\\nAre you sure you want to leave this page?')) {\n\t\t\t\toldNav.call(this, fragment, options);\n\t\t\t}\n\t\t} else {\n\t\t\toldNav.call(this, fragment, options);\n\t\t}\n\t});\n\n\t// Create a browser unload handler which is triggered\n\t// on the refresh, back, or forward button.\n\twindow.onbeforeunload = function(e) {\n\t\treturn getPrompt('unloadWindowPrompt', e);\n\t};\n\n\t// Backbone.Model API\n\t// ------------------\n\n\t_.extend(Backbone.Model.prototype, {\n\n\t\tunsaved: {},\n\t\t_trackingChanges: false,\n\t\t_originalAttrs: {},\n\t\t_unsavedChanges: {},\n\n\t\t// Opt in to tracking attribute changes\n\t\t// between saves.\n\t\tstartTracking: function() {\n\t\t\tthis._unsavedConfig = _.extend({}, {\n\t\t\t\tprompt: 'You have unsaved changes!',\n\t\t\t\tunloadRouterPrompt: false,\n\t\t\t\tunloadWindowPrompt: false\n\t\t\t}, this.unsaved || {});\n\t\t\tthis._trackingChanges = true;\n\t\t\tthis._resetTracking();\n\t\t\tthis._triggerUnsavedChanges();\n\t\t\treturn this;\n\t\t},\n\n\t\t// Resets the default tracking values\n\t\t// and stops tracking attribute changes.\n\t\tstopTracking: function() {\n\t\t\tthis._trackingChanges = false;\n\t\t\tthis._originalAttrs = {};\n\t\t\tthis._unsavedChanges = {};\n\t\t\tthis._triggerUnsavedChanges();\n\t\t\treturn this;\n\t\t},\n\n\t\t// Gets rid of accrued changes and\n\t\t// resets state.\n\t\trestartTracking: function() {\n\t\t\tthis._resetTracking();\n\t\t\tthis._triggerUnsavedChanges();\n\t\t\treturn this;\n\t\t},\n\n\t\t// Restores this model's attributes to\n\t\t// their original values since tracking\n\t\t// started, the last save, or last restart.\n\t\tresetAttributes: function() {\n\t\t\tif (!this._trackingChanges) return;\n\t\t\tthis.attributes = this._originalAttrs;\n\t\t\tthis._resetTracking();\n\t\t\tthis._triggerUnsavedChanges();\n\t\t\treturn this;\n\t\t},\n\n\t\t// Symmetric to Backbone's `model.changedAttributes()`,\n\t\t// except that this returns a hash of the model's attributes that\n\t\t// have changed since the last save, or `false` if there are none.\n\t\t// Like `changedAttributes`, an external attributes hash can be\n\t\t// passed in, returning the attributes in that hash which differ\n\t\t// from the model.\n\t\tunsavedAttributes: function(attrs) {\n\t\t\tif (!attrs) return _.isEmpty(this._unsavedChanges) ? false : _.clone(this._unsavedChanges);\n\t\t\tvar val, changed = false, old = this._unsavedChanges;\n\t\t\tfor (var attr in attrs) {\n\t\t\t\tif (_.isEqual(old[attr], (val = attrs[attr]))) continue;\n\t\t\t\t(changed || (changed = {}))[attr] = val;\n\t\t\t}\n\t\t\treturn changed;\n\t\t},\n\n\t\t_resetTracking: function() {\n\t\t\tthis._originalAttrs = _.clone(this.attributes);\n\t\t\tthis._unsavedChanges = {};\n\t\t},\n\n\t\t// Trigger an `unsavedChanges` event on this model,\n\t\t// supplying the result of whether there are unsaved\n\t\t// changes and a changed attributes hash.\n\t\t_triggerUnsavedChanges: function() {\n\t\t\tthis.trigger('unsavedChanges', !_.isEmpty(this._unsavedChanges), _.clone(this._unsavedChanges));\n\t\t\tif (this.unsaved) updateUnsavedModels(this);\n\t\t}\n\t});\n\n\t// Wrap `model.set()` and update the internal\n\t// unsaved changes record keeping.\n\tBackbone.Model.prototype.set = _.wrap(Backbone.Model.prototype.set, function(oldSet, key, val, options) {\n\t\tvar attrs, ret;\n\t\tif (key == null) return this;\n\t\t// Handle both `\"key\", value` and `{key: value}` -style arguments.\n\t\tif (typeof key === 'object') {\n\t\t\tattrs = key;\n\t\t\toptions = val;\n\t\t} else {\n\t\t\t(attrs = {})[key] = val;\n\t\t}\n\t\toptions || (options = {});\n\n\t\t// Delegate to Backbone's set.\n\t\tret = oldSet.call(this, attrs, options);\n\n\t\tif (this._trackingChanges && !options.silent) {\n\t\t\t_.each(attrs, _.bind(function(val, key) {\n\t\t\t\tif (_.isEqual(this._originalAttrs[key], val))\n\t\t\t\t\tdelete this._unsavedChanges[key];\n\t\t\t\telse\n\t\t\t\t\tthis._unsavedChanges[key] = val;\n\t\t\t}, this));\n\t\t\tthis._triggerUnsavedChanges();\n\t\t}\n\t\treturn ret;\n\t});\n\n\t// Intercept `model.save()` and reset tracking/unsaved\n\t// changes if it was successful.\n\tBackbone.sync = _.wrap(Backbone.sync, function(oldSync, method, model, options) {\n\t\toptions || (options = {});\n\n\t\tif (method == 'update') {\n\t\t\toptions.success = _.wrap(options.success, _.bind(function(oldSuccess, data, textStatus, jqXHR) {\n\t\t\t\tvar ret;\n\t\t\t\tif (oldSuccess) ret = oldSuccess.call(this, data, textStatus, jqXHR);\n\t\t\t\tif (model._trackingChanges) {\n\t\t\t\t\tmodel._resetTracking();\n\t\t\t\t\tmodel._triggerUnsavedChanges();\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}, this));\n\t\t}\n\t\treturn oldSync(method, model, options);\n\t});\n\n})();\ndefine(\"../vendor/backbone.trackit\", function(){});\n\n","/**\n * Image object model for use in various models for the 'image' attribute\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/Image',[], function() {\n\n\treturn Backbone.Model.extend( {\n\n\t\tdefaults: {\n\t\t\tenabled: 'no',\n\t\t\tid: '',\n\t\t\tsize: 'full',\n\t\t\tsrc: '',\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.startTracking();\n\t\t},\n\n\t} );\n} );\n\n","/**\n * Model relationships mixin\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/_Relationships',[], function() {\n\n\treturn {\n\n\t\t/**\n\t\t * Default relationship settings object\n\t\t * @type  {Object}\n\t\t */\n\t\trelationship_defaults: {\n\t\t\tparent: {},\n\t\t\tchildren: {},\n\t\t},\n\n\t\t/**\n\t\t * Relationship settings object\n\t\t * Should be overriden in the model\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {},\n\n\t\t/**\n\t\t * Initialize all parent and child relationships\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinit_relationships: function( options ) {\n\n\t\t\tvar rels = this.get_relationships();\n\n\t\t\t// initialize parent relaxtionships\n\t\t\t// useful when adding a model to ensure parent is initialized\n\t\t\tif ( rels.parent && options && options.parent ) {\n\t\t\t\tthis.set_parent( options.parent );\n\t\t\t}\n\n\t\t\t// initialize all children relationships\n\t\t\t_.each( rels.children, function( child_data, child_key ) {\n\n\t\t\t\tif ( ! child_data.conditional || true === child_data.conditional( this ) ) {\n\n\t\t\t\t\tvar child_val = this.get( child_key ),\n\t\t\t\t\t\tchild;\n\n\t\t\t\t\tif ( child_data.lookup ) {\n\t\t\t\t\t\tchild = child_data.lookup( child_val );\n\t\t\t\t\t} else if ( 'model' === child_data.type ) {\n\t\t\t\t\t\tchild = window.llms_builder.construct.get_model( child_data.class, child_val );\n\t\t\t\t\t} else if ( 'collection' === child_data.type ) {\n\t\t\t\t\t\tchild = window.llms_builder.construct.get_collection( child_data.class, child_val );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set( child_key, child );\n\n\t\t\t\t\t// if the child defines a parent, save a reference to the parent on the child\n\t\t\t\t\tif ( 'model' === child_data.type ) {\n\t\t\t\t\t\tthis._maybe_set_parent_reference( child );\n\n\t\t\t\t\t// save directly to each model in the collection\n\t\t\t\t\t} else if ( 'collection' === child_data.type ) {\n\n\t\t\t\t\t\tchild.parent = this;\n\t\t\t\t\t\tchild.each( function( child_model ) {\n\n\t\t\t\t\t\t\tthis._maybe_set_parent_reference( child_model );\n\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the model's parent (if set)\n\t\t * @return   obj|false\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent: function() {\n\n\t\t\tvar rels = this.get_relationships();\n\n\t\t\tif ( rels.parent ) {\n\t\t\t\treturn rels.parent.reference;\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve relationships for the model\n\t\t * Extends with defaults\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_relationships: function() {\n\n\t\t\treturn $.extend( true, this.relationships, this.relationship_defaults );\n\n\t\t},\n\n\t\t/**\n\t\t * Set the parent reference for the given model\n\t\t * @param    obj   obj   parent model obj\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tset_parent: function( obj ) {\n\t\t\tthis.relationships.parent.reference = obj;\n\t\t},\n\n\t\t/**\n\t\t * Set up the parent relationships for qualifying children during relationship initialization\n\t\t * @param    obj   model  child model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_maybe_set_parent_reference: function( model ) {\n\n\t\t\tif ( ! model || ! model.get_relationships ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar rels = model.get_relationships();\n\t\t\tif ( rels.parent && rels.parent.model === this.get( 'type' ) ) {\n\t\t\t\tmodel.set_parent( this );\n\t\t\t}\n\n\t\t},\n\n\t};\n\n} );\n\n","/**\n * Quiz Question Choice\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/QuestionChoice',[ 'Models/Image', 'Models/_Relationships' ], function( Image, Relationships ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\t/**\n\t\t * Model relationships\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {\n\t\t\tparent: {\n\t\t\t\tmodel: 'llms_question',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tchoice: {\n\t\t\t\t\tconditional: function( model ) {\n\t\t\t\t\t\treturn ( 'image' === model.get( 'choice_type' ) );\n\t\t\t\t\t},\n\t\t\t\t\tclass: 'Image',\n\t\t\t\t\tmodel: 'image',\n\t\t\t\t\ttype: 'model',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * Model defaults\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\tchoice: '',\n\t\t\t\tchoice_type: 'text',\n\t\t\t\tcorrect: false,\n\t\t\t\tmarker: 'A',\n\t\t\t\tquestion_id: '',\n\t\t\t\ttype: 'choice',\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Initializer\n\t\t * @param    obj   data     object of model attributes\n\t\t * @param    obj   options  additional options\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data, options ) {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships( options );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the choice's parent question\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent: function() {\n\t\t\treturn this.collection.parent;\n\t\t},\n\n\t\t/**\n\t\t * Determine if \"selection\" is enabled for the question type\n\t\t * Choice type questions are selectable by reorder type questions are not but still use choices\n\t\t * @return   {Boolean}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tis_selectable: function() {\n\t\t\treturn this.get_parent().get( 'question_type' ).get_choice_selectable();\n\t\t},\n\n\t}, Relationships ) );\n\n} );\n\n","/**\n * Question Choice Collection\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Collections/QuestionChoices',[ 'Models/QuestionChoice' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\tinitialize: function() {\n\n\t\t\t// reorder called by QuestionList view when sortable drops occur\n\t\t\tthis.on( 'reorder', this.update_order );\n\n\t\t\t// when a choice is added or removed, update order\n\t\t\tthis.on( 'add', this.update_order );\n\t\t\tthis.on( 'remove', this.update_order );\n\n\t\t\t// when a choice is added or remove, ensure min/max correct answers exist\n\t\t\tthis.on( 'add', this.update_correct );\n\t\t\tthis.on( 'remove', this.update_correct );\n\n\t\t\t// when a choice is toggled, ensure min/max correct exist\n\t\t\tthis.on( 'correct-update', this.update_correct );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the number of correct choices in the collection\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcount_correct: function() {\n\n\t\t\treturn _.size( this.get_correct() );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the collection reduced to only correct choices\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_correct: function() {\n\t\t\treturn this.filter( function( choice ) {\n\t\t\t\treturn choice.get( 'correct' );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Ensure min/max correct choices exist in the collection based on the question's settings\n\t\t * @param    obj      choice  model of the choice that was toggled\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_correct: function( choice ) {\n\n\t\t\tif ( ! this.parent.get( 'question_type' ).get_choice_selectable() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar siblings = this.without( choice ), // exclude the toggled choice from loops\n\t\t\t\tquestion = this.parent;\n\n\t\t\t// if multiple choices aren't enabled turn all other choices to incorrect\n\t\t\tif ( 'no' === question.get( 'multi_choices' ) ) {\n\t\t\t\t_.each( siblings, function( model ) {\n\t\t\t\t\tmodel.set( 'correct', false );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// if we don't have a single corret answer & the question has points, set one\n\t\t\t// allows users to create quizzes / questions with no points and therefore no correct answers are allowed\n\t\t\tif ( 0 === this.count_correct() && question.get( 'points' ) > 0 ) {\n\t\t\t\tvar models = 1 === this.size() ? this.models : siblings;\n\t\t\t\t_.first( models ).set( 'correct', true );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Update the marker attr of each choice in the list to reflect the order of the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_order: function() {\n\n\t\t\tvar self = this,\n\t\t\t\tquestion = this.parent;\n\n\t\t\tthis.each( function( choice ) {\n\t\t\t\tchoice.set( 'marker', question.get( 'question_type' ).get_choice_markers()[ self.indexOf( choice ) ] );\n\t\t\t} );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Quiz Question Type\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/QuestionType',[], function() {\n\n\treturn Backbone.Model.extend( {\n\n\t\t/**\n\t\t * Get model default attributes\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tchoices: false,\n\t\t\t\tclarifications: true,\n\t\t\t\tdefault_choices: [],\n\t\t\t\tdescription: true,\n\t\t\t\ticon: 'question',\n\t\t\t\tid: 'generic',\n\t\t\t\timage: true,\n\t\t\t\tkeywords: [],\n\t\t\t\tname: 'Generic',\n\t\t\t\tplaceholder: '',\n\t\t\t\tpoints: true,\n\t\t\t\tvideo: true,\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Retrieve an array of keywords for the question type\n\t\t * Used for filtering questions by search term in the quiz builder\n\t\t * @return   array\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_keywords: function() {\n\n\t\t\tvar name = this.get( 'name' ),\n\t\t\t\twords = [ name ];\n\n\t\t\treturn words.concat( this.get( 'keywords' ) ).concat( name.split( ' ' ) );\n\n\t\t},\n\n\t\t/**\n\t\t * Get marker array for the question choices\n\t\t * @return   array\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_choice_markers: function() {\n\n\t\t\treturn this._get_choice_option( 'markers' );\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if the question's choices are selectable\n\t\t * @return   bool\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_choice_selectable: function() {\n\n\t\t\treturn this._get_choice_option( 'selectable' );\n\n\t\t},\n\n\t\t/**\n\t\t * Get the choice type (text,image)\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_choice_type: function() {\n\n\t\t\treturn this._get_choice_option( 'type' );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve defined min. choices\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_min_choices: function() {\n\n\t\t\treturn this._get_choice_option( 'min' );\n\n\t\t},\n\n\t\t/**\n\t\t * Get type-defined max choices\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_max_choices: function() {\n\n\t\t\treturn this._get_choice_option( 'max' );\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if multi-choice selection is enabled\n\t\t * @return   bool\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_multi_choices: function() {\n\n\t\t\tvar choices = this.get( 'choices' );\n\n\t\t\tif ( ! choices  ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this._get_choice_option( 'multi' );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve data from the type's \"choices\" attribute\n\t\t * Allows quick handling of types with no choice definitions w/o additional checks\n\t\t * @param    string   option  name of the choice option to retrieve\n\t\t * @return   mixed\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_get_choice_option: function( option ) {\n\n\t\t\tvar choices = this.get( 'choices' );\n\n\t\t\tif ( ! choices || ! choices[ option ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn choices[ option ];\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Quiz Question\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/Question',[\n\t\t'Models/Image',\n\t\t'Collections/Questions',\n\t\t'Collections/QuestionChoices',\n\t\t'Models/QuestionType',\n\t\t'Models/_Relationships'\n\t], function(\n\t\tImage,\n\t\tQuestions,\n\t\tQuestionChoices,\n\t\tQuestionType,\n\t\tRelationships\n\t) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\t/**\n\t\t * Model relationships\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {\n\t\t\tparent: {\n\t\t\t\tmodel: 'llms_quiz',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tchoices: {\n\t\t\t\t\tclass: 'QuestionChoices',\n\t\t\t\t\tmodel: 'choice',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t\timage: {\n\t\t\t\t\tclass: 'Image',\n\t\t\t\t\tmodel: 'image',\n\t\t\t\t\ttype: 'model',\n\t\t\t\t},\n\t\t\t\tquestions: {\n\t\t\t\t\tclass: 'Questions',\n\t\t\t\t\tconditional: function( model ) {\n\t\t\t\t\t\tvar type = model.get( 'question_type' ),\n\t\t\t\t\t\t\ttype_id = _.isString( type ) ? type : type.get( 'id' );\n\t\t\t\t\t\treturn ( 'group' === type_id );\n\t\t\t\t\t},\n\t\t\t\t\tmodel: 'llms_question',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t\tquestion_type: {\n\t\t\t\t\tclass: 'QuestionType',\n\t\t\t\t\tlookup: function( val ) {\n\t\t\t\t\t\tif ( _.isString( val ) ) {\n\t\t\t\t\t\t\treturn window.llms_builder.questions.get( val );\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t},\n\t\t\t\t\tmodel: 'question_type',\n\t\t\t\t\ttype: 'model',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Model defaults\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\tchoices: [],\n\t\t\t\tcontent: '',\n\t\t\t\tdescription_enabled: 'no',\n\t\t\t\timage: {},\n\t\t\t\tmulti_choices: 'no',\n\t\t\t\tmenu_order: 1,\n\t\t\t\tpoints: 1,\n\t\t\t\tquestion_type: 'generic',\n\t\t\t\tquestions: [], // for question groups\n\t\t\t\tparent_id: '',\n\t\t\t\ttitle: '',\n\t\t\t\ttype: 'llms_question',\n\t\t\t\tvideo_enabled: 'no',\n\t\t\t\tvideo_src: '',\n\n\t\t\t\t_expanded: false,\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Initializer\n\t\t * @param    obj   data     object of data for the model\n\t\t * @param    obj   options  additional options\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data, options ) {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships( options );\n\n\t\t\tif ( false !== this.get( 'question_type' ).choices ) {\n\n\t\t\t\tthis._ensure_min_choices();\n\n\t\t\t\t// when a choice is removed, maybe add back some defaults so we always have the minimum\n\t\t\t\tthis.listenTo( this.get( 'choices' ), 'remove', function() {\n\t\t\t\t\t// new itmes are added at index 0 when there's only 1 item in the collection, not sure why exactly...\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\tself._ensure_min_choices();\n\t\t\t\t\t}, 0 );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\t// ensure question types that don't support points don't record default 1 point in database\n\t\t\tif ( ! this.get( 'question_type' ).get( 'points' ) ) {\n\t\t\t\tthis.set( 'points', 0 );\n\t\t\t}\n\n\t\t\t_.delay( function( self ) {\n\t\t\t\tself.on( 'change:points', self.get_parent().update_points, self.get_parent() );\n\t\t\t}, 1, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Add a new question choice\n\t\t * @param    obj   data     object of choice data\n\t\t * @param    obj   options  additional options\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_choice: function( data, options ) {\n\n\t\t\tvar max = this.get( 'question_type' ).get_max_choices();\n\t\t\tif ( this.get( 'choices' ).size() >= max ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata = data || {};\n\t\t\toptions = options || {};\n\n\t\t\tdata.choice_type = this.get( 'question_type' ).get_choice_type();\n\t\t\tdata.question_id = this.get( 'id' );\n\t\t\toptions.parent = this;\n\n\t\t\tvar choice = this.get( 'choices' ).add( data, options );\n\n\t\t\tBackbone.pubSub.trigger( 'question-add-choice', choice, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Collapse question_type attribute during full syncs to save to database\n\t\t * Not needed because question types cannot be adjusted after question creation\n\t\t * Called from sync controller\n\t\t * @param    obj      atts       flat object of attributes to be saved to db\n\t\t * @param    string   sync_type  full or partial\n\t\t *                                 full indicates a force resync or that the model isn't persisted yet\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tbefore_save: function( atts, sync_type  ) {\n\t\t\tif ( 'full' === sync_type ) {\n\t\t\t\tatts.question_type = this.get( 'question_type' ).get( 'id' );\n\t\t\t}\n\t\t\treturn atts;\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the model's parent (if set)\n\t\t * @return   obj|false\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent: function() {\n\n\t\t\tvar rels = this.get_relationships();\n\n\t\t\tif ( rels.parent ) {\n\t\t\t\tif ( this.collection && this.collection.parent ) {\n\t\t\t\t\treturn this.collection.parent;\n\t\t\t\t} else if ( rels.parent.reference ) {\n\t\t\t\t\treturn rels.parent.reference;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\t/**\n\t\t * Gets the index of the question within it's parent\n\t\t * Question numbers skip content elements\n\t\t * & content elements skip questions\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_type_index: function() {\n\n\t\t\t// current models type, used to check the predicate in the filter function below\n\t\t\tvar curr_type = this.get( 'question_type' ).get( 'id' ),\n\t\t\t\tquestions;\n\n\t\t\tquestions = this.collection.filter( function( question ) {\n\n\t\t\t\tvar type = question.get( 'question_type' ).get( 'id' );\n\n\t\t\t\t// if current model is not content, return all non-content questions\n\t\t\t\tif ( curr_type !== 'content' ) {\n\t\t\t\t\treturn ( 'content' !== type );\n\t\t\t\t}\n\n\t\t\t\t// current model is content, return only content questions\n\t\t\t\treturn 'content' === type;\n\n\t\t\t} );\n\n\t\t\treturn questions.indexOf( this );\n\n\t\t},\n\n\t\t/**\n\t\t * Gets iterator for the given type\n\t\t * Questions use numbers and content uses alphabet\n\t\t * @return   mixed\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_type_iterator: function() {\n\n\t\t\tvar index = this.get_type_index();\n\n\t\t\tif ( -1 === index ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif ( 'content' === this.get( 'question_type' ).get( 'id' ) ) {\n\t\t\t\tvar alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split( '' );\n\t\t\t\treturn alphabet[ index ];\n\t\t\t}\n\n\t\t\treturn index + 1;\n\n\t\t},\n\n\n\t\tget_qid: function() {\n\n\t\t\tvar parent = this.get_parent_question(),\n\t\t\t\tprefix = '';\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tprefix = parent.get_qid() + '.';\n\n\t\t\t}\n\n\t\t\t// return short_id + this.get_type_iterator();\n\t\t\treturn prefix + this.get_type_iterator();\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the parent question (if the question is in a question group)\n\t\t * @return   obj|false\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent_question: function() {\n\n\t\t\tif ( this.is_in_group() ) {\n\n\t\t\t\treturn this.collection.parent;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the parent quiz\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_parent_quiz: function() {\n\t\t\treturn this.get_parent();\n\t\t},\n\n\t\t/**\n\t\t * Points getter\n\t\t * ensures that 0 is always returned if the question type doesn't support points\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_points: function() {\n\n\t\t\tif ( ! this.get( 'question_type' ).get( 'points' ) ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn this.get( 'points' );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the questions percentage value within the quiz\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_points_percentage: function() {\n\n\t\t\tvar total = this.get_parent().get( '_points' ),\n\t\t\t\tpoints = this.get( 'points' );\n\n\t\t\tif ( 0 === total ) {\n\t\t\t\treturn '0%';\n\t\t\t}\n\n\t\t\treturn ( ( points / total ) * 100 ).toFixed( 2 ) + '%';\n\n\t\t},\n\n\t\t/**\n\t\t * Deterine if the question belongs to a question group\n\t\t * @return   {Boolean}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tis_in_group: function() {\n\n\t\t\treturn ( 'question' === this.collection.parent.get( 'type' ) );\n\n\t\t},\n\n\t\t_ensure_min_choices: function() {\n\n\t\t\tvar choices = this.get( 'choices' );\n\t\t\twhile ( choices.size() < this.get( 'question_type' ).get_min_choices() ) {\n\t\t\t\tthis.add_choice();\n\t\t\t}\n\n\t\t},\n\n\t}, Relationships ) );\n\n} );\n\n","/**\n * Questions Collection\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Collections/Questions',[ 'Models/Question' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\t/**\n\t\t * Initialize\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\t// reorder called by QuestionList view when sortable drops occur\n\t\t\tthis.on( 'reorder', this.update_order );\n\n\t\t\t// when a question is added or removed, update order\n\t\t\tthis.on( 'add', this.update_order );\n\t\t\tthis.on( 'remove', this.update_order );\n\n\t\t\tthis.on( 'add', this.update_parent );\n\n\t\t},\n\n\t\t/**\n\t\t * Update the order attr of each question in the list to reflect the order of the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_order: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.each( function( question ) {\n\n\t\t\t\tquestion.set( 'menu_order', self.indexOf( question ) + 1 );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * When adding a question to a question list, update the question's parent\n\t\t * Will ensure that questions moved into and out of groups always have the corerct parent_id\n\t\t * @param    obj   model  instance of the question model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_parent: function( model ) {\n\n\t\t\tmodel.set( 'parent_id', this.parent.get( 'id' ) );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Quiz Model\n * @since    3.16.0\n * @version  3.16.3\n */\ndefine( 'Models/Quiz',[ 'Collections/Questions', 'Models/Lesson', 'Models/Question', 'Models/_Relationships' ], function( Questions, Lesson, Question, Relationships ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\t/**\n\t\t * model relationships\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {\n\t\t\tparent: {\n\t\t\t\tmodel: 'lesson',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tquestions: {\n\t\t\t\t\tclass: 'Questions',\n\t\t\t\t\tmodel: 'llms_question',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * New lesson defaults\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\ttitle: LLMS.l10n.translate( 'New Quiz' ),\n\t\t\t\ttype: 'llms_quiz',\n\t\t\t\tlesson_id: '',\n\n\t\t\t\tstatus: 'draft',\n\n\t\t\t\t// editable fields\n\t\t\t\tcontent: '',\n\t\t\t\tallowed_attempts: 5,\n\t\t\t\tlimit_attempts: 'no',\n\t\t\t\tlimit_time: 'no',\n\t\t\t\tpassing_percent: 65,\n\t\t\t\trandom_answers: 'no',\n\t\t\t\ttime_limit: 30,\n\t\t\t\tshow_correct_answer: 'no',\n\n\t\t\t\tquestions: [],\n\n\t\t\t\t// calculated\n\t\t\t\t_points: 0,\n\n\t\t\t\t// display\n\t\t\t\t_show_settings: false,\n\n\t\t\t};\n\n\t\t},\n\n\t\t/**\n\t\t * Initializer\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.3\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships();\n\n\t\t\tthis.listenTo( this.get( 'questions' ), 'add', this.update_points );\n\t\t\tthis.listenTo( this.get( 'questions' ), 'remove', this.update_points );\n\n\t\t\tthis.set( '_points', this.get_total_points() );\n\n\t\t\t// when a quiz is published, ensure the parent lesson is marked as \"Enabled\" for quizzing\n\t\t\tthis.on( 'change:status', function() {\n\t\t\t\tif ( 'publish' === this.get( 'status' ) ) {\n\t\t\t\t\tthis.get_parent().set( 'quiz_enabled', 'yes' );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Add a new question to the quiz\n\t\t * @param    obj   data   question data\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_question: function( data ) {\n\n\t\t\tdata.parent_id = this.get( 'id' );\n\t\t\tvar question = this.get( 'questions' ).add( data, {\n\t\t\t\tparent: this,\n\t\t\t} );\n\t\t\tBackbone.pubSub.trigger( 'quiz-add-question', question, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the quiz's total points\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_total_points: function() {\n\n\t\t\tvar points = 0;\n\n\t\t\tthis.get( 'questions' ).each( function( question ) {\n\t\t\t\tpoints += question.get_points();\n\t\t\t} );\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t/**\n\t\t * Update total number of points calculated property\n\t\t * @return   int\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_points: function() {\n\n\t\t\tthis.set( '_points', this.get_total_points() );\n\n\t\t},\n\n\t}, Relationships ) );\n\n} );\n\n","define( 'Models/_Utilities',[], function() {\n\n\treturn {\n\n\t\t/**\n\t\t * Retrieve the edit post link for the current model\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_edit_post_link: function() {\n\n\t\t\tif ( this.has_temp_id() ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn window.llms_builder.admin_url + 'post.php?post=' + this.get( 'id' ) + '&action=edit';\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if the model has a temporary ID\n\t\t * @return   {Boolean}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\thas_temp_id: function() {\n\n\t\t\treturn ( ! _.isNumber( this.get( 'id' ) ) && 0 === this.get( 'id' ).indexOf( 'temp_' ) );\n\n\t\t}\n\n\t};\n\n} );\n\n","/**\n * Lesson Model\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Models/Lesson',[ 'Models/Quiz', 'Models/_Relationships', 'Models/_Utilities' ], function( Quiz, Relationships, Utilities ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\t/**\n\t\t * Model relationships\n\t\t * @type  {Object}\n\t\t */\n\t\trelationships: {\n\t\t\tparents: {\n\t\t\t\tmodel: 'lesson',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tquiz: {\n\t\t\t\t\tclass: 'Quiz',\n\t\t\t\t\tconditional: function( model ) {\n\t\t\t\t\t\t// if quiz is enabled OR not enabled but we have some quiz data as an obj\n\t\t\t\t\t\treturn ( 'yes' === model.get( 'quiz_enabled' ) || ! _.isEmpty( model.get( 'quiz' ) ) );\n\t\t\t\t\t},\n\t\t\t\t\tmodel: 'llms_quiz',\n\t\t\t\t\ttype: 'model',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * New lesson defaults\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\ttitle: LLMS.l10n.translate( 'New Lesson' ),\n\t\t\t\ttype: 'lesson',\n\t\t\t\torder: this.collection ? this.collection.length + 1 : 1,\n\t\t\t\tparent_course: window.llms_builder.course.id,\n\t\t\t\tparent_section: '',\n\n\t\t\t\t// urls\n\t\t\t\tedit_url: '',\n\t\t\t\tview_url: '',\n\n\t\t\t\t// editable fields\n\t\t\t\tcontent: '',\n\t\t\t\taudio_embed: '',\n\t\t\t\tvideo_embed: '',\n\t\t\t\tfree_lesson: '',\n\n\t\t\t\t// other fields\n\t\t\t\tquiz: {}, // quiz model/data\n\t\t\t\tquiz_enabled: 'no',\n\n\t\t\t\t_forceSync: false,\n\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Initializer\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships();\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve a reference to the parent course of the lesson\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_course: function() {\n\t\t\treturn this.get_parent().get_parent();\n\t\t},\n\n\t\t/**\n\t\t * Add a new quiz to the lesson\n\t\t * @param    obj   data   object of quiz data used to construct a new quiz model\n\t\t * @return   obj          model for the created quiz\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_quiz: function( data ) {\n\n\t\t\tdata = data || {};\n\n\t\t\tdata.lesson_id = this.id;\n\n\t\t\tif ( ! data.title ) {\n\n\t\t\t\tdata.title = this.get( 'title' ) + ' Quiz';\n\n\t\t\t}\n\n\t\t\tthis.set( 'quiz', data );\n\t\t\tthis.init_relationships();\n\n\t\t\tvar quiz = this.get( 'quiz' );\n\t\t\tthis.set( 'quiz_enabled', 'yes' );\n\n\t\t\treturn quiz;\n\n\t\t},\n\n\t}, Relationships, Utilities ) );\n\n} );\n\n","/**\n * Lessons Collection\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Collections/Lessons',[ 'Models/Lesson' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\tinitialize: function() {\n\n\t\t\tvar self = this;\n\n\t\t\t// reorder called by LessonList view when sortable drops occur\n\t\t\tthis.on( 'reorder', this.update_order );\n\n\t\t\t// when a lesson is added or removed, update order\n\t\t\tthis.on( 'add', this.update_order );\n\t\t\tthis.on( 'remove', this.update_order );\n\n\t\t},\n\n\t\t/**\n\t\t * Update the order attr of each section in the list to reflect the order of the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_order: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.each( function( lesson ) {\n\n\t\t\t\tlesson.set( 'order', self.indexOf( lesson ) + 1 );\n\n\t\t\t} );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Quiz Question Type Collection\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Collections/QuestionTypes',[ 'Models/QuestionType' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\t/**\n\t\t * Initializer\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.on( 'add', this.comparator );\n\t\t\tthis.on( 'remove', this.comparator );\n\n\t\t},\n\n\t\t/**\n\t\t * Comparator (sorts collection)\n\t\t * @param    obj   model  QuestionType model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcomparator: function( model ) {\n\n\t\t\treturn model.get( 'group' ).order;\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Section Model\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/Section',[ 'Collections/Lessons', 'Models/_Relationships' ], function( Lessons, Relationships ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\trelationships: {\n\t\t\tparent: {\n\t\t\t\tmodel: 'course',\n\t\t\t\ttype: 'model',\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tlessons: {\n\t\t\t\t\tclass: 'Lessons',\n\t\t\t\t\tmodel: 'lesson',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * New section defaults\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tid: _.uniqueId( 'temp_' ),\n\t\t\t\tlessons: [],\n\t\t\t\torder: this.collection ? this.collection.length + 1 : 1,\n\t\t\t\tparent_course: window.llms_builder.course.id,\n\t\t\t\ttitle: LLMS.l10n.translate( 'New Section' ),\n\t\t\t\ttype: 'section',\n\n\t\t\t\t_expanded: false,\n\t\t\t\t_selected: false,\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Initialize\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships();\n\n\t\t},\n\n\t\tadd_lesson: function( data, options ) {\n\n\t\t\tdata = data || {};\n\t\t\toptions = options || {};\n\n\t\t\tdata.parent_section = this.get( 'id' );\n\t\t\treturn this.get( 'lessons' ).add( data, options );\n\n\t\t},\n\n\t}, Relationships ) );\n\n} );\n\n","/**\n * Sections Collection\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Collections/Sections',[ 'Models/Section' ], function( model ) {\n\n\treturn Backbone.Collection.extend( {\n\n\t\t/**\n\t\t * Model for collection items\n\t\t * @type  obj\n\t\t */\n\t\tmodel: model,\n\n\t\t/**\n\t\t * Initialize\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tvar self = this;\n\n\t\t\t// reorder called by SectionList view when sortable drops occur\n\t\t\tthis.on( 'reorder', this.update_order );\n\n\t\t\t// when a section is added or removed, update order\n\t\t\tthis.on( 'add', this.update_order );\n\t\t\tthis.on( 'remove', this.update_order );\n\n\t\t},\n\n\t\t/**\n\t\t * Update the order attr of each section in the list to reflect the order of the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_order: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.each( function( section ) {\n\n\t\t\t\tsection.set( 'order', self.indexOf( section ) + 1 );\n\n\t\t\t} );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Lessons Collection\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Collections/loader',[\n\t\t'Collections/Lessons',\n\t\t'Collections/QuestionChoices',\n\t\t'Collections/Questions',\n\t\t'Collections/QuestionTypes',\n\t\t'Collections/Sections'\n\t], function(\n\t\tLessons,\n\t\tQuestionChoices,\n\t\tQuestions,\n\t\tQuestionTypes,\n\t\tSections\n\t) {\n\n\treturn {\n\t\tLessons: Lessons,\n\t\tQuestionChoices: QuestionChoices,\n\t\tQuestions: Questions,\n\t\tQuestionTypes: QuestionTypes,\n\t\tSections: Sections,\n\t};\n\n} );\n\n","/**\n * Course Model\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Models/Course',[ 'Collections/Sections', 'Models/_Relationships', 'Models/_Utilities' ], function( Sections, Relationships, Utilities ) {\n\n\treturn Backbone.Model.extend( _.defaults( {\n\n\t\trelationships: {\n\t\t\tchildren: {\n\t\t\t\tsections: {\n\t\t\t\t\tclass: 'Sections',\n\t\t\t\t\tmodel: 'section',\n\t\t\t\t\ttype: 'collection',\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * New Course Defaults\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version 3.16.0\n\t\t */\n\t\tdefaults: function() {\n\t\t\treturn {\n\t\t\t\tedit_url: '',\n\t\t\t\tsections: [],\n\t\t\t\ttitle: 'New Course',\n\t\t\t\ttype: 'course',\n\t\t\t\tview_url: '',\n\t\t\t}\n\t\t},\n\n\t\tinitialize: function() {\n\n\t\t\tthis.startTracking();\n\t\t\tthis.init_relationships();\n\n\t\t\t// Sidebar \"New Section\" button broadcast\n\t\t\tBackbone.pubSub.on( 'add-new-section', this.add_section, this );\n\n\t\t\t// Sidebar \"New Lesson\" button broadcast\n\t\t\tBackbone.pubSub.on( 'add-new-lesson', this.add_lesson, this );\n\n\t\t\tBackbone.pubSub.on( 'lesson-search-select', this.add_existing_lesson, this );\n\n\t\t},\n\n\t\tadd_existing_lesson: function( lesson ) {\n\n\t\t\tvar data = lesson.data;\n\n\t\t\tif ( 'clone' === lesson.action ) {\n\n\t\t\t\tdelete data.id;\n\n\t\t\t} else {\n\n\t\t\t\tdata._forceSync = true;\n\n\t\t\t}\n\n\t\t\tdelete data.order;\n\t\t\tdelete data.parent_course;\n\t\t\tdelete data.parent_section;\n\n\t\t\tthis.add_lesson( data );\n\n \t   \t \t// var added = this.add_lesson( data ),\n \t   \t \t// \ttemp = _.clone( added.attributes );\n\n \t   \t \t// _.each( [ 'order', 'parent_course', 'parent_section' ], function( key ) {\n\n \t   \t \t// \tconsole.log( key );\n\n \t   \t \t// \tadded.unset( key );\n \t   \t \t// \tadded.set( key, temp[key] );\n\n \t   \t \t// } );\n\n \t   \t \t// console.log( added );\n\n\n\t\t},\n\n\t\tadd_lesson: function( data ) {\n\n\t\t\tdata = data || {};\n\t\t\tvar options = {},\n\t\t\t\tsection;\n\n\t\t\tif ( ! data.parent_section ) {\n\t\t\t\tsection = this.get_selected_section();\n\t\t\t\tif ( ! section ) {\n\t\t\t\t\tsection = this.get( 'sections' ).last();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsection = this.get( 'sections' ).get( data.parent_section );\n\t\t\t}\n\n\t\t\tdata._selected = true;\n\n\t\t\tdata.parent_course = this.get( 'id' );\n\n\t\t\tvar lesson = section.add_lesson( data, options );\n\t\t\tBackbone.pubSub.trigger( 'new-lesson-added', lesson );\n\n\t\t\t// expand the section\n\t\t\tsection.set( '_expanded', true );\n\n\t\t\treturn lesson;\n\n\t\t},\n\n\t\tadd_section: function( data ) {\n\n\t\t\tdata = data || {};\n\t\t\tvar sections = this.get( 'sections' ),\n\t\t\t\toptions = {},\n\t\t\t\tselected = this.get_selected_section();\n\n\t\t\t// if a section is selected, add the new section after the currently selected one\n\t\t\tif ( selected ) {\n\t\t\t\toptions.at = sections.indexOf( selected ) + 1;\n\t\t\t}\n\n\t\t\tsections.add( data, options );\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the currently selected section in the course\n\t\t * @return   obj|undefined\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_selected_section: function() {\n\n\t\t\treturn this.get( 'sections' ).find( function( model ) {\n\t\t\t\treturn model.get( '_selected' );\n\t\t\t} );\n\n\t\t},\n\n\t}, Relationships, Utilities ) );\n\n} );\n\n","/**\n * Load all models\n * @return   obj\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Models/loader',[\n\t\t'Models/Course',\n\t\t'Models/Image',\n\t\t'Models/Lesson',\n\t\t'Models/Question',\n\t\t'Models/QuestionChoice',\n\t\t'Models/QuestionType',\n\t\t'Models/Quiz',\n\t\t'Models/Section'\n\t],\n\tfunction(\n\t\tCourse,\n\t\tImage,\n\t\tLesson,\n\t\tQuestion,\n\t\tQuestionChoice,\n\t\tQuestionType,\n\t\tQuiz,\n\t\tSection\n\t) {\n\n\treturn {\n\t\tCourse: Course,\n\t\tImage: Image,\n\t\tLesson: Lesson,\n\t\tQuestion: Question,\n\t\tQuestionChoice: QuestionChoice,\n\t\tQuestionType: QuestionType,\n\t\tQuiz: Quiz,\n\t\tSection: Section,\n\t};\n\n} );\n\n","/**\n * Lessons Collection\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Controllers/Construct',[\n\t\t'Collections/loader',\n\t\t'Models/loader',\n\t], function(\n\t\tCollections,\n\t\tModels\n\t) {\n\n\treturn function() {\n\n\t\t/**\n\t\t * Internal getter\n\t\t * Constructs new Collections, Models, and Views\n\t\t * @param    obj      type     type of object to construct [Collection,Model,View]\n\t\t * @param    string   name     name of the object to construct\n\t\t * @param    obj      data     object data to pass into the object's constructor\n\t\t * @param    obj      options  object options to pass into the constructor\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction get( type, name, data, options ) {\n\n\t\t\tif ( ! type[ name ] ) {\n\t\t\t\tconsole.log( ' \"' + name + '\" not found.' );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn new type[ name ]( data, options );\n\n\t\t}\n\n\t\tthis.get_collection = function( name, data, options ) {\n\n\t\t\treturn get( Collections, name, data, options );\n\n\t\t};\n\n\t\tthis.get_model = function( name, data, options ) {\n\n\t\t\treturn get( Models, name, data, options );\n\n\t\t};\n\n\t\treturn this;\n\n\t};\n\n} );\n\n","/**\n * LifterLMS Builder Debugging suite\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Controllers/Debug',[], function() {\n\n \treturn function( settings ) {\n\n \t\tvar self = this,\n \t\t\tenabled = settings.enabled || false;\n\n\t\t/**\n\t\t * Disable debugging\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n \t\tthis.disable = function() {\n\n \t\t\tself.log( 'LifterLMS Builder debugging disabled' );\n \t\t\tenabled = false;\n\n \t\t};\n\n\t\t/**\n\t\t * Enable debugging\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n \t\tthis.enable = function() {\n\n \t\t\tenabled = true;\n \t\t\tself.log( 'LifterLMS Builder debugging enabled' );\n\n \t\t};\n\n \t\t/**\n \t\t * General logging function\n \t\t * Logs to the js console only if logging is enabled\n \t\t * @return   void\n \t\t * @since    3.16.0\n \t\t * @version  3.16.0\n \t\t */\n \t\tthis.log = function() {\n\n\t\t\tif ( ! enabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.each( arguments, function( data ) {\n\t\t\t\tconsole.log( data );\n\t\t\t} );\n\n \t\t};\n\n \t\t/**\n \t\t * Toggles current state of the logger on or off\n \t\t * @return   void\n \t\t * @since    3.16.0\n \t\t * @version  3.16.0\n \t\t */\n \t\tthis.toggle = function() {\n\n\t\t\tif ( enabled ) {\n\t\t\t\tself.disable();\n\t\t\t} else {\n\t\t\t\tself.enable();\n\t\t\t}\n\n \t\t};\n\n \t\t// on startup, log a message if logging is enabled\n \t\tif ( enabled ) {\n \t\t\tself.enable();\n \t\t}\n\n \t}\n\n } );\n\n","define( 'Controllers/Sync',[], function() {\n\n \treturn function( Course, settings ) {\n\n \t\tthis.saving = false;\n\n \t\tvar self = this,\n \t\t\tcheck_interval = null,\n \t\t\tcheck_interval_ms = settings.check_interval_ms || 10000,\n \t\t\tdetached = new Backbone.Collection(),\n \t\t\ttrashed = new Backbone.Collection();\n\n \t\t/*\n \t\t\t /$$             /$$                                             /$$                           /$$\n \t\t\t|__/            | $$                                            | $$                          |__/\n \t\t\t /$$ /$$$$$$$  /$$$$$$    /$$$$$$   /$$$$$$  /$$$$$$$   /$$$$$$ | $$        /$$$$$$   /$$$$$$  /$$\n \t\t\t| $$| $$__  $$|_  $$_/   /$$__  $$ /$$__  $$| $$__  $$ |____  $$| $$       |____  $$ /$$__  $$| $$\n \t\t\t| $$| $$  \\ $$  | $$    | $$$$$$$$| $$  \\__/| $$  \\ $$  /$$$$$$$| $$        /$$$$$$$| $$  \\ $$| $$\n \t\t\t| $$| $$  | $$  | $$ /$$| $$_____/| $$      | $$  | $$ /$$__  $$| $$       /$$__  $$| $$  | $$| $$\n \t\t\t| $$| $$  | $$  |  $$$$/|  $$$$$$$| $$      | $$  | $$|  $$$$$$$| $$      |  $$$$$$$| $$$$$$$/| $$\n \t\t\t|__/|__/  |__/   \\___/   \\_______/|__/      |__/  |__/ \\_______/|__/       \\_______/| $$____/ |__/\n \t\t\t                                                                                    | $$\n \t\t\t                                                                                    | $$\n \t\t\t                                                                                    |__/\n \t\t*/\n\n \t\t/**\n \t\t * Adds error message(s) to the data object returned by heartbeat-tick\n \t\t * @param    obj            data  llms_builder data object from heartbeat-tick\n \t\t * @param    string|array   err   error messages array or string\n \t\t * @return   obj\n \t\t * @since    3.16.0\n \t\t * @version  3.16.0\n \t\t */\n\t\tfunction add_error_msg( data, err ) {\n\n\t\t\tif ( 'success' === data.status ) {\n\t\t\t\tdata.message = [];\n\t\t\t}\n\n\t\t\tdata.status = 'error';\n\t\t\tif ( 'string' === typeof err ) {\n\t\t\t\terr = [ err ];\n\t\t\t}\n\t\t\tdata.message = data.message.concat( err );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t/**\n\t\t * Publish sync status so other areas of the application can see what's happening here\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction check_for_changes() {\n\n\t\t\tvar data = {};\n\t\t\tdata.changes = self.get_unsaved_changes();\n\t\t\tdata.has_unsaved_changes = self.has_unsaved_changes( data.changes );\n\t\t\tdata.saving = self.saving;\n\n\t\t\twindow.llms_builder.debug.log( '==== start changes check ====', data, '==== finish changes check ====' );\n\n\t\t\tBackbone.pubSub.trigger( 'current-save-status', data );\n\n\t\t}\n\n\t\t/**\n\t\t * Retrieve all the attributes changed on a model since the last sync\n\t\t *\n\t\t * For a new model (a model with a temp ID) or a model where _forceSync has been defined ALL atts will be returned\n\t\t * For an existing model (without a temp ID) only retrieves changed attributes as tracked by Backbone.TrackIt\n\t\t *\n\t\t * This function excludes any attributes defined as child attributes via the models relationship settings\n\t\t *\n\t\t * @param    obj   model  instance of a Backbone.Model\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction get_changed_attributes( model ) {\n\n\t\t\tvar atts = {},\n\t\t\t\tsync_type;\n\n\t\t\t// model hasn't been persisted to the database to get a real ID yet\n\t\t\t// send *all* of it's atts\n\t\t\tif ( has_temp_id( model ) || true === model.get( '_forceSync' ) ) {\n\n\t\t\t\tatts = _.clone( model.attributes );\n\t\t\t\tsync_type = 'full';\n\n\t\t\t// only send the changed atts\n\t\t\t} else {\n\n\t\t\t\tatts = model.unsavedAttributes();\n\t\t\t\tsync_type = 'partial';\n\n\t\t\t}\n\n\t\t\tvar exclude = [];\n\t\t\tif ( model.get_relationships ) {\n\t\t\t\t_.each( model.get_relationships().children, function( data, key ) {\n\n\t\t\t\t\tif ( ! data.conditional || true === data.conditional( model ) ) {\n\t\t\t\t\t\texclude.push( key );\n\t\t\t\t\t}\n\n\t\t\t\t} )\n\t\t\t}\n\n\t\t\tatts = _.omit( atts, function( val, key ) {\n\n\t\t\t\t// exclude keys that start with an underscore which are used by the\n\t\t\t\t// application but don't need to be stored in the database\n\t\t\t\tif ( 0 === key.indexOf( '_' ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if ( -1 !== exclude.indexOf( key ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\n\t\t\t} );\n\n\t\t\tif ( model.before_save ) {\n\t\t\t\tatts = model.before_save( atts, sync_type );\n\t\t\t}\n\n\t\t\treturn atts;\n\n\t\t}\n\n\t\t/**\n\t\t * Get all the changes to an object (either a Model or a Collection of models)\n\t\t * Returns only changes to models and the IDs of that model (should changes exist)\n\t\t * Uses get_changed_attributes() to determine if all atts or only changed atts are needed\n\t\t * Processes children intelligently to only return changed children rather than the entire collection of children\n\t\t *\n\t\t * @param    obj        object  instance of a Backbone.Model or Backbone.Collection\n\t\t * @return   obj|array\t  \t\tif object is a model, returns an object\n\t\t *                            \tif object is a collection, returns an array of objects\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction get_changes_to_object( object ) {\n\n\t\t\tvar changed_atts;\n\n\t\t\tif ( object instanceof Backbone.Model ) {\n\n\t\t\t\tchanged_atts = get_changed_attributes( object );\n\n\t\t\t\tif ( object.get_relationships ) {\n\n\t\t\t\t\t_.each( object.get_relationships().children, function( child_data, child_key ) {\n\n\t\t\t\t\t\tif ( ! child_data.conditional || true === child_data.conditional( object ) ) {\n\t\t\t\t\t\t\tvar children = get_changes_to_object( object.get( child_key ) );\n\t\t\t\t\t\t\tif ( ! _.isEmpty( children ) ) {\n\t\t\t\t\t\t\t\tchanged_atts[ child_key ] = children;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\t// if we have any data, add the id to the model\n\t\t\t\tif ( ! _.isEmpty( changed_atts ) ) {\n\t\t\t\t\tchanged_atts.id = object.get( 'id' );\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof Backbone.Collection ) {\n\n\t\t\t\tchanged_atts = [];\n\t\t\t\tobject.each( function( model ) {\n\t\t\t\t\tvar model_changes = get_changes_to_object( model );\n\t\t\t\t\tif ( ! _.isEmpty( model_changes ) ) {\n\t\t\t\t\t\tchanged_atts.push( model_changes );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn changed_atts;\n\n\t\t};\n\n\t\t/**\n\t\t * Determines if a model has a temporary ID or a real persisted ID\n\t\t * @param    obj   model  instance of a model\n\t\t * @return   boolean\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction has_temp_id( model ) {\n\n\t\t\treturn ( ! _.isNumber( model.id ) && 0 === model.id.indexOf( 'temp_' ) );\n\n\t\t};\n\n\t\t/**\n\t\t * Processes response data from heartbeat-tick related to trashing & detaching models\n\t\t * On success, removes from local removal collection\n\t\t * On error, appends error messages to the data object returned to UI for on-screen feedback\n\t\t * @param    obj   data  data.llms_builder object from heartbeat-tick response\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tfunction process_removals( data ) {\n\n\t\t\t// check removals for errors\n\t\t\tvar removals = {\n\t\t\t\tdetach: detached,\n\t\t\t\ttrash: trashed,\n\t\t\t};\n\n\t\t\t_.each( removals, function( coll, key ) {\n\n\t\t\t\tif ( data[ key ] ) {\n\n\t\t\t\t\tvar errors = [];\n\n\t\t\t\t\t_.each( data[ key ] , function( info ) {\n\n\t\t\t\t\t\t// succesfully detached, remove it from the detached collection\n\t\t\t\t\t\tif ( ! info.error ) {\n\n\t\t\t\t\t\t\t// regular ids for lessons, sections, questions\n\t\t\t\t\t\t\tif ( $.isNumeric( info.id ) ) {\n\t\t\t\t\t\t\t\tcoll.remove( info.id );\n\n\t\t\t\t\t\t\t// choices formatted as question_id:choice_id\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar split = info.id.split( ':' );\n\t\t\t\t\t\t\t\tcoll.remove( split[1] );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\terrors.push( info.error );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( errors.length ) {\n\t\t\t\t\t\t_.extend( data, add_error_msg( data, errors ) );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn data;\n\t\t}\n\n\n\t\tfunction process_object_updates( data, type, parent, main_data ) {\n\n\t\t\tif ( ! data[ type ] ) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\n\t\t\tif ( parent.get( type ) instanceof Backbone.Model ) {\n\n\t\t\t\tvar info = data[ type ];\n\n\t\t\t\tif ( info.error ) {\n\n\t\t\t\t\t_.extend( main_data, add_error_msg( main_data, info.error ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar model = parent.get( type );\n\n\t\t\t\t\t// update temp ids with the real id\n\t\t\t\t\tif ( info.id != info.orig_id ) {\n\t\t\t\t\t\tmodel.set( 'id', info.id );\n\t\t\t\t\t}\n\t\t\t\t\tmodel.restartTracking();\n\n\t\t\t\t\t// check children\n\t\t\t\t\tif ( model.get_relationships ) {\n\n\n\t\t\t\t\t\t_.each( model.get_relationships().children, function( child_data, child_key ) {\n\n\t\t\t\t\t\t\t_.extend( data[ type ], process_object_updates( data[ type ], child_key, model, main_data ) );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( parent.get( type ) instanceof Backbone.Collection ) {\n\n\t\t\t\t_.each( data[ type ], function( info, index ) {\n\n\t\t\t\t\tif ( info.error ) {\n\n\t\t\t\t\t\t_.extend( main_data, add_error_msg( main_data, info.error ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar model = parent.get( type ).get( info.orig_id );\n\n\t\t\t\t\t\t// update temp ids with the real id\n\t\t\t\t\t\tif ( info.id != info.orig_id ) {\n\t\t\t\t\t\t\tmodel.set( 'id', info.id );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodel.restartTracking();\n\n\t\t\t\t\t\t// check children\n\t\t\t\t\t\tif ( model.get_relationships ) {\n\n\t\t\t\t\t\t\t_.each( model.get_relationships().children, function( child_data, child_key ) {\n\n\t\t\t\t\t\t\t\t_.extend( data[ type ], process_object_updates( data[ type ][ index ], child_key, model, main_data ) );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn main_data;\n\n\t\t};\n\n\t\tfunction process_updates( data ) {\n\n\t\t\t// only mess with updates data\n\t\t\tif ( ! data.updates ) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif ( data.updates ) {\n\t\t\t\tdata = process_object_updates( data.updates, 'sections', Course, data );\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t};\n\n\t\t/*\n\t\t\t                     /$$       /$$ /$$                                     /$$\n\t\t\t                    | $$      | $$|__/                                    |__/\n\t\t\t  /$$$$$$  /$$   /$$| $$$$$$$ | $$ /$$  /$$$$$$$        /$$$$$$   /$$$$$$  /$$\n\t\t\t /$$__  $$| $$  | $$| $$__  $$| $$| $$ /$$_____/       |____  $$ /$$__  $$| $$\n\t\t\t| $$  \\ $$| $$  | $$| $$  \\ $$| $$| $$| $$              /$$$$$$$| $$  \\ $$| $$\n\t\t\t| $$  | $$| $$  | $$| $$  | $$| $$| $$| $$             /$$__  $$| $$  | $$| $$\n\t\t\t| $$$$$$$/|  $$$$$$/| $$$$$$$/| $$| $$|  $$$$$$$      |  $$$$$$$| $$$$$$$/| $$\n\t\t\t| $$____/  \\______/ |_______/ |__/|__/ \\_______/       \\_______/| $$____/ |__/\n\t\t\t| $$                                                            | $$\n\t\t\t| $$                                                            | $$\n\t\t\t|__/                                                            |__/\n\t\t*/\n\n\t\t/**\n\t\t * Retrieve all unsaved changes for the builder instance\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tthis.get_unsaved_changes = function() {\n\n\t\t\tvar trash_items = [];\n\n\t\t\ttrashed.each( function( data ) {\n\n\t\t\t\tif ( 'choice' === data.get( 'type' ) ) {\n\t\t\t\t\ttrash_items.push( data.get( 'question_id' ) + ':' + data.get( 'id' ) );\n\t\t\t\t} else {\n\t\t\t\t\ttrash_items.push( data.get( 'id' ) );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn {\n\t\t\t\tdetach: detached.pluck( 'id' ),\n\t\t\t\ttrash: trash_items,\n\t\t\t\tupdates: get_changes_to_object( Course ),\n\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Check if the builder instance has unsaved changes\n\t\t * @param    obj      changes    optionally pass in an object from the return of this.get_unsaved_changes()\n\t\t *                               save some resources by not running the check twice during heartbeats\n\t\t * @return   boolean\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tthis.has_unsaved_changes = function( changes ) {\n\n\t\t\tif ( 'undefined' === typeof changes ) {\n\t\t\t\tchanges = self.get_unsaved_changes();\n\t\t\t}\n\n\t\t\t// check all possible keys, once we find one with content we have some changes to persist\n\t\t\tvar found = _.find( changes, function( data ) {\n\n\t\t\t\treturn ( false === _.isEmpty( data ) );\n\n\t\t\t} );\n\n\t\t\treturn found ? true : false;\n\n\t\t};\n\n\t\t/**\n\t\t * Save changes right now.\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tthis.save_now = function() {\n\t\t\twp.heartbeat.connectNow();\n\t\t};\n\n\t\t/**\n\t\t * Update the interval that checks for changes to the builder instance\n\t\t * @param    int        ms   time (in milliseconds) to run the check on\n\t\t *                           pass 0 to disable the check\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tthis.set_check_interval = function( ms ) {\n\t\t\tcheck_interval_ms = ms;\n\t\t\tif ( check_interval ) {\n\t\t\t\tclearInterval( check_interval );\n\t\t\t}\n\t\t\tif ( check_interval_ms ) {\n\t\t\t\tcheck_interval = setInterval( check_for_changes, check_interval_ms );\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t\t /$$ /$$             /$$\n\t\t\t| $$|__/            | $$\n\t\t\t| $$ /$$  /$$$$$$$ /$$$$$$    /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$   /$$$$$$$\n\t\t\t| $$| $$ /$$_____/|_  $$_/   /$$__  $$| $$__  $$ /$$__  $$ /$$__  $$ /$$_____/\n\t\t\t| $$| $$|  $$$$$$   | $$    | $$$$$$$$| $$  \\ $$| $$$$$$$$| $$  \\__/|  $$$$$$\n\t\t\t| $$| $$ \\____  $$  | $$ /$$| $$_____/| $$  | $$| $$_____/| $$       \\____  $$\n\t\t\t| $$| $$ /$$$$$$$/  |  $$$$/|  $$$$$$$| $$  | $$|  $$$$$$$| $$       /$$$$$$$/\n\t\t\t|__/|__/|_______/    \\___/   \\_______/|__/  |__/ \\_______/|__/      |_______/\n\t\t*/\n\n\t\t/**\n\t\t * Listen for detached models and send them to the server for persistence\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tBackbone.pubSub.on( 'model-detached', function( model ) {\n\n\t\t\t// detached models with temp ids haven't been persisted so we don't care\n\t\t\tif ( has_temp_id( model ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdetached.add( _.clone( model.attributes ) );\n\n\t\t} );\n\n\t\t/**\n\t\t * Listen for trashed models and send them to the server for deletion\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tBackbone.pubSub.on( 'model-trashed', function( model ) {\n\n\t\t\t// if the model has a temp ID we don't have to persist the deletion\n\t\t\tif ( has_temp_id( model ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttrashed.add( _.clone( model.attributes ) );\n\n\t\t} );\n\n\t\t/*\n\t\t\t /$$                                       /$$     /$$                             /$$\n\t\t\t| $$                                      | $$    | $$                            | $$\n\t\t\t| $$$$$$$   /$$$$$$   /$$$$$$   /$$$$$$  /$$$$$$  | $$$$$$$   /$$$$$$   /$$$$$$  /$$$$$$\n\t\t\t| $$__  $$ /$$__  $$ |____  $$ /$$__  $$|_  $$_/  | $$__  $$ /$$__  $$ |____  $$|_  $$_/\n\t\t\t| $$  \\ $$| $$$$$$$$  /$$$$$$$| $$  \\__/  | $$    | $$  \\ $$| $$$$$$$$  /$$$$$$$  | $$\n\t\t\t| $$  | $$| $$_____/ /$$__  $$| $$        | $$ /$$| $$  | $$| $$_____/ /$$__  $$  | $$ /$$\n\t\t\t| $$  | $$|  $$$$$$$|  $$$$$$$| $$        |  $$$$/| $$$$$$$/|  $$$$$$$|  $$$$$$$  |  $$$$/\n\t\t\t|__/  |__/ \\_______/ \\_______/|__/         \\___/  |_______/  \\_______/ \\_______/   \\___/\n\t\t*/\n\n\t\t/**\n\t\t * Add data to the WP heartbeat to persist new models, changes, and deletions to the DB\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t$( document ).on( 'heartbeat-send', function( event, data ) {\n\n\t\t\t// prevent simultaneous saves\n\t\t\tif ( self.saving ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar changes = self.get_unsaved_changes();\n\n\t\t\t// only send data if we have data to send\n\t\t\tif ( self.has_unsaved_changes( changes ) ) {\n\n\t\t\t\tchanges.id = Course.get( 'id' );\n\t\t\t\tself.saving = true;\n\t\t\t\tdata.llms_builder = changes;\n\n\t\t\t}\n\n\t\t\twindow.llms_builder.debug.log( '==== start heartbeat-send ====', data, '==== finish heartbeat-send ====' );\n\n\t\t\tBackbone.pubSub.trigger( 'heartbeat-send', self );\n\n\t\t} );\n\n\t\t/**\n\t\t * Confirm detachments & deletions and replace temp IDs with new persisted IDs\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t$( document ).on( 'heartbeat-tick', function( event, data ) {\n\n\t\t\tif ( ! data.llms_builder ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twindow.llms_builder.debug.log( '==== start heartbeat-tick ====', data, '==== finish heartbeat-tick ====' );\n\n\t\t\tdata.llms_builder = process_removals( data.llms_builder );\n\t\t\tdata.llms_builder = process_updates( data.llms_builder );\n\n\t\t\tself.saving = false;\n\n\t\t\tBackbone.pubSub.trigger( 'heartbeat-tick', self, data.llms_builder );\n\n\t\t} );\n\n\t\t/**\n\t\t * On heartbeat errors publish an error to the main builder application\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t$( document ).on( 'heartbeat-error', function( event, data ) {\n\n\t\t\twindow.llms_builder.debug.log( '==== start heartbeat-error ====', data, '==== finish heartbeat-error ====' );\n\n\t\t\tself.saving = false;\n\n\t\t\tBackbone.pubSub.trigger( 'heartbeat-tick', self, {\n\t\t\t\tstatus: 'error',\n\t\t\t\tmessage: data.responseText + ' (' + data.status + ' ' + data.statusText +')',\n\t\t\t} );\n\n\t\t} );\n\n\n\n\t\t/*\n\t\t\t /$$           /$$   /$$\n\t\t\t|__/          |__/  | $$\n\t\t\t /$$ /$$$$$$$  /$$ /$$$$$$\n\t\t\t| $$| $$__  $$| $$|_  $$_/\n\t\t\t| $$| $$  \\ $$| $$  | $$\n\t\t\t| $$| $$  | $$| $$  | $$ /$$\n\t\t\t| $$| $$  | $$| $$  |  $$$$/\n\t\t\t|__/|__/  |__/|__/   \\___/\n\t\t*/\n\n\t\t// setup the check interval\n\t\tif ( check_interval_ms ) {\n\t\t\tthis.set_check_interval( check_interval_ms );\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n} );\n\n","define( 'Views/Editors/wysiwyg',[], function() {\n\n\treturn Backbone.Form.editors.TextArea.extend({\n\n\t\tinitialize: function(options) {\n\n\t\t\t// Call parent constructor\n\t\t\tBackbone.Form.editors.Base.prototype.initialize.call(this, options);\n\n\t\t},\n\n\t\trender: function() {\n\n\t\t\tthis.setValue( this.value );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Load Tiny MCE on the editor\n\t\t * @return   {[type]}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tload_tinymce: function() {\n\n\t\t\t// broadcast so other instances can unload the editor before loading a new one\n\t\t\tBackbone.pubSub.trigger( 'pre-load-wysiwyg-editor' );\n\n\t\t\twp.editor.initialize( this._get_id(), $.extend( true, wp.editor.getDefaultSettings(), {\n\t\t\t\tmediaButtons: true,\n\t\t\t\ttinymce: {\n\t\t\t\t\ttoolbar1: 'bold,italic,strikethrough,bullist,numlist,blockquote,hr,alignleft,aligncenter,alignright,link,unlink,wp_more,spellchecker,wp_fullscreen,wp_adv',\n\t\t\t\t\ttoolbar2: 'formatselect,underline,alignjustify,forecolor,pastetext,removeformat,charmap,outdent,indent,undo,redo,wp_help',\n\t\t\t\t\tsetup: _.bind( this.on_ready, this ),\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\t},\n\n\t\tunload_tinymce: function() {\n\n\t\t\twp.editor.remove( this._get_id() );\n\n\t\t},\n\n\t\tgetValue: function() {\n\t\t\treturn wp.editor.getContent( this._get_id() );\n\t\t},\n\n\t\tsetValue: function( value ) {\n\t\t\tthis.$el.val( value );\n\t\t},\n\n\t\tfocus: function() {\n\t\t\tif (this.hasFocus) return;\n\n\t\t\t// This method call should result in an input within this editor\n\t\t\t// becoming the `document.activeElement`.\n\t\t\t// This, in turn, should result in this editor's `focus` event\n\t\t\t// being triggered, setting `this.hasFocus` to `true`.\n\t\t\t// See above for more detail.\n\t\t\tthis.$el.focus();\n\t\t},\n\n\t\tblur: function() {\n\t\t\tif (!this.hasFocus) return;\n\n\t\t\tthis.$el.blur();\n\t\t},\n\n\t\ton_ready: function( editor ) {\n\n\t\t\t// unload this editor if another editor is going to be loaded\n\t\t\tBackbone.pubSub.on( 'pre-load-wysiwyg-editor', _.bind( this.unload_tinymce, this ) );\n\t\t\t// editor.on( 'change', function( event ) {\n\t\t\t\t// self.commit();\n\t\t\t// } );\n\n\t\t},\n\n\t\t_get_id: function() {\n\n\t\t\treturn this.$el.attr( 'id' );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Handles UX and Events for inline editing of views\n * Use with a Model's View\n * Allows editing model.title field via .llms-editable-title elements\n * @type     {Object}\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/_Editable',[], function() {\n\n\treturn {\n\n\t\tmedia_lib: null,\n\n\t\t/**\n\t\t * DOM Events\n\t\t * @type  {Object}\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tevents: {\n\t\t\t'click .llms-add-image': 'open_media_lib',\n\t\t\t'click a[href=\"#llms-remove-image\"]': 'remove_image',\n\t\t\t'change .llms-editable-select select': 'on_select',\n\t\t\t'change .llms-switch input[type=\"checkbox\"]': 'toggle_switch',\n\t\t\t'focusout .llms-input': 'on_blur',\n\t\t\t'keydown .llms-input': 'on_keydown',\n\t\t},\n\n\t\t/**\n\t\t * Retrieve a list of allowed tags for a given element\n\t\t * @param    obj   $el  jQuery selector for the element\n\t\t * @return   array\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_allowed_tags: function( $el ) {\n\n\t\t\treturn [ 'b', 'i', 'u', 'strong', 'em' ];\n\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the content of an element\n\t\t * @param    obj   $el  jQuery object of the element\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_content: function( $el ) {\n\n\t\t\tif ( 'INPUT' === $el[0].tagName ) {\n\t\t\t\treturn $el.val();\n\t\t\t}\n\n\t\t\tif ( ! $el.attr( 'data-formatting' ) && ! $el.hasClass( 'ql-editor' ) ) {\n\t\t\t\treturn $el.text();\n\t\t\t}\n\n\t\t\tvar $html = $( '<div>' + $el.html() + '</div>' );\n\n\t\t\t$html.find( '*' ).not( this.get_allowed_tags( $el ).join( ',' ) ).each( function( ) {\n\n\t\t\t\t$( this ).replaceWith( this.innerHTML );\n\n\t\t\t} );\n\n\t\t\treturn $html.html();\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if changes have been made to the element\n\t\t * @param    {[obj]}   event  js event object\n\t\t * @return   {Boolean}        true when changes have been made, false otherwise\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\thas_changed: function( event ) {\n\t\t\tvar $el = $( event.target );\n\t\t\treturn ( $el.attr( 'data-original-content' ) !== this.get_content( $el ) );\n\t\t},\n\n\t\t/**\n\t\t * Ensure that new content is at least 1 character long\n\t\t * @param    obj   event  js event object\n\t\t * @return   boolean\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tis_valid: function( event ) {\n\n\t\t\tvar self = this,\n\t\t\t\t$el = $( event.target ),\n\t\t\t\tcontent = this.get_content( $el ),\n\t\t\t\ttype = $el.attr( 'data-type' );\n\n\t\t\tif ( content.length < 1 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( 'url' === type || 'video' === type ) {\n\t\t\t\tif ( ! this._validate_url( this.get_content( $el ) ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\t/**\n\t\t * Initialize elements that allow inline formatting\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinit_formatting_els: function() {\n\n\t\t\tvar self = this;\n\n\t\t\tthis.$el.find( '.llms-input-formatting[data-formatting]' ).each( function() {\n\n\t\t\t\tvar formatting = $( this ).attr( 'data-formatting' ).split( ',' ),\n\t\t\t\t\tattr = $( this ).attr( 'data-attribute' );\n\n\t\t\t\tvar ed = new Quill( this, {\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\ttoolbar: [ formatting ],\n\t\t\t\t\t\tkeyboard: {\n\t\t\t\t\t\t\tbindings: {\n\t\t\t\t\t\t\t\ttab: {\n\t\t\t\t\t\t\t\t\tkey: 9,\n\t\t\t\t\t\t\t\t\thandler: function( range, context ) {\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t13: {\n\t\t\t\t\t\t\t\t\tkey: 13,\n\t\t\t\t\t\t\t\t\thandler: function( range, context ) {\n\t\t\t\t\t\t\t\t\t\ted.root.blur();\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tplaceholder: $( this ).attr( 'data-placeholder' ),\n\t\t\t\t\ttheme: 'bubble',\n\t\t\t\t} );\n\n\t\t\t\ted.on( 'text-change', function( delta, oldDelta, source ) {\n\t\t\t\t\tself.model.set( attr, self.get_content( $( ed.root ) ) );\n\t\t\t\t} );\n\n\t\t\t\tBackbone.pubSub.trigger( 'formatting-ed-init', ed, $( this ), self );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Initialize editable select elements\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinit_selects: function() {\n\n\t\t\tthis.$el.find( '.llms-editable-select select' ).llmsSelect2( {\n\t\t\t\twidth: '100%',\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Blur/focusout function for .llms-editable-title elements\n\t\t * Automatically saves changes if changes have been made\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.14.1\n\t\t * @version  3.14.1\n\t\t */\n\t\ton_blur: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar self = this,\n\t\t\t\t$el = $( event.target ),\n\t\t\t\tchanged = this.has_changed( event );\n\n\t\t\tif ( changed ) {\n\n\t\t\t\tif ( ! self.is_valid( event ) ) {\n\t\t\t\t\tself.revert_edits( event );\n\t\t\t\t} else {\n\t\t\t\t\tthis.save_edits( event );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Change event for selectables\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_select: function( event ) {\n\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tmulti = ( $el.attr( 'multiple' ) ),\n\t\t\t\tattr = $el.attr( 'name' ),\n\t\t\t\t$selected = $el.find( 'option:selected' ),\n\t\t\t\tval;\n\n\t\t\tif ( multi ) {\n\t\t\t\tval = [];\n\t\t\t\tval = $selected.map( function() {\n\t\t\t\t\treturn this.value;\n\t\t\t\t} ).get();\n\t\t\t} else {\n\t\t\t\tval = $selected[0].value;\n\t\t\t}\n\n\t\t\tthis.model.set( attr, val );\n\n\t\t},\n\n\t\t/**\n\t\t * Keydown function for .llms-editable-title elements\n\t\t * Blurs\n\t\t * @param    {obj}   event  js event object\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_keydown: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar self = this,\n\t\t\t\tkey = event.which || event.keyCode,\n\t\t\t\tctrl = event.metaKey || event.ctrlKey;\n\n\t\t\tswitch ( key ) {\n\n\t\t\t\tcase 13: // enter\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.target.blur();\n\t\t\t\tbreak;\n\n\t\t\t\tcase 27: // escape\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.revert_edits( event );\n\t\t\t\t\tevent.target.blur();\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Open the WP media lib\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\topen_media_lib: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar self = this,\n\t\t\t\t$el = $( event.currentTarget );\n\n\t\t\tif ( self.media_lib ) {\n\n\t\t\t\tself.media_lib.uploader.uploader.param( 'post_id', self.model.get( 'id' ) );\n\n\t\t\t} else {\n\n\t\t\t\twp.media.model.settings.post.id = self.model.get( 'id' );\n\n\t\t\t\tself.media_lib = wp.media.frames.file_frame = wp.media( {\n\t\t\t\t\ttitle: LLMS.l10n.translate( 'Select an image' ),\n\t\t\t\t\tbutton: {\n\t\t\t\t\t\ttext: LLMS.l10n.translate( 'Use this image' ),\n\t\t\t\t\t},\n\t\t\t\t\tmultiple: false\t// Set to true to allow multiple files to be selected\n\t\t\t\t} );\n\n\t\t\t\tself.media_lib.on( 'select', function() {\n\n\t\t\t\t\tvar size = $el.attr( 'data-image-size' ),\n\t\t\t\t\t\tattachment = self.media_lib.state().get( 'selection' ).first().toJSON(),\n\t\t\t\t\t\timage = self.model.get( $el.attr( 'data-attribute' ) ),\n\t\t\t\t\t\turl;\n\n\t\t\t\t\tif ( size && attachment.sizes[ size ] ) {\n\t\t\t\t\t\turl = attachment.sizes[ size ].url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\turl = attachment.url;\n\t\t\t\t\t}\n\n\t\t\t\t\timage.set( {\n\t\t\t\t\t\tid: attachment.id,\n\t\t\t\t\t\tsrc: url,\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tself.media_lib.open();\n\n\n\t\t},\n\n\t\t/**\n\t\t * Click event to remove an image\n\t\t * @param    obj   event  js event obj\n\t\t * @return   voids\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tremove_image: function( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.model.get( $( event.currentTarget ).attr( 'data-attribute' ) ).set( {\n\t\t\t\tid: '',\n\t\t\t\tsrc: '',\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Helper to undo changes\n\t\t * Bound to \"escape\" key via on_keydwon function\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trevert_edits: function( event ) {\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tval = $el.attr( 'data-original-content' );\n\t\t\t$el.html( val );\n\t\t},\n\n\t\t/**\n\t\t * Sync chages to the model and DB\n\t\t * @param    {obj}   event  js event object\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tsave_edits: function( event ) {\n\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tval = this.get_content( $el );\n\t\t\tthis.model.set( $el.attr( 'data-attribute' ), val );\n\n\t\t},\n\n\t\t/**\n\t\t * Change event for a switch element\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttoggle_switch: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\t\t\tvar $el = $( event.target ),\n\t\t\t\tattr = $el.attr( 'name' ),\n\t\t\t\tval;\n\n\t\t\tif ( $el.is( ':checked' ) ) {\n\t\t\t\tval = $el.attr( 'data-on' ) ? $el.attr( 'data-on' ) : 'yes';\n\t\t\t} else {\n\t\t\t\tval = $el.attr( 'data-off' ) ? $el.attr( 'data-off' ) : 'no';\n\t\t\t}\n\n\t\t\tif ( -1 !== attr.indexOf( '.' ) ) {\n\n\t\t\t\tvar split = attr.split( '.' );\n\n\t\t\t\tif ( 'parent' === split[0] ) {\n\t\t\t\t\tthis.model.get_parent().set( split[1], val );\n\t\t\t\t} else {\n\t\t\t\t\tthis.model.get( split[0] ).set( split[1], val );\n\t\t\t\t}\n\n\n\t\t\t} else {\n\n\t\t\t\tthis.model.set( attr, val );\n\n\t\t\t}\n\n\t\t\tthis.trigger( attr.replace( '.', '-' ) + '_toggle', val );\n\t\t\tthis.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Initializes a WP Editor on a textarea\n\t\t * @param    string   id        CSS ID of the editor (don't include #)\n\t\t * @param    obj      settings  optional object of settings to pass to wp.editor.initialize()\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinit_editor: function( id, settings ) {\n\n\t\t\tsettings = settings || {};\n\n\t\t\twp.editor.remove( id );\n\n\t\t\twp.editor.initialize( id, $.extend( true, wp.editor.getDefaultSettings(), {\n\t\t\t\tmediaButtons: true,\n\t\t\t\ttinymce: {\n\t\t\t\t\ttoolbar1: 'bold,italic,strikethrough,bullist,numlist,blockquote,hr,alignleft,aligncenter,alignright,link,unlink,wp_adv',\n\t\t\t\t\ttoolbar2: 'formatselect,underline,alignjustify,forecolor,pastetext,removeformat,charmap,outdent,indent,undo,redo,wp_help',\n\t\t\t\t\tsetup: _.bind( this.on_editor_ready, this ),\n\t\t\t\t}\n\t\t\t}, settings ) );\n\n\t\t},\n\n\t\t/**\n\t\t * Callback function called after initialization of an editor\n\t\t * Updates UI if a label is present\n\t\t * Binds a change event to ensure editor changes are saved to the model\n\t\t * @param    obj   editor  wp.editor instance\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_editor_ready: function( editor ) {\n\n\t\t\tvar self = this,\n\t\t\t\t$ed = $( '#' + editor.id ),\n\t\t\t\t$parent = $ed.closest( '.llms-editable-editor' ),\n\t\t\t\t$label = $parent.find( '.llms-label' );\n\n\t\t\tif ( $label.length ) {\n\t\t\t\t$label.prependTo( $parent.find( '.wp-editor-tools' ) );\n\t\t\t}\n\n\t\t\t// save changes to the model\n\t\t\teditor.on( 'change', function( event ) {\n\t\t\t\tself.model.set( $( '#' + editor.id ).attr( 'data-attribute' ), wp.editor.getContent( editor.id ) );\n\t\t\t} );\n\n\t\t},\n\n\t\t_validate_url: function( str ) {\n\n\t\t\tvar a = document.createElement( 'a' );\n\t\t\ta.href = str;\n\t\t\treturn ( a.host && a.host !== window.location.host );\n\n\t\t}\n\n\t};\n\n} );\n\n","/**\n * Shiftable view mixin function\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/_Shiftable',[], function() {\n\n\treturn {\n\n\t\t/**\n\t\t * Conditionally hide action buttons based on section position in collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tmaybe_hide_shiftable_buttons: function() {\n\n\t\t\tif ( ! this.model.collection ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar type = this.model.get( 'type' );\n\n\t\t\tif ( this.model.collection.first() === this.model ) {\n\t\t\t\tthis.$el.find( '.shift-up--' + type ).hide();\n\t\t\t} else if ( this.model.collection.last() === this.model ) {\n\t\t\t\tthis.$el.find( '.shift-down--' + type ).hide();\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Move an item in a collection from one position to another\n\t\t * @param    int   old_index  current (old) index within the collection\n\t\t * @param    int   new_index  desired (new) index within the collection\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tshift: function( old_index, new_index ) {\n\n\t\t\tvar collection = this.model.collection;\n\n\t\t\tcollection.remove( this.model );\n\t\t\tcollection.add( this.model, { at: new_index } );\n\t\t\tcollection.trigger( 'reorder' );\n\n\t\t},\n\n\t\t/**\n\t\t * Move an item down the tree one position\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tshift_down: function( e ) {\n\n\t\t\te.preventDefault();\n\t\t\tvar index = this.model.collection.indexOf( this.model );\n\t\t\tthis.shift( index, index + 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Move an item up the tree one position\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tshift_up: function( e ) {\n\n\t\t\te.preventDefault();\n\t\t\tvar index = this.model.collection.indexOf( this.model );\n\t\t\tthis.shift( index, index - 1 );\n\n\t\t},\n\n\t};\n\n} );\n\n","/**\n * Single Lesson View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/Lesson',[ 'Views/_Editable', 'Views/_Shiftable' ], function( Editable, Shiftable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Get default attributes for the html wrapper element\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\t'data-id': this.model.id,\n\t\t\t\t'data-section-id': this.model.get( 'parent_section' ),\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * HTML class names\n\t\t * @type  {String}\n\t\t */\n\t\tclassName: 'llms-builder-item llms-lesson',\n\n\t\t/**\n\t\t * Events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: _.defaults( {\n\t\t\t'click .detach--lesson': 'detach',\n\t\t\t'click .edit-lesson': 'open_lesson_editor',\n\t\t\t'click .edit-quiz': 'open_quiz_editor',\n\t\t\t'click .shift-up--lesson': 'shift_up',\n\t\t\t'click .shift-down--lesson': 'shift_down',\n\t\t\t'click .trash--lesson': 'trash',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-lesson-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-lesson-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.14.1\n\t\t * @version  3.14.1\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.render();\n\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\n\t\t\tBackbone.pubSub.on(  'lesson-selected', this.on_select, this );\n\t\t\tBackbone.pubSub.on(  'new-lesson-added', this.on_select, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model ) );\n\t\t\tthis.maybe_hide_shiftable_buttons();\n\t\t\tif ( this.model.get( '_selected' ) ) {\n\t\t\t\tthis.$el.addClass( 'selected' );\n\t\t\t} else {\n\t\t\t\tthis.$el.removeClass( 'selected' );\n\t\t\t}\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Remove lesson from course and delete it\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdetach: function( event ) {\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif ( window.confirm( LLMS.l10n.translate( 'Are you sure you want to remove this lesson from the course?' ) ) ) {\n\n\t\t\t\tthis.model.collection.remove( this.model );\n\t\t\t\tBackbone.pubSub.trigger( 'model-detached', this.model );\n\n\t\t\t}\n\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for lesson settings action icon\n\t\t * Opens sidebar to the lesson editor tab\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\topen_lesson_editor: function() {\n\n\t\t\tBackbone.pubSub.trigger( 'lesson-selected', this.model, 'lesson' );\n\t\t\tthis.model.set( '_selected', true );\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for the quiz editor action icon\n\t\t * Opens sidebar to the quiz editor tab\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\topen_quiz_editor: function() {\n\n\t\t\tBackbone.pubSub.trigger( 'lesson-selected', this.model, 'quiz' );\n\t\t\tthis.model.set( '_selected', true );\n\n\t\t},\n\n\t\t/**\n\t\t * When a lesson is selected mark it as selected in the hidden prop\n\t\t * Allows views to re-render and reflect current state properly\n\t\t * @param    obj   model  lesson model that's been selected\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_select: function( model ) {\n\n\t\t\tif ( this.model.id !== model.id ) {\n\t\t\t\tthis.model.set( '_selected', false );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Remove lesson from course and delete it\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttrash: function( event ) {\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif ( window.confirm( LLMS.l10n.translate( 'Are you sure you want to move this lesson to the trash?' ) ) ) {\n\n\t\t\t\tthis.model.collection.remove( this.model );\n\t\t\t\tBackbone.pubSub.trigger( 'model-trashed', this.model );\n\n\t\t\t}\n\n\n\t\t},\n\n\t}, Editable, Shiftable ) );\n\n} );\n\n","/**\n * _receive override for Backbone.CollectionView core\n * enables connection with jQuery UI draggable buttons\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/_Receivable',[], function() {\n\n\treturn {\n\n\t\t/**\n\t\t * Overloads the function from Backbone.CollectionView core because it doesn't properly handle\n\t\t * receieves from a jQuery UI draggable object\n\t\t * @param    obj   event  js event object\n\t\t * @param    obj   ui     jQuery UI object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_receive : function( event, ui ) {\n\n\t\t\t// came from sidebar drag\n\t\t\tif ( ui.sender.hasClass( 'ui-draggable' ) ) {\n\t\t\t\tvar index = this._getContainerEl().children().index( ui.helper );\n\t\t\t\tui.helper.remove(); // remove the helper\n\t\t\t\tthis.collection.add( {}, { at: index } );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar senderListEl = ui.sender;\n\t\t\tvar senderCollectionListView = senderListEl.data( 'view' );\n\t\t\tif( ! senderCollectionListView || ! senderCollectionListView.collection ) return;\n\n\t\t\tvar newIndex = this._getContainerEl().children().index( ui.item );\n\t\t\tvar modelReceived = senderCollectionListView.collection.get( ui.item.attr( 'data-model-cid' ) );\n\t\t\tsenderCollectionListView.collection.remove( modelReceived );\n\t\t\tthis.collection.add( modelReceived, { at : newIndex } );\n\t\t\tmodelReceived.collection = this.collection; // otherwise will not get properly set, since modelReceived.collection might already have a value.\n\t\t\tthis.setSelectedModel( modelReceived );\n\t\t},\n\n\t}\n\n} );\n\n\n","/**\n * Single Section View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/LessonList',[ 'Views/Lesson', 'Views/_Receivable' ], function( LessonView, Receivable ) {\n\n\treturn Backbone.CollectionView.extend( _.defaults( {\n\n\t\tclassName: 'llms-lessons',\n\n\t\t/**\n\t\t * Section model\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: LessonView,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: false,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: true,\n\n\t\tsortableOptions: {\n\t\t\taxis: false,\n\t\t\tconnectWith: '.llms-lessons',\n\t\t\tcursor: 'move',\n\t\t\thandle: '.drag-lesson',\n\t\t\titems: '.llms-lesson',\n\t\t\tplaceholder: 'llms-lesson llms-sortable-placeholder',\n\t\t},\n\n\t\tsortable_start: function( collection ) {\n\t\t\t$( '.llms-lessons' ).addClass( 'dragging' );\n\t\t},\n\n\t\tsortable_stop: function( collection ) {\n\t\t\t$( '.llms-lessons' ).removeClass( 'dragging' );\n\t\t},\n\n\t\t/**\n\t\t * Overloads the function from Backbone.CollectionView core because it doesn't send stop events\n\t\t * if moving from one sortable to another... :-(\n\t\t * @param    obj   event  js event object\n\t\t * @param    obj   ui     jQuery UI object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_sortStop : function( event, ui ) {\n\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( 'data-model-cid' ) ),\n\t\t\t\tmodelViewContainerEl = this._getContainerEl(),\n\t\t\t\tnewIndex = modelViewContainerEl.children().index( ui.item );\n\n\t\t\tif ( newIndex == -1 && modelBeingSorted ) {\n\t\t\t\tthis.collection.remove( modelBeingSorted );\n\t\t\t}\n\n\t\t\tthis._reorderCollectionBasedOnHTML();\n\t\t\tthis.updateDependentControls();\n\n\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\tthis.spawn( 'sortStop', { modelBeingSorted : modelBeingSorted, newIndex : newIndex } );\n\t\t\t} else {\n\t\t\t\tthis.trigger( 'sortStop', modelBeingSorted, newIndex );\n\t\t\t}\n\n\t\t},\n\n\t}, Receivable ) );\n\n} );\n\n","/**\n * Single Section View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/Section',[ 'Views/LessonList', 'Views/_Editable', 'Views/_Shiftable' ], function( LessonListView, Editable, Shiftable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Get default attributes for the html wrapper element\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\t'data-id': this.model.id,\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Element classnames\n\t\t * @type  {String}\n\t\t */\n\t\tclassName: 'llms-builder-item llms-section',\n\n\t\t/**\n\t\t * Events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: _.defaults( {\n\t\t\t'click': 'select',\n\t\t\t'click .expand': 'expand',\n\t\t\t'click .collapse': 'collapse',\n\t\t\t'click .shift-up--section': 'shift_up',\n\t\t\t'click .shift-down--section': 'shift_down',\n\t\t\t'click .trash--section': 'trash',\n\n\t\t\t'mouseenter .llms-lessons': 'on_mouseenter',\n\t\t\t// 'mouseleave': 'on_mouseleave',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-section-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-section-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.render();\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\t\t\tthis.listenTo( this.model, 'change:_expanded', this.toggle_expanded );\n\t\t\tthis.lessonListView.collection.on( 'add', this.on_lesson_add, this );\n\n\t\t\tthis.dragTimeout = null;\n\n\t\t\tBackbone.pubSub.on( 'expand-all', this.expand, this );\n\t\t\tBackbone.pubSub.on( 'collapse-all', this.collapse, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Render the section\n\t\t * Initalizes a new collection and views for all lessons in the section\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model.toJSON() ) );\n\n\t\t\tthis.maybe_hide_shiftable_buttons();\n\n\t\t\tthis.lessonListView = new LessonListView( {\n\t\t\t\tel: this.$el.find( '.llms-lessons' ),\n\t\t\t\tcollection: this.model.get( 'lessons' ),\n\t\t\t} );\n\t\t\tthis.lessonListView.render();\n\t\t\tthis.lessonListView.on( 'sortStart', this.lessonListView.sortable_start );\n\t\t\tthis.lessonListView.on( 'sortStop', this.lessonListView.sortable_stop );\n\n\t\t\t// selection changes\n\t\t\tthis.lessonListView.on( 'selectionChanged', this.active_lesson_change, this );\n\n\t\t\tthis.maybe_hide_trash_button();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tactive_lesson_change: function( current, previous ) {\n\n\t\t\tBackbone.pubSub.trigger( 'active-lesson-change', {\n\t\t\t\tcurrent: current,\n\t\t\t\tprevious: previous,\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Collapse lessons within the section\n\t\t * @param    obj   event    js event object\n\t\t * @param    bool  update   if true, updates the model to reflect the new state\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcollapse: function( event, update ) {\n\n\t\t\tif ( 'undefined' === typeof update ) {\n\t\t\t\tupdate = true;\n\t\t\t}\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tthis.$el.removeClass( 'expanded' ).find( '.drag-expanded' ).removeClass( 'drag-expanded' );\n\t\t\tif ( update ) {\n\t\t\t\tthis.model.set( '_expanded', false );\n\t\t\t}\n\t\t\tBackbone.pubSub.trigger( 'section-toggle', this.model );\n\n\t\t},\n\n\t\t/**\n\t\t * Expand lessons within the section\n\t\t * @param    obj   event    js event object\n\t\t * @param    bool  update   if true, updates the model to reflect the new state\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\texpand: function( event, update ) {\n\n\t\t\tif ( 'undefined' === typeof update ) {\n\t\t\t\tupdate = true;\n\t\t\t}\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tthis.$el.addClass( 'expanded' );\n\t\t\tif ( update ) {\n\t\t\t\tthis.model.set( '_expanded', true );\n\t\t\t}\n\t\t\tBackbone.pubSub.trigger( 'section-toggle', this.model );\n\n\t\t},\n\n\t\tmaybe_hide_trash_button: function() {\n\n\t\t\tvar $btn = this.$el.find( '.trash--section' );\n\n\t\t\tif ( this.model.get( 'lessons' ).isEmpty() ) {\n\n\t\t\t\t$btn.show();\n\n\t\t\t} else {\n\n\t\t\t\t$btn.hide()\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * When a lesson is added to the section trigger a collection reorder & update the lesson's id\n\t\t * @param    obj   model  Lesson model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_lesson_add: function( model ) {\n\n\t\t\tthis.lessonListView.collection.trigger( 'reorder' );\n\t\t\tmodel.set( 'parent_section', this.model.get( 'id' ) );\n\t\t\tthis.expand();\n\n\t\t},\n\n\t\ton_mouseenter: function( event ) {\n\n\n\t\t\tif ( $( event.target ).hasClass( 'dragging' ) ) {\n\n\t\t\t\t$( '.drag-expanded' ).removeClass( 'drag-expanded' );\n\t\t\t\t$( event.target ).addClass( 'drag-expanded' );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// on_mouseleave: function( event ) {\n\n\t\t// \tconsole.log( event );\n\n\t\t// \tvar $el = $( event.currentTarget ).find( '.llms-lessons' );\n\n\t\t// \tclearTimeout( this.dragTimeout );\n\n\t\t// \tif ( $el.hasClass( 'dragging' ) ) {\n\n\t\t// \t\t$el.removeClass( 'drag-expanded' );\n\n\t\t// \t}\n\n\t\t// },\n\n\t\t/**\n\t\t * Expand\n\t\t * @param    {[type]}   model  [description]\n\t\t * @param    {[type]}   value  [description]\n\t\t * @return   {[type]}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttoggle_expanded: function( model, value ) {\n\n\t\t\tif ( value ) {\n\t\t\t\tthis.expand( null, false );\n\t\t\t} else {\n\t\t\t\tthis.collapse( null, false );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Remove section from course and delete it\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttrash: function( event ) {\n\n\t\t\tif ( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tBackbone.pubSub.trigger( 'model-trashed', this.model );\n\t\t\tthis.model.collection.remove( this.model );\n\n\t\t},\n\n\t}, Editable, Shiftable ) );\n\n} );\n\n","/**\n * Single Section View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/SectionList',[ 'Views/Section', 'Views/_Receivable' ], function( SectionView, Receivable ) {\n\n\treturn Backbone.CollectionView.extend( _.defaults( {\n\n\t\t/**\n\t\t * Parent element\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-sections',\n\n\t\tevents : {\n\t\t\t'mousedown > li.llms-section > .llms-builder-header .llms-headline' : '_listItem_onMousedown',\n\t\t\t// 'dblclick > li, tbody > tr > td' : '_listItem_onDoubleClick',\n\t\t\t'click' : '_listBackground_onClick',\n\t\t\t'click ul.collection-view' : '_listBackground_onClick',\n\t\t\t'keydown' : '_onKeydown'\n\t\t},\n\n\t\t/**\n\t\t * Section model\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: SectionView,\n\n\t\t/**\n\t\t * Enable keyboard events\n\t\t * @type  {Bool}\n\t\t */\n\t\tprocessKeyEvents: false,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: true,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: true,\n\n\t\tsortableOptions: {\n\t\t\taxis: false,\n\t\t\tcursor: 'move',\n\t\t\thandle: '.drag-section',\n\t\t\titems: '.llms-section',\n\t\t\tplaceholder: 'llms-section llms-sortable-placeholder',\n\t\t},\n\n\t\tsortable_start: function( collection ) {\n\t\t\tthis.$el.addClass( 'dragging' );\n\t\t},\n\n\t\tsortable_stop: function( collection ) {\n\t\t\tthis.$el.removeClass( 'dragging' );\n\t\t},\n\n\t}, Receivable ) );\n\n} );\n\n","/**\n * Single Course View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/Course',[ 'Views/SectionList', 'Views/_Editable' ], function( SectionListView, Editable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Get default attributes for the html wrapper element\n\t\t * @return   obj\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\t'data-id': this.model.id,\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-builder-main',\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-course-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tvar self = this;\n\n\t\t\t// this.listenTo( this.model, 'sync', this.render );\n\t\t\tthis.render();\n\n\t\t\tthis.sectionListView = new SectionListView( {\n\t\t\t\tcollection: this.model.get( 'sections' ),\n\t\t\t} );\n\t\t\tthis.sectionListView.render();\n\t\t\t// drag and drop start\n\t\t\tthis.sectionListView.on( 'sortStart', this.sectionListView.sortable_start );\n\t\t\t// drag and drop stop\n\t\t\tthis.sectionListView.on( 'sortStop', this.sectionListView.sortable_stop );\n\t\t\t// selection changes\n\t\t\tthis.sectionListView.on( 'selectionChanged', this.active_section_change );\n\t\t\t// \"select\" a section when it's added to the course\n\t\t\tthis.listenTo( this.model.get( 'sections'), 'add', this.on_section_add );\n\n\t\t\tBackbone.pubSub.on( 'section-toggle', this.on_section_toggle, this );\n\n\t\t\tBackbone.pubSub.on( 'expand-section', this.expand_section, this );\n\n\t\t\tBackbone.pubSub.on( 'lesson-selected', this.active_lesson_change, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\trender: function() {\n\t\t\tthis.$el.html( this.template( this.model ) );\n\t\t\treturn this;\n\t\t},\n\n\t\tactive_lesson_change: function( model ) {\n\n\t\t\t// set parent section to be active\n\t\t\tvar section = this.model.get( 'sections' ).get( model.get( 'parent_section' ) );\n\t\t\tthis.sectionListView.setSelectedModel( section );\n\n\t\t},\n\n\t\t/**\n\t\t * When a section \"selection\" changes in the list\n\t\t * Update each section model so we can figure out which one is selected from other views\n\t\t * @param    array   current   array of selected models\n\t\t * @param    array   previous  array of previously selected models\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tactive_section_change: function( current, previous ) {\n\n\t\t\t_.each( current, function( model ) {\n\t\t\t\tmodel.set( '_selected', true );\n\t\t\t} );\n\n\t\t\t_.each( previous, function( model ) {\n\t\t\t\tmodel.set( '_selected', false );\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * \"Selects\" the new section when it's added to the course\n\t\t * @param    obj   model  Section model that's just been added\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_section_add: function( model ) {\n\n\t\t\tthis.sectionListView.setSelectedModel( model );\n\n\t\t},\n\n\t\t/**\n\t\t * When expanding/collapsing sections\n\t\t * if collapsing, unselect, if expanding, select\n\t\t * @param    obj   model  toggled section\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_section_toggle: function( model ) {\n\n\t\t\tvar selected = model.get( '_expanded' ) ? [ model ] : [];\n\t\t\tthis.sectionListView.setSelectedModels( selected );\n\n\t\t}\n\n\t}, Editable ) );\n\n} );\n\n","/**\n * Sidebar Elements View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/LessonEditor',[], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\tel: '#llms-editor-lesson',\n\n\t\tinitialize: function( data ) {\n\n\t\t\tthis.model = data.lesson;\n\n\t\t},\n\n\t\trender: function() {\n\n\t\t\tthis.$el.html( LLMS.l10n.translate( 'Lesson editing coming soon...' ) );\n\n\t\t},\n\n\t} );\n\n\t// return Backbone.Form.extend( {\n\n\t// \t/**\n\t// \t * HTML element selector\n\t// \t * @type  {String}\n\t// \t */\n\t// \tel: '#llms-editor-lesson',\n\n\t// \tattach: function() {\n\t// \t\t$( '#llms-editor-lesson' ).html( this.el );\n\t// \t\tthis.bind_events();\n\t// \t},\n\n\t// \tbind_events: function() {\n\n\t// \t\tvar self = this;\n\n\t// \t\t_.each( this.schema, function( field, name ) {\n\n\t// \t\t\tif ( 'Wysiwyg' === field.type ) {\n\t// \t\t\t\tself.fields[ name ].editor.load_tinymce();\n\t// \t\t\t}\n\n\t// \t\t\tself.on( name + ':blur', function( form, editor ) {\n\n\t// \t\t\t\tform.commit();\n\n\t// \t\t\t} );\n\n\t// \t\t} );\n\n\t// \t},\n\n\t// } );\n\n} );\n\n","/**\n * Single Quiz View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/Popover',[], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\tdefaults: {\n\t\t\tplacement: 'auto',\n\t\t\t// container: document.body,\n\t\t\twidth: 'auto',\n\t\t\ttrigger: 'manual',\n\t\t\tstyle: 'light',\n\t\t\tanimation: 'pop',\n\t\t\ttitle: '',\n\t\t\tcontent: '',\n\t\t\tcloseable: false,\n\t\t\tbackdrop: false,\n\t\t\tonShow: function( $el ) {},\n\t\t\tonHide: function( $el ) {},\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.14.1\n\t\t * @version  3.14.1\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\tif ( this.$el.length ) {\n\t\t\t\tthis.defaults.container = this.$el.parent();\n\t\t\t}\n\n\t\t\tthis.args = _.defaults( data.args, this.defaults );\n\t\t\tthis.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.13.0\n\t\t * @version  3.13.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.webuiPopover( this.args );\n\t\t\treturn this;\n\n\t\t},\n\n\t\thide: function() {\n\n\t\t\tthis.$el.webuiPopover( 'hide' );\n\n\t\t},\n\n\t\tshow: function() {\n\n\t\t\tthis.$el.webuiPopover( 'show' );\n\n\t\t},\n\n\t} );\n\n} );\n\n","define( 'Views/QuizHeader',[ 'Views/_Editable' ], function( Editable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\tel: '#llms-quiz-header',\n\n\t\t/**\n\t\t * Events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: _.defaults( {\n\t\t\t'click a[href=\"#llms-quiz-settings\"]': 'toggle_settings',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'header',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-quiz-header-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tvar change_events = [\n\t\t\t\t'change:_points',\n\t\t\t\t'change:_show_settings',\n\t\t\t];\n\t\t\t_.each( change_events, function( event ) {\n\t\t\t\tthis.listenTo( this.model, event, this.render );\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model ) );\n\n\t\t\tthis.init_editor( 'quiz-desc--' + this.model.get( 'id' ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoggle_settings: function( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tvar val = this.model.get( '_show_settings' ) ? false : true;\n\t\t\tthis.model.set( '_show_settings', val );\n\n\t\t},\n\n\t}, Editable ) );\n\n} );\n\n","/**\n * Single Lesson View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionType',[ ], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\t/**\n\t\t * HTML class names\n\t\t * @type  {String}\n\t\t */\n\t\tclassName: 'llms-question-type',\n\n\t\tevents: {\n\t\t\t'click .llms-add-question': 'add_question',\n\t\t},\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-question-type-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-question-type-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\t\t\tthis.$el.html( this.template( this.model ) );\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Add a question of the selected type to the current quiz\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_question: function() {\n\n\t\t\tthis.quiz.add_question( {\n\t\t\t\t_expanded: true,\n\t\t\t\tchoices: this.model.get( 'default_choices' ) ? this.model.get( 'default_choices' ) : null,\n\t\t\t\tquestion_type: this.model,\n\t\t\t} );\n\n\t\t\tthis.quiz.trigger( 'new-question-added' );\n\n\t\t},\n\n\t\t// filter: function( term ) {\n\n\t\t// \tvar words = this.model.get_keywords().map( function( word ) {\n\t\t// \t\treturn word.toLowerCase();\n\t\t// \t} );\n\n\t\t// \tterm = term.toLowerCase();\n\n\t\t// \tif ( -1 === words.indexOf( term ) ) {\n\t\t// \t\tthis.$el.addClass( 'filtered' );\n\t\t// \t} else {\n\t\t// \t\tthis.$el.removeClass( 'filtered' );\n\t\t// \t}\n\n\t\t// },\n\n\t\t// clear_filter: function() {\n\t\t// \tthis.$el.removeClass( 'filtered' );\n\t\t// }\n\n\t} );\n\n} );\n\n","/**\n * Quiz question bank view\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionBank',[ 'Views/QuestionType' ], function( QuestionView ) {\n\n\treturn Backbone.CollectionView.extend( {\n\n\t\tclassName: 'llms-question',\n\n\t\t/**\n\t\t * Parent element\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-question-bank',\n\n\t\t/**\n\t\t * Section model\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: QuestionView,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: false,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: false,\n\n\t} );\n\n} );\n\n","/**\n * Single Question Choice View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionChoice',[ 'Views/_Editable', ], function( Editable ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * HTML class names\n\t\t * @type  {String}\n\t\t */\n\t\tclassName: 'llms-question-choice',\n\n\t\tevents: _.defaults( {\n\t\t\t'change input[name=\"correct\"]': 'toggle_correct',\n\t\t\t'click .llms-action-icon[href=\"#llms-add-choice\"]': 'add_choice',\n\t\t\t'click .llms-action-icon[href=\"#llms-del-choice\"]': 'del_choice',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-question-choice-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-question-choice-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.14.1\n\t\t * @version  3.14.1\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tthis.render();\n\n\t\t\tthis.listenTo( this.model.collection, 'add', this.maybe_disable_buttons );\n\t\t\tthis.listenTo( this.model, 'change', this.render );\n\n\t\t\tif ( 'image' === this.model.get( 'choice_type' ) ) {\n\t\t\t\tthis.listenTo( this.model.get( 'choice' ), 'change', this.render );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\t\t\tthis.$el.html( this.template( this.model ) );\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Add a new choice to the current choice list\n\t\t * Adds *after* the clicked choice\n\t\t * @param    obj   event  JS event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_choice: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\n\t\t\tvar index = this.model.collection.indexOf( this.model );\n\t\t\tthis.model.collection.parent.add_choice( {}, {\n\t\t\t\tat: index + 1,\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Delete the choice from the choice list & ensure there's at least one correct choice\n\t\t * @param    obj   event  js event obj\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdel_choice: function( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'model-trashed', this.model );\n\t\t\tthis.model.collection.remove( this.model );\n\n\t\t},\n\n\t\t/**\n\t\t * When the correct answer input changes sync status to model\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ttoggle_correct: function() {\n\n\t\t\tvar correct = this.$el.find( 'input[name=\"correct\"]' ).is( ':checked' );\n\t\t\tthis.model.set( 'correct', correct );\n\t\t\tthis.model.collection.trigger( 'correct-update', this.model );\n\n\t\t},\n\n\t}, Editable ) );\n\n} );\n\n","/**\n * Quiz question bank view\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionChoiceList',[ 'Views/QuestionChoice' ], function( ChoiceView ) {\n\n\treturn Backbone.CollectionView.extend( {\n\n\t\tclassName: 'llms-quiz-questions',\n\n\t\t/**\n\t\t * Choice model view\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: ChoiceView,\n\n\t\t/**\n\t\t * Enable keyboard events\n\t\t * @type  {Bool}\n\t\t */\n\t\tprocessKeyEvents: false,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: false,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: true,\n\n\t\tsortableOptions: {\n\t\t\taxis: false,\n\t\t\t// connectWith: '.llms-lessons',\n\t\t\tcursor: 'move',\n\t\t\thandle: '.llms-choice-id',\n\t\t\titems: '.llms-question-choice',\n\t\t\tplaceholder: 'llms-question-choice llms-sortable-placeholder',\n\t\t},\n\n\t\tsortable_start: function( model ) {\n\t\t\tthis.$el.addClass( 'dragging' );\n\t\t},\n\n\t\tsortable_stop: function( model ) {\n\t\t\tthis.$el.removeClass( 'dragging' );\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Single Question View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Question',[\n\t\t'Views/_Editable',\n\t\t'Views/QuestionChoiceList'\n\t], function(\n\t\tEditable,\n\t\tChoiceListView\n\t) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Generate CSS classes for the question\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tclassName: function() {\n\t\t\treturn 'llms-question qtype--' + this.model.get( 'question_type' ).get( 'id' );\n\t\t},\n\n\t\tevents: _.defaults( {\n\t\t\t'click .clone--question': 'clone',\n\t\t\t'click .delete--question': 'delete',\n\t\t\t'click .expand--question': 'expand',\n\t\t\t'click .collapse--question': 'collapse',\n\t\t\t'change input[name=\"question_points\"]': 'update_points',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * HTML element wrapper ID attribute\n\t\t * @return   string\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tid: function() {\n\t\t\treturn 'llms-question-' + this.model.id;\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'li',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-question-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\tvar change_events = [\n\t\t\t\t'change:_expanded',\n\t\t\t\t'change:menu_order',\n\t\t\t];\n\t\t\t_.each( change_events, function( event ) {\n\t\t\t\tthis.listenTo( this.model, event, this.render );\n\t\t\t}, this );\n\n\t\t\tthis.listenTo( this.model.get( 'image' ), 'change', this.render );\n\n\t\t\tthis.listenTo( this.model.get_parent(), 'change:_points', this.render_points_percentage );\n\n\t\t\tthis.on( 'multi_choices_toggle', this.multi_choices_toggle, this );\n\n\t\t\tBackbone.pubSub.on( 'del-question-choice', this.del_choice, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model ) );\n\n\t\t\tif ( this.model.get( 'question_type').get( 'choices' ) ) {\n\n\t\t\t\tthis.choiceListView = new ChoiceListView( {\n\t\t\t\t\tel: this.$el.find( '.llms-question-choices' ),\n\t\t\t\t\tcollection: this.model.get( 'choices' ),\n\t\t\t\t} );\n\t\t\t\tthis.choiceListView.render();\n\t\t\t\tthis.choiceListView.on( 'sortStart', this.choiceListView.sortable_start );\n\t\t\t\tthis.choiceListView.on( 'sortStop', this.choiceListView.sortable_stop );\n\n\t\t\t}\n\n\t\t\tif ( 'group' === this.model.get( 'question_type' ).get( 'id' ) ) {\n\n\t\t\t\tvar self = this;\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\tself.questionListView = self.collectionListView.quiz.get_question_list( {\n\t\t\t\t\t\tel: self.$el.find( '.llms-quiz-questions' ),\n\t\t\t\t\t\tcollection: self.model.get( 'questions' ),\n\t\t\t\t\t} );\n\t\t\t\t\tself.questionListView.render();\n\t\t\t\t\tself.questionListView.on( 'sortStart', self.questionListView.sortable_start );\n\t\t\t\t\tself.questionListView.on( 'sortStop', self.questionListView.sortable_stop );\n\t\t\t\t}, 1 );\n\n\t\t\t}\n\n\t\t\tif ( this.model.get( 'description_enabled' ) ) {\n\t\t\t\tthis.init_editor( 'question-desc--' + this.model.get( 'id' ) );\n\t\t\t}\n\n\t\t\tif ( this.model.get( 'clarifications_enabled' ) ) {\n\t\t\t\tthis.init_editor( 'question-clarifications--' + this.model.get( 'id' ), {\n\t\t\t\t\tmediaButtons: false,\n\t\t\t\t\ttinymce: {\n\t\t\t\t\t\ttoolbar1: 'bold,italic,strikethrough,bullist,numlist,alignleft,aligncenter,alignright',\n\t\t\t\t\t\ttoolbar2: '',\n\t\t\t\t\t\tsetup: _.bind( this.on_editor_ready, this ),\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tthis.init_formatting_els();\n\t\t\tthis.init_selects();\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * rerender points percentage when question points are updated\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender_points_percentage: function() {\n\n\t\t\tthis.$el.find( '.llms-question-points' ).attr( 'data-tip', this.model.get_points_percentage() );\n\n\t\t},\n\n\t\t/**\n\t\t * Click event to duplicate a question within a quiz\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tclone: function( event ) {\n\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tthis.model.collection.add( this._get_question_clone( this.model ) );\n\n\t\t},\n\n\t\t/**\n\t\t * Recursive clone function which will correctly clone children of a question\n\t\t * @param    obj   question  queston model\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_get_question_clone: function( question ) {\n\n\t\t\t// create a duplicate\n\t\t\tvar clone = _.clone( question.attributes );\n\n\t\t\t// remove id (we want the duplicate to have a temp id)\n\t\t\tdelete clone.id;\n\n\t\t\tclone.parent_id = question.get( 'id' );\n\n\t\t\t// set the question type ID\n\t\t\tclone.question_type = question.get( 'question_type' ).get( 'id' );\n\n\t\t\t// clone the image attributes seperately\n\t\t\tclone.image = _.clone( question.get( 'image' ).attributes );\n\n\t\t\t// if it has choices clone all the choices\n\t\t\tif ( question.get( 'choices' ) ) {\n\n\t\t\t\tclone.choices = [];\n\n\t\t\t\tquestion.get( 'choices' ).each( function ( choice ) {\n\n\t\t\t\t\tvar choice_clone = _.clone( choice.attributes );\n\t\t\t\t\tdelete choice_clone.id;\n\t\t\t\t\tdelete choice_clone.question_id;\n\n\t\t\t\t\tclone.choices.push( choice_clone );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( 'group' === question.get( 'question_type' ).get( 'id' ) ) {\n\n\t\t\t\tclone.questions = [];\n\t\t\t\tquestion.get( 'questions' ).each( function( child ) {\n\t\t\t\t\tclone.questions.push( this._get_question_clone( child ) );\n\t\t\t\t}, this );\n\n\t\t\t}\n\n\t\t\treturn clone;\n\n\t\t},\n\n\t\t/**\n\t\t * Collapse a question and hide it's settings\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcollapse: function() {\n\n\t\t\tthis.model.set( '_expanded', false );\n\n\t\t},\n\n\t\t/**\n\t\t * Delete the question from a quiz / question group\n\t\t * @param    obj   event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tdelete: function( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( window.confirm( LLMS.l10n.translate( 'Are you sure you want to delete this question?' ) ) ) {\n\n\t\t\t\tthis.model.collection.remove( this.model );\n\t\t\t\tBackbone.pubSub.trigger( 'model-trashed', this.model );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Click event to reveal a question's settings & choices\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\texpand: function() {\n\n\t\t\tthis.model.set( '_expanded', true );\n\n\t\t},\n\n\t\t/**\n\t\t * When toggling multiple correct answers *off* remove all correct choices except the first correct choice in the list\n\t\t * @param    string   val  value of the question's `multi_choice` attr [yes|no]\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tmulti_choices_toggle: function( val ) {\n\n\t\t\tif ( 'yes' === val ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.model.get( 'choices' ).update_correct( _.first( this.model.get( 'choices' ).get_correct() ) );\n\n\t\t},\n\n\t\t/**\n\t\t * Update the model's points when the value of the points input is updated\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tupdate_points: function() {\n\n\t\t\tthis.model.set( 'points', this.$el.find( 'input[name=\"question_points\"]' ).val() * 1 );\n\n\t\t}\n\n\t}, Editable ) );\n\n} );\n\n","/**\n * Quiz question bank view\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/QuestionList',[ 'Views/Question' ], function( QuestionView ) {\n\n\treturn Backbone.CollectionView.extend( {\n\n\t\tclassName: 'llms-quiz-questions',\n\n\t\t/**\n\t\t * Parent element\n\t\t * @type  {String}\n\t\t */\n\t\t// el: '#llms-quiz-questions',\n\n\t\t/**\n\t\t * Section model\n\t\t * @type  {[type]}\n\t\t */\n\t\tmodelView: QuestionView,\n\n\t\t/**\n\t\t * Enable keyboard events\n\t\t * @type  {Bool}\n\t\t */\n\t\tprocessKeyEvents: false,\n\n\t\t/**\n\t\t * Are sections selectable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tselectable: false,\n\n\t\t/**\n\t\t * Are sections sortable?\n\t\t * @type  {Bool}\n\t\t */\n\t\tsortable: true,\n\n\t\tsortableOptions: {\n\t\t\taxis: false,\n\t\t\tconnectWith: '.llms-quiz-questions',\n\t\t\tcursor: 'move',\n\t\t\thandle: '.llms-data-stamp',\n\t\t\titems: '.llms-question',\n\t\t\tplaceholder: 'llms-question llms-sortable-placeholder',\n\t\t},\n\n\t\t/**\n\t\t * Highlight drop areas when dragging starts\n\t\t * @param    obj   model  model being sorted\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tsortable_start: function( model ) {\n\t\t\tvar selector = 'group' === model.get( 'question_type' ).get( 'id' ) ? '.llms-editor-tab > .llms-quiz-questions' : '.llms-quiz-questions';\n\t\t\t$( selector ).addClass( 'dragging' );\n\t\t},\n\n\t\t/**\n\t\t * Remove highlights when dragging stops\n\t\t * @param    obj   model  model being sorted\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tsortable_stop: function() {\n\t\t\t$( '.llms-quiz-questions' ).removeClass( 'dragging' );\n\t\t},\n\n\t\t/**\n\t\t * Overrides receive to ensure that question groups can't be moved into queston groups\n\t\t * @param    obj   event  js event object\n\t\t * @param    obj   ui     jQuery UI Sortable ui object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_receive : function( event, ui ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\t// prevent moving a question group into a question group\n\t\t\tif ( ui.item.hasClass( 'qtype--group' ) && $( event.target ).closest( '.qtype--group' ).length ) {;\n\t\t\t\tui.sender.sortable( 'cancel' );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar senderListEl = ui.sender;\n\t\t\tvar senderCollectionListView = senderListEl.data( \"view\" );\n\t\t\tif( ! senderCollectionListView || ! senderCollectionListView.collection ) return;\n\n\t\t\tvar newIndex = this._getContainerEl().children().index( ui.item );\n\t\t\tvar modelReceived = senderCollectionListView.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\t\t\tsenderCollectionListView.collection.remove( modelReceived );\n\t\t\tthis.collection.add( modelReceived, { at : newIndex } );\n\t\t\tmodelReceived.collection = this.collection; // otherwise will not get properly set, since modelReceived.collection might already have a value.\n\t\t\tthis.setSelectedModel( modelReceived );\n\t\t},\n\n\t\t/**\n\t\t * Override to allow manipulatino of placeholder element\n\t\t * @param    {[type]}   event  [description]\n\t\t * @param    {[type]}   ui     [description]\n\t\t * @return   {[type]}\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_sortStart : function( event, ui ) {\n\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( \"data-model-cid\" ) );\n\n\t\t\tui.placeholder.addClass( 'qtype--' + modelBeingSorted.get( 'question_type' ).get( 'id' ) );\n\n\t\t\tif( this._isBackboneCourierAvailable() )\n\t\t\t\tthis.spawn( \"sortStart\", { modelBeingSorted : modelBeingSorted } );\n\t\t\telse this.trigger( \"sortStart\", modelBeingSorted );\n\t\t},\n\n\t\t/**\n\t\t * Overloads the function from Backbone.CollectionView core because it doesn't send stop events\n\t\t * if moving from one sortable to another... :-(\n\t\t * @param    obj   event  js event object\n\t\t * @param    obj   ui     jQuery UI object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\t_sortStop : function( event, ui ) {\n\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar modelBeingSorted = this.collection.get( ui.item.attr( 'data-model-cid' ) ),\n\t\t\t\tmodelViewContainerEl = this._getContainerEl(),\n\t\t\t\tnewIndex = modelViewContainerEl.children().index( ui.item );\n\n\t\t\tif ( newIndex == -1 && modelBeingSorted ) {\n\t\t\t\tthis.collection.remove( modelBeingSorted );\n\t\t\t}\n\n\t\t\tthis._reorderCollectionBasedOnHTML();\n\t\t\tthis.updateDependentControls();\n\n\t\t\tif( this._isBackboneCourierAvailable() ) {\n\t\t\t\tthis.spawn( 'sortStop', { modelBeingSorted : modelBeingSorted, newIndex : newIndex } );\n\t\t\t} else {\n\t\t\t\tthis.trigger( 'sortStop', modelBeingSorted, newIndex );\n\t\t\t}\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Subview utility mixin\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/_Subview',[], function() {\n\n\treturn {\n\n\t\tsubscriptions: {},\n\n\t\t/**\n\t\t * Name of the current subview\n\t\t * @type  {String}\n\t\t */\n\t\tstate: '',\n\n\t\t/**\n\t\t * Object of subview data\n\t\t * @type  {Object}\n\t\t */\n\t\tviews: {},\n\n\t\t/**\n\t\t * Retrieve a subview by name from this.views\n\t\t * @param    string   name   name of the subview\n\t\t * @return   obl|false\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tget_subview: function( name ) {\n\n\t\t\tif ( this.views[ name ] ) {\n\t\t\t\treturn this.views[ name ];\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tevents_subscribe: function( events ) {\n\n\t\t\t_.each( events, function( func, event ) {\n\n\t\t\t\tthis.subscriptions[ event ] = func;\n\t\t\t\tBackbone.pubSub.on( event, func, this );\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\tevents_unsubscribe: function() {\n\n\t\t\t_.each( this.subscriptions, function( func, event ) {\n\n\t\t\t\tBackbone.pubSub.off( event, func, this );\n\t\t\t\tdelete this.subscriptions[ event ];\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Remove a single subview (and all it's subviews) by name\n\t\t * @param    string   name   name of the subview\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tremove_subview: function( name ) {\n\n\t\t\tvar view = this.get_subview( name );\n\n\t\t\tif ( ! view ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( view.instance ) {\n\n\t\t\t\t// remove the subviews if the view has subviews\n\t\t\t\tif ( ! _.isEmpty( view.instance.views ) ) {\n\t\t\t\t\tview.instance.events_unsubscribe();\n\t\t\t\t\tview.instance.remove_subviews();\n\t\t\t\t}\n\n\t\t\t\tview.instance.off();\n\t\t\t\tview.instance.off( null, null, null );\n\t\t\t\tview.instance.remove();\n\t\t\t\tview.instance.undelegateEvents();\n\n\t\t\t\t// _.each( view.instance, function( val, key ) {\n\t\t\t\t// \tdelete view.instance[ key ];\n\t\t\t\t// } );\n\n\t\t\t\tview.instance = null;\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Remove all subviews (and all the subviews of those subviews)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tremove_subviews: function() {\n\n\t\t\t_.each( this.views, function( data, name ) {\n\n\t\t\t\tthis.remove_subview( name );\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Render subviews based on current state\n\t\t * @param    obj   view_data  additional data to pass to the subviews\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender_subviews: function( view_data ) {\n\n\t\t\tview_data = view_data || {};\n\n\t\t\t_.each( this.views, function( data, name ) {\n\n\t\t\t\tif ( this.state === data.state ) {\n\n\t\t\t\t\tthis.render_subview( name, view_data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.remove_subview( name );\n\n\t\t\t\t}\n\n\t\t\t}, this );\n\n\t\t},\n\n\t\t/**\n\t\t * Render a single subview by name\n\t\t * @param    string   name       name of the subview\n\t\t * @param    obj      view_data  additional data to pass to the subview initializer\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender_subview: function( name, view_data ) {\n\n\t\t\tvar view = this.get_subview( name );\n\n\t\t\tif ( ! view ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.remove_subview( name );\n\n\t\t\tif ( ! view.instance ) {\n\t\t\t\tview.instance = new view.class( view_data );\n\t\t\t}\n\n\t\t\tview.instance.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Set the current subview\n\t\t * Must call render after!\n\t\t * @param    string   state  name of the state [builder|editor]\n\t\t * @return   obj             this for chaining\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tset_state: function ( state ) {\n\n\t\t\tthis.state = state;\n\t\t\treturn this;\n\n\t\t},\n\n\t}\n\n} );\n\n","/**\n * Single Quiz View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Quiz',[\n\t\t'Models/Quiz',\n\t\t'Views/Popover',\n\t\t'Views/QuizHeader',\n\t\t'Views/QuestionBank',\n\t\t'Views/QuestionList',\n\t\t'Views/_Editable',\n\t\t'Views/_Subview'\n\t], function(\n\t\tQuizModel,\n\t\tPopover,\n\t\tQuizHeader,\n\t\tQuestionBank,\n\t\tQuestionList,\n\t\tEditable,\n\t\tSubview\n\t) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Current view state\n\t\t * @type  {String}\n\t\t */\n\t\tstate: 'default', // [lesson|quiz]\n\n\t\t/**\n\t\t * Current Subviews\n\t\t * @type  {Object}\n\t\t */\n\t\tviews: {\n\t\t\theader: {\n\t\t\t\tclass: QuizHeader,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'default',\n\t\t\t},\n\t\t\tbank: {\n\t\t\t\tclass: QuestionBank,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'default',\n\t\t\t},\n\t\t\tlist: {\n\t\t\t\tclass: QuestionList,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'default',\n\t\t\t},\n\t\t},\n\n\t\tel: '#llms-editor-quiz',\n\n\t\t/**\n\t\t * Events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: _.defaults( {\n\t\t\t'click #llms-enable-quiz': 'enable_quiz',\n\t\t\t'click #llms-show-question-bank': 'show_tools',\n\t\t\t'click .bulk-toggle': 'bulk_toggle',\n\t\t\t// 'keyup #llms-question-bank-filter': 'filter_question_types',\n\t\t\t// 'search #llms-question-bank-filter': 'filter_question_types',\n\t\t}, Editable.events ),\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-quiz-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\tthis.lesson = data.lesson;\n\n\t\t\t// initialize the model if the quiz is enabled or it's disabled but we still have data for a quiz\n\t\t\tif ( 'yes' === this.lesson.get( 'quiz_enabled' ) || ! _.isEmpty( this.lesson.get( 'quiz' ) ) ) {\n\t\t\t\tthis.model = this.lesson.get( 'quiz' );\n\n\t\t\t\t/**\n\t\t\t\t * @todo  this is a terrilbe terrible patch\n\t\t\t\t *        I've spent nearly 3 days trying to figure out how to not use this line of code\n\t\t\t\t *        ISSUE REPRODUCTION:\n\t\t\t\t *        Open course builder\n\t\t\t\t *        Open a lesson (A) and add a quiz\n\t\t\t\t *        Switch to a new lesson (B)\n\t\t\t\t *        Add a new quiz\n\t\t\t\t *        Return to lesson A and the quizzes parent will be set to LESSON B\n\t\t\t\t *        This will happen for *every* quiz in the builder...\n\t\t\t\t *        Adding this set_parent on init guarantees that the quizzes correct parent is set\n\t\t\t\t *        after adding new quizzes to other lessons\n\t\t\t\t *        it's awful and it's gross...\n\t\t\t\t *        I'm confused and tired and going to miss release dates again because of it\n\t\t\t\t */\n\t\t\t\tthis.model.set_parent( this.lesson );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template( this.model ) );\n\n\t\t\t// render the quiz builder\n\t\t\tif ( this.model ) {\n\n\t\t\t\tthis.render_subview( 'header', {\n\t\t\t\t\tmodel: this.model,\n\t\t\t\t} );\n\n\t\t\t\tthis.render_subview( 'bank', {\n\t\t\t\t\tcollection: window.llms_builder.questions,\n\t\t\t\t} );\n\n\t\t\t\tvar last_group = null,\n\t\t\t\t\tgroup = null;\n\t\t\t\t// let all the question types reference the quiz for adding questions quickly\n\t\t\t\tthis.get_subview( 'bank' ).instance.viewManager.each( function( view ) {\n\n\t\t\t\t\tview.quiz = this.model;\n\n\t\t\t\t\tgroup = view.model.get( 'group' ).name;\n\n\t\t\t\t\tif ( last_group !== group ) {\n\t\t\t\t\t\tlast_group = group;\n\t\t\t\t\t\tview.$el.before( '<li class=\"llms-question-bank-header\"><h4>' + group + '</h4></li>' );\n\t\t\t\t\t}\n\n\t\t\t\t}, this );\n\n\t\t\t\tthis.render_subview( 'list', {\n\t\t\t\t\tel: '#llms-quiz-questions',\n\t\t\t\t\tcollection: this.model.get( 'questions' ),\n\t\t\t\t} );\n\t\t\t\tvar list = this.get_subview( 'list' ).instance;\n\t\t\t\tlist.quiz = this;\n\t\t\t\tlist.collection.on( 'add', function() {\n\t\t\t\t\tlist.collection.trigger( 'reorder' );\n\t\t\t\t}, this );\n\t\t\t\tlist.on( 'sortStart', list.sortable_start );\n\t\t\t\tlist.on( 'sortStop', list.sortable_stop );\n\n\t\t\t\tthis.model.on( 'new-question-added', function() {\n\t\t\t\t\tvar $questions = this.$el.find( '#llms-quiz-questions' );\n\t\t\t\t\t$questions.animate( { scrollTop: $questions.prop( 'scrollHeight' ) }, 200 );\n\t\t\t\t}, this );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Bulk expand / collapse question buttons\n\t\t * @param    obj   event  js event object\n\t\t * @return   obj\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tbulk_toggle: function( event ) {\n\n\t\t\tvar expanded = ( 'expand' === $( event.target ).attr( 'data-action' ) );\n\n\t\t\tthis.model.get( 'questions' ).each( function( question ) {\n\t\t\t\tquestion.set( '_expanded', expanded );\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Adds a new quiz to a lesson which currently has no quiz associated with it\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tenable_quiz: function() {\n\n\t\t\tvar quiz = this.lesson.get( 'quiz' );\n\t\t\tif ( _.isEmpty( quiz ) ) {\n\t\t\t\tquiz = this.lesson.add_quiz();\n\t\t\t} else {\n\t\t\t\tthis.lesson.set( 'quiz_enabled', 'yes' );\n\t\t\t}\n\n\t\t\tthis.model = quiz;\n\t\t\tthis.render();\n\n\t\t},\n\n\t\t// filter_question_types: _.debounce( function( event ) {\n\n\t\t// \tvar term = $( event.target ).val();\n\n\t\t// \tthis.QuestionBankView.viewManager.each( function( view ) {\n\t\t// \t\tif ( ! term ) {\n\t\t// \t\t\tview.clear_filter();\n\t\t// \t\t} else {\n\t\t// \t\t\tview.filter( term );\n\t\t// \t\t}\n\t\t// \t} );\n\n\n\t\t// }, 300 ),\n\n\t\t/**\n\t\t * \"Add Question\" button click event\n\t\t * Creates a popover with question type list interface\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tshow_tools: function() {\n\n\t\t\t// create popover\n\t\t\tvar pop = new Popover( {\n\t\t\t\tel: '#llms-show-question-bank',\n\t\t\t\targs: {\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\tcloseable: true,\n\t\t\t\t\tcontainer: '#llms-builder-sidebar',\n\t\t\t\t\tdismissible: true,\n\t\t\t\t\tplacement: 'top-left',\n\t\t\t\t\twidth: 'calc( 100% - 40px )',\n\t\t\t\t\ttitle: LLMS.l10n.translate( 'Add a Question' ),\n\t\t\t\t\turl: '#llms-quiz-tools',\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// show it\n\t\t\tpop.show();\n\n\t\t\t// if a question is added, hide the popover\n\t\t\tthis.model.on( 'new-question-added', function() {\n\t\t\t\tpop.hide();\n\t\t\t} );\n\n\t\t},\n\n\t\tget_question_list: function( options ) {\n\t\t\treturn new QuestionList( options );\n\t\t}\n\n\t}, Editable, Subview ) );\n\n} );\n\n","/**\n * Sidebar Editor View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Editor',[ 'Views/LessonEditor', 'Views/Quiz', 'Views/_Subview' ], function( LessonEditor, Quiz, Subview ) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Current view state\n\t\t * @type  {String}\n\t\t */\n\t\tstate: 'lesson', // [lesson|quiz]\n\n\t\t/**\n\t\t * Current Subviews\n\t\t * @type  {Object}\n\t\t */\n\t\tviews: {\n\t\t\tlesson: {\n\t\t\t\tclass: LessonEditor,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'lesson',\n\t\t\t},\n\t\t\tquiz: {\n\t\t\t\tclass: Quiz,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'quiz',\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-editor',\n\n\t\tevents: {\n\t\t\t'click .llms-editor-nav a[href=\"#llms-editor-close\"]': 'close_editor',\n\t\t\t'click .llms-editor-nav a:not([href=\"#llms-editor-close\"])': 'switch_tab',\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-editor-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\tthis.SidebarView = data.SidebarView;\n\t\t\tif ( data.tab ) {\n\t\t\t\tthis.state = data.tab;\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function( view_data ) {\n\n\t\t\tview_data = view_data || {};\n\n\t\t\tthis.$el.html( this.template( this ) );\n\n\t\t\tthis.render_subviews( _.extend( view_data, {\n\t\t\t\tlesson: this.model,\n\t\t\t} ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for close sidebar editor button\n\t\t * Sends event to main SidebarView to trigger editor closing events\n\t\t * @param    obj   event  js event obj\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tclose_editor: function( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'sidebar-editor-close' );\n\n\t\t},\n\n\t\t/**\n\t\t * Click event for switching tabs in the editor navigation\n\t\t * @param    object  event  js event object\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tswitch_tab: function( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar $btn = $( event.target ),\n\t\t\t\tview = $btn.attr( 'data-view' ),\n\t\t\t\t$tab = this.$el.find( $btn.attr( 'href' ) );\n\n\t\t\tthis.set_state( view ).render();\n\n\t\t\t// Backbone.pubSub.trigger( 'editor-tab-activated', $btn.attr( 'href' ).substring( 1 ) );\n\n\t\t},\n\n\t}, Subview ) );\n\n} );\n\n","/**\n * Existing Lesson Popover content View\n * @since    3.13.0\n * @version  3.16.0\n */\ndefine( 'Views/LessonSearch',[], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\t/**\n\t\t * DOM Events\n\t\t * @type     obj\n\t\t * @since    3.14.4\n\t\t * @version  3.14.4\n\t\t */\n\t\tevents: {\n\t\t\t'select2:select': 'add_lesson',\n\t\t},\n\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'select',\n\n\t\t/**\n\t\t * Select event, adds the existing lesson to the course\n\t\t * @param    obj   event  select2:select event object\n\t\t * @since    3.14.4\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_lesson: function( event ) {\n\n\t\t\tBackbone.pubSub.trigger( 'lesson-search-select', event.params.data, event );\n\n\t\t\tthis.$el.val( null ).trigger( 'change' );\n\n\t\t},\n\n\t\t/**\n\t\t * Render the section\n\t\t * Initalizes a new collection and views for all lessons in the section\n\t\t * @return   void\n\t\t * @since    3.14.4\n\t\t * @version  3.14.4\n\t\t */\n\t\trender: function() {\n\t\t\tvar self = this;\n\t\t\tsetTimeout( function () {\n\t\t\t\tself.$el.llmsSelect2( {\n\t\t\t\t\tajax: {\n\t\t\t\t\t\tdataType: 'JSON',\n\t\t\t\t\t\tdelay: 250,\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: window.ajaxurl,\n\t\t\t\t\t\tdata: function( params ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\taction: 'llms_builder',\n\t\t\t\t\t\t\t\taction_type: 'search',\n\t\t\t\t\t\t\t\tcourse_id: window.llms_builder.course.id,\n\t\t\t\t\t\t\t\tterm: params.term,\n\t\t\t\t\t\t\t\tpage: params.page,\n\t\t\t\t\t\t\t\t_ajax_nonce: wp_ajax_data.nonce,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// error: function( xhr, status, error ) {\n\t\t\t\t\t\t// \tconsole.log( status, error );\n\t\t\t\t\t\t// },\n\t\t\t\t\t},\n\t\t\t\t\tdropdownParent: $( '.webui-popover-inner' ),\n\t\t\t\t\t// don't escape html from render_result\n\t\t\t\t\tescapeMarkup: function( markup ) {\n\t\t\t\t\t\treturn markup;\n\t\t\t\t\t},\n\t\t\t\t\tplaceholder: LLMS.l10n.translate( 'Search for existing lessons...' ),\n\t\t\t\t\ttemplateResult: self.render_result,\n\t\t\t\t\twidth: '100%',\n\t\t\t\t} );\n\t\t\t}, 0 );\n\t\t\treturn this;\n\n\t\t},\n\n\t\trender_result: function( res ) {\n\n\t\t\tvar $html = $( '<div class=\"llms-existing-lesson-result\" />' );\n\n\t\t\tif ( res.loading ) {\n\t\t\t\treturn $html.append( res.text );\n\t\t\t}\n\n\t\t\tvar $side = $( '<aside class=\"llms-existing-action\" />' ),\n\t\t\t\t$main = $( '<div class=\"llms-existing-info\" />' );\n\t\t\t\ticon = ( 'attach' === res.action ) ? 'paperclip' : 'clone',\n\t\t\t\ttext = ( 'attach' === res.action ) ? 'Attach' : 'Clone';\n\n\t\t\ttext = LLMS.l10n.translate( text );\n\n\t\t\t$side.append( '<i class=\"fa fa-' + icon + '\" aria-hidden=\"true\"></i><small>' + text + '</small>' );\n\n\t\t\t$main.append( '<h4>' + res.data.title + '</h4>' );\n\t\t\t$main.append( '<h5>' + LLMS.l10n.translate( 'ID' ) + ': <em>' + res.data.id + '</em></h5>' );\n\t\t\tif ( res.course_title ) {\n\t\t\t\t$main.append( '<h5>' + LLMS.l10n.translate( 'Course' ) + ': <em>' + res.course_title + '</em></h5>' );\n\t\t\t}\n\n\t\t\treturn $html.append( $side ).append( $main );\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Sidebar Elements View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Elements',[ 'Models/Section', 'Views/Section', 'Models/Lesson', 'Views/Lesson', 'Views/Popover', 'Views/LessonSearch' ], function( Section, SectionView, Lesson, LessonView, Popover, LessonSearch ) {\n\n\treturn Backbone.View.extend( {\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-elements',\n\n\t\tevents: {\n\t\t\t'click #llms-new-section': 'add_new_section',\n\t\t\t'click #llms-new-lesson': 'add_new_lesson',\n\t\t\t'click #llms-existing-lesson': 'add_existing_lesson',\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-elements-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\t// save a reference to the main Course view\n\t\t\tthis.SidebarView = data.SidebarView;\n\n\t\t\t// watch course sections and enable/disable lesson buttons conditionally\n\t\t\tthis.listenTo( this.SidebarView.CourseView.model.get( 'sections' ), 'add', this.maybe_disable_buttons );\n\t\t\tthis.listenTo( this.SidebarView.CourseView.model.get( 'sections' ), 'remove', this.maybe_disable_buttons );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\n\t\t\tthis.$el.html( this.template() );\n\t\t\tthis.draggable();\n\t\t\tthis.maybe_disable_buttons();\n\n\t\t\treturn this;\n\t\t},\n\n\t\tdraggable: function() {\n\n\t\t\t$( '#llms-new-section' ).draggable( {\n\t\t\t\tappendTo: '#llms-sections',\n\t\t\t\tcancel: false,\n\t\t\t\tconnectToSortable: '.llms-sections',\n\t\t\t\thelper: function() {\n\t\t\t\t\treturn new SectionView( { model: new Section() } ).render().$el;\n\t\t\t\t},\n\t\t\t\tstart: function() {\n\t\t\t\t\t$( '.llms-sections' ).addClass( 'dragging' );\n\t\t\t\t},\n\t\t\t\tstop: function() {\n\t\t\t\t\t$( '.llms-sections' ).removeClass( 'dragging' );\n\t\t\t\t},\n\t\t\t} );\n\n\t\t\t$( '#llms-new-lesson' ).draggable( {\n\t\t\t\t// appendTo: '#llms-sections .llms-section:first-child .llms-lessons',\n\t\t\t\tappendTo: '#llms-sections',\n\t\t\t\tcancel: false,\n\t\t\t\tconnectToSortable: '.llms-lessons',\n\t\t\t\thelper: function() {\n\t\t\t\t\treturn new LessonView( { model: new Lesson() } ).render().$el;\n\t\t\t\t},\n\t\t\t\tstart: function() {\n\n\t\t\t\t\t$( '.llms-lessons' ).addClass( 'dragging' );\n\n\t\t\t\t},\n\t\t\t\tstop: function() {\n\t\t\t\t\t$( '.llms-lessons' ).removeClass( 'dragging' );\n\t\t\t\t\t$( '.drag-expanded' ).removeClass( '.drag-expanded' );\n\t\t\t\t},\n\t\t\t} );\n\n\t\t},\n\n\t\tadd_new_section: function( event ) {\n\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'add-new-section' );\n\t\t},\n\n\t\tadd_new_lesson: function( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'add-new-lesson' );\n\t\t},\n\n\t\tadd_existing_lesson: function( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar pop = new Popover( {\n\t\t\t\tel: '#llms-existing-lesson',\n\t\t\t\targs: {\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\tcloseable: true,\n\t\t\t\t\tcontainer: '.wrap.lifterlms.llms-builder',\n\t\t\t\t\tdismissible: true,\n\t\t\t\t\tplacement: 'left',\n\t\t\t\t\twidth: 480,\n\t\t\t\t\ttitle: LLMS.l10n.translate( 'Add Existing Lesson' ),\n\t\t\t\t\tcontent: new LessonSearch().render().$el,\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tpop.show();\n\t\t\tBackbone.pubSub.on( 'lesson-search-select', function() {\n\t\t\t\tpop.hide();\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Disables lesson add buttons if no sections are available to add a lesson to\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tmaybe_disable_buttons: function() {\n\n\t\t\tvar $els = $( '#llms-new-lesson, #llms-existing-lesson' );\n\n\t\t\tif ( ! this.SidebarView.CourseView.model.get( 'sections' ).length ) {\n\t\t\t\t$els.attr( 'disabled', 'disabled' );\n\t\t\t} else {\n\t\t\t\t$els.removeAttr( 'disabled' );\n\t\t\t}\n\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Sidebar Utilities View\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Utilities',[], function() {\n\n\treturn Backbone.View.extend( {\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-utilities',\n\n\t\tevents: {\n\t\t\t'click #llms-collapse-all': 'collapse_all',\n\t\t\t'click #llms-expand-all': 'expand_all'\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'div',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-utilities-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function() {\n\n\t\t\t// this.render();\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function() {\n\t\t\tthis.$el.html( this.template() );\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Collapse all sections\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tcollapse_all: function( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'collapse-all' );\n\t\t},\n\n\t\t/**\n\t\t * Expand all sections\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\texpand_all: function( event ) {\n\t\t\tevent.preventDefault();\n\t\t\tBackbone.pubSub.trigger( 'expand-all' );\n\t\t},\n\n\t} );\n\n} );\n\n","/**\n * Main sidebar view\n * @since    3.16.0\n * @version  3.16.0\n */\ndefine( 'Views/Sidebar',[\n\t\t'Views/Editor',\n\t\t'Views/Elements',\n\t\t'Views/Utilities',\n\t\t'Views/_Subview'\n\t], function(\n\t\tEditor,\n\t\tElements,\n\t\tUtilities,\n\t\tSubview\n\t) {\n\n\treturn Backbone.View.extend( _.defaults( {\n\n\t\t/**\n\t\t * Current builder state\n\t\t * @type  {String}\n\t\t */\n\t\tstate: 'builder', // [builder|editor]\n\n\t\t/**\n\t\t * Current Subviews\n\t\t * @type  {Object}\n\t\t */\n\t\tviews: {\n\t\t\telements: {\n\t\t\t\tclass: Elements,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'builder',\n\t\t\t},\n\t\t\tutilities: {\n\t\t\t\tclass: Utilities,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'builder',\n\t\t\t},\n\t\t\teditor: {\n\t\t\t\tclass: Editor,\n\t\t\t\tinstance: null,\n\t\t\t\tstate: 'editor',\n\t\t\t},\n\t\t},\n\n\t\t/**\n\t\t * HTML element selector\n\t\t * @type  {String}\n\t\t */\n\t\tel: '#llms-builder-sidebar',\n\n\t\t/**\n\t\t * DOM events\n\t\t * @type  {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click #llms-save-button': 'save_now',\n\t\t\t'click .llms-builder-error': 'clear_errors',\n\t\t},\n\n\t\t/**\n\t\t * Wrapper Tag name\n\t\t * @type  {String}\n\t\t */\n\t\ttagName: 'aside',\n\n\t\t/**\n\t\t * Get the underscore template\n\t\t * @type  {[type]}\n\t\t */\n\t\ttemplate: wp.template( 'llms-sidebar-template' ),\n\n\t\t/**\n\t\t * Initialization callback func (renders the element on screen)\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tinitialize: function( data ) {\n\n\t\t\t// save a reference to the main Course view\n\t\t\tthis.CourseView = data.CourseView;\n\n\t\t\tthis.render();\n\n\t\t\tBackbone.pubSub.on( 'current-save-status', this.changes_made, this );\n\n\t\t\tBackbone.pubSub.on( 'heartbeat-send', this.heartbeat_send, this );\n\t\t\tBackbone.pubSub.on( 'heartbeat-tick', this.heartbeat_tick, this );\n\n\t\t\tBackbone.pubSub.on( 'lesson-selected', this.on_lesson_select, this );\n\t\t\tBackbone.pubSub.on( 'sidebar-editor-close', this.on_editor_close, this );\n\n\t\t\tthis.$saveButton = $( '#llms-save-button' );\n\n\t\t},\n\n\t\t/**\n\t\t * Compiles the template and renders the view\n\t\t * @return   self (for chaining)\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\trender: function( view_data ) {\n\n\t\t\tview_data = view_data || {};\n\n\t\t\tthis.$el.html( this.template() );\n\n\t\t\tthis.render_subviews( _.extend( view_data, {\n\t\t\t\tSidebarView: this,\n\t\t\t} ) );\n\n\t\t\tvar $el = $( '.wrap.lifterlms.llms-builder' );\n\t\t\tif ( 'builder' === this.state ) {\n\t\t\t\t$el.removeClass( 'editor-active' );\n\t\t\t} else {\n\t\t\t\t$el.addClass( 'editor-active' );\n\t\t\t}\n\n\t\t\tthis.$saveButton = this.$el.find( '#llms-save-button' );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Adds error message element\n\t\t * @param    {[type]}   $err  [description]\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tadd_error: function( $err ) {\n\n\t\t\tthis.$el.find( '.llms-builder-save' ).prepend( $err );\n\n\t\t},\n\n\t\t/**\n\t\t * Clear any existing error message elements\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tclear_errors: function() {\n\n\t\t\tthis.$el.find( '.llms-builder-save .llms-builder-error' ).remove();\n\n\t\t},\n\n\t\t/**\n\t\t * Update save status button when changes are detected\n\t\t * runs on an interval to check status of course regularly for unsaved changes\n\t\t * @param    obj   sync  instance of the sync controller\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tchanges_made: function( sync ) {\n\n\t\t\t// if a save is currently running, don't do anything\n\t\t\tif ( sync.saving ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( sync.has_unsaved_changes ) {\n\n\t\t\t\tthis.$saveButton.attr( 'data-status', 'unsaved' );\n\t\t\t\tthis.$saveButton.removeAttr( 'disabled' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.$saveButton.attr( 'data-status', 'saved' );\n\t\t\t\tthis.$saveButton.attr( 'disabled', 'disabled' );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Triggered when a heartbeat send event starts containing builder information\n\t\t * @param    obj   sync  instance of the sync controller\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\theartbeat_send: function( sync ) {\n\n\t\t\tif ( sync.saving ) {\n\t\t\t\tLLMS.Spinner.start( this.$saveButton.find( 'i' ), 'small' );\n\t\t\t\tthis.$saveButton.attr( {\n\t\t\t\t\t'data-status': 'saving',\n\t\t\t\t\tdisabled: 'disabled',\n\t\t\t\t} );\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Triggered when a heartbeat tick completes and updates save status or appends errors\n\t\t * @param    obj   sync  instance of the sync controller\n\t\t * @param    obj   data  updated data\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\theartbeat_tick: function( sync, data ) {\n\n\t\t\tif ( ! sync.saving ) {\n\n\t\t\t\tvar status = 'saved';\n\n\t\t\t\tthis.clear_errors();\n\n\t\t\t\tif ( 'error' === data.status ) {\n\n\t\t\t\t\tstatus = 'error';\n\n\t\t\t\t\tvar msg = data.message,\n\t\t\t\t\t\t$err = $( '<ol class=\"llms-builder-error\" />' );\n\n\t\t\t\t\tif ( 'object' === typeof msg ) {\n\t\t\t\t\t\t_.each( msg, function( txt ) {\n\t\t\t\t\t\t\t$err.append( '<li>' + txt + '</li>' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$err = $err.append( '<li>' + msg + '</li>' );;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.add_error( $err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.$saveButton.find( '.llms-spinning' ).remove();\n\t\t\t\tthis.$saveButton.attr( {\n\t\t\t\t\t'data-status': status,\n\t\t\t\t\tdisabled: 'disabled',\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Determine if the editor is the currently active state\n\t\t * @return   boolean\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tis_editor_active: function() {\n\n\t\t\treturn ( 'editor' === this.state );\n\n\t\t},\n\n\t\t/**\n\t\t * Triggered when the editor closes, updates state to be the course builder view\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_editor_close: function() {\n\n\t\t\tthis.set_state( 'builder' ).render();\n\n\t\t},\n\n\t\t/**\n\t\t * When a lesson is selected, opens the sidebar to the editor view\n\t\t * @param    obj   lesson_model  instance of the lesson model which was selected\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\ton_lesson_select: function( lesson_model, tab ) {\n\n\t\t\tif ( 'editor' !== this.state ) {\n\t\t\t\tthis.set_state( 'editor' );\n\t\t\t} else {\n\t\t\t\tthis.remove_subview( 'editor' );\n\t\t\t}\n\n\t\t\tthis.render( {\n\t\t\t\tmodel: lesson_model,\n\t\t\t\ttab: tab,\n\t\t\t} );\n\n\t\t},\n\n\t\t/**\n\t\t * Save button click event\n\t\t * @return   void\n\t\t * @since    3.16.0\n\t\t * @version  3.16.0\n\t\t */\n\t\tsave_now: function() {\n\n\t\t\twindow.llms_builder.sync.save_now();\n\n\t\t},\n\n\t}, Subview ) );\n\n} );\n\n","require( [\n\t'../vendor/backbone.collectionView',\n\t'../vendor/backbone-forms',\n\t'../vendor/backbone.trackit',\n\t'Controllers/Construct',\n\t'Controllers/Debug',\n\t'Controllers/Sync',\n\t'Models/loader',\n\t'Views/Editors/wysiwyg',\n\t'Views/Course',\n\t'Views/Sidebar'\n], function(\n\tForms,\n\tCV,\n\tTrackIt,\n\tConstruct,\n\tDebug,\n\tSync,\n\tModels,\n\tWysiwygEditor,\n\tCourseView,\n\tSidebarView\n) {\n\n\twindow.llms_builder.debug = new Debug( window.llms_builder.debug );\n\twindow.llms_builder.construct = new Construct();\n\n\t// register custom backbone forms editor\n\tBackbone.Form.editors.Wysiwyg = WysiwygEditor;\n\n\tBackbone.pubSub = _.extend( {}, Backbone.Events );\n\n\t$( document ).trigger( 'llms-builder-pre-init' );\n\n\twindow.llms_builder.questions = window.llms_builder.construct.get_collection( 'QuestionTypes', window.llms_builder.questions );\n\n\tvar CourseModel = window.llms_builder.construct.get_model( 'Course', window.llms_builder.course );\n\twindow.llms_builder.CourseModel = CourseModel;\n\n\twindow.llms_builder.sync = new Sync( CourseModel, window.llms_builder.sync );\n\n\tvar Course = new CourseView( {\n\t\tmodel: CourseModel,\n\t} );\n\n\tvar Sidebar = new SidebarView( {\n\t\tCourseView: Course\n\t} );\n\n\t$( document ).trigger( 'llms-builder-init', {\n\t\tcourse: Course,\n\t\tsidebar: Sidebar,\n\t} );\n\n} );\n\ndefine(\"main\", function(){});\n\n","}(jQuery));\n"]}