!function(e){window.llms=window.llms||{},window.llms.metabox_product=function(){this.temp_id=Math.floor(7777*Math.random()+777),this.init=function(){this.bind_visibility();var l=e("#lifterlms-product #llms-product-options-access-plans");if(l.length){LLMS.Spinner.start(l);var t,a=this,s=0;t=setInterval(function(){if(s>=300)l.html(LLMS.l10n.translate("There was an error loading the necessary resources. Please try again."));else{if("undefined"==typeof tinyMCE)return void s++;a.bind()}clearInterval(t),LLMS.Spinner.stop(l)},100)}},this.bind=function(){var l=this;e("#llms-save-access-plans").on("click",function(){e("#publish").trigger("click")}),e("#llms-access-plans").on("change","[data-controller-id]",function(){l.controller_change(e(this))}),e("#llms-access-plans .llms-access-plan-datepicker").datepicker({dateFormat:"mm/dd/yy"}),e("#llms-access-plans [data-controller-id]").trigger("change"),e("#llms-new-access-plan").on("click",function(){var t=e(this);l.init_plan(),t.attr("disabled","disabled"),setTimeout(function(){t.removeAttr("disabled")},500)}),e("#llms-access-plans").sortable({handle:".llms-drag-handle",items:".llms-access-plan",start:function(l,t){e("#llms-access-plans").addClass("dragging")},stop:function(t,a){e("#llms-access-plans").removeClass("dragging"),l.update_plan_orders()}}),e("#llms-access-plans").on("keyup","input.llms-plan-title",function(){var l=e(this),t=l.closest(".llms-access-plan"),a=t.find("span.llms-plan-title"),s=l.val(),n=s?s:a.attr("data-default");a.text(n)}),e("#llms-access-plans").on("click",".llms-plan-delete",function(t){t.stopPropagation(),l.delete_plan(e(this))}),window.llms.metaboxes.post_select(e("#llms-access-plans .llms-availability-restrictions")),e("#_llms_plans_content_llms-new-access-plan-model").attr("disabled","disabled"),tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,"_llms_plans_content_llms-new-access-plan-model"),e("#publish").on("click",function(l){e("#llms-access-plans input").each(function(){if(e(this).is(":invalid")){var l=e(this).closest(".llms-access-plan");return l.hasClass("opened")||l.find(".llms-collapsible-header").trigger("click"),!1}})})},this.bind_visibility=function(){var l=e("#llms-catalog-visibility-select"),t=e("a.llms-edit-catalog-visibility"),a=e("a.llms-save-catalog-visibility"),s=e("a.llms-cancel-catalog-visibility");t.on("click",function(e){e.preventDefault(),l.slideDown("fast"),t.hide()}),a.on("click",function(a){a.preventDefault(),l.slideUp("fast"),t.show(),e("#llms-catalog-visibility-display").text(e('input[name="_llms_visibility"]:checked').attr("data-label"))}),s.on("click",function(e){e.preventDefault(),l.slideUp("fast"),t.show()})},this.delete_plan=function(l){var t=this,a=l.closest(".llms-access-plan"),s=a.attr("data-id");s?e("#llms-delete-plan-modal").topModal({open:function(){e("#llms-confirm-delete-plan").on("click",function(){LLMS.Spinner.start(a,"small"),e("#llms-delete-plan-modal .topModalClose").trigger("click"),window.LLMS.Ajax.call({data:{action:"delete_access_plan",plan_id:s},success:function(e){LLMS.Spinner.stop(a),e.success?t.remove_plan_el(a):e.message&&alert(e.message)}})})},closed:function(){e("#llms-delete-plan-modal").attr("data-plan-id",""),e("#llms-confirm-delete-plan").off("click")}}).attr("data-plan-id",s):t.remove_plan_el(a)},this.controller_change=function(l){var t=l.attr("data-controller-id"),a=l.val(),s=l.closest(".llms-access-plan"),n=s.find('[data-controller="'+t+'"]');"checkbox"===l.attr("type")&&(a=l.is(":checked")?a:"no"),n.each(function(){var l,t,s=e(this),n="SELECT"===s[0].nodeName||"INPUT"===s[0].nodeName||"TEXTAREA"===s[0].nodeName?s:s.find("input, select, textarea"),i=s.attr("data-value-is"),c=s.attr("data-value-is-not");switch("undefined"!=typeof i&&i!==!1?t="==":"undefined"!=typeof c&&c!==!1&&(t="!="),t){case"==":l=a==i?"show":"hide";break;case"!=":l=a!=c?"show":"hide"}"show"===l?(s.show(),n.removeAttr("disabled").trigger("change")):"hide"===l&&(s.hide(),n.attr("disabled","disabled"))})},this.has_plan_limit_been_reached=function(){var l=window.llms.product.access_plan_limit,t=e("#llms-access-plans .llms-access-plan").length;return t>=l},this.init_plan=function(){if(!this.has_plan_limit_been_reached()){var l=e("#llms-new-access-plan-model").clone();$existing_plans=e("#llms-access-plans .llms-access-plan"),$editor=l.find("#_llms_plans_content_llms-new-access-plan-model"),l.removeAttr("id"),$editor.removeAttr("id").attr("id","_llms_plans_content_"+this.temp_id),this.temp_id++,l.find("select, input, textarea").each(function(){e(this).removeAttr("disabled")}),l.find(".llms-access-plan-datepicker").datepicker({dateFormat:"mm/dd/yy"}),l.appendTo("#llms-access-plans"),this.update_plan_orders(),l.find(".llms-collapsible-header").trigger("click"),this.has_plan_limit_been_reached()&&this.toggle_create_button("disable"),window.llms.metaboxes.post_select(l.find(".llms-availability-restrictions")),l.find("[data-controller-id]").trigger("change")}},this.toggle_create_button=function(l){var t=e("#llms-new-access-plan"),a=t.next("p");"disable"===l?(t.attr("disabled","disabled"),a.show()):(t.removeAttr("disabled"),a.hide())},this.remove_plan_el=function(e){var l=this;e.fadeOut(400),setTimeout(function(){e.remove(),l.has_plan_limit_been_reached()||l.toggle_create_button("enable")},450)},this.update_plan_orders=function(){e("#llms-access-plans .llms-access-plan").each(function(){var l=e(this),t=l.find(".plan-order"),a=l.find('textarea[id^="_llms_plans_content_"]'),s=a.attr("id"),n=1*t.val(),i=l.index();tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,s),l.find("select, input, textarea").each(function(){var l=e(this).attr("name");l&&e(this).attr("name",l.replace(n,i))}),tinyMCE.EditorManager.execCommand("mceAddEditor",!0,s),t.val(i)})},this.init()};new window.llms.metabox_product}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
