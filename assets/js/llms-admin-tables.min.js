!function(i,t){window.llms=window.llms||{};window.llms.admin_tables=new function(){this.$tables=null,this.init=function(){var t=this;t.$tables=i(".llms-gb-table"),t.$tables.length&&t.bind()},this.bind=function(){var r=this;this.$tables.each(function(){var e,s,n,a=i(this);a.on("click",'button[name="llms-table-paging"]',function(t){t.preventDefault(),r.change_page(a,i(this))}),a.on("click",'button[name="llms-table-export"]',function(t){t.preventDefault(),r.export(a,i(this))}),a.on("click","a.llms-sortable",function(t){t.preventDefault(),r.change_order(a,i(this))}),a.parent().find(".llms-table-filters").on("change","select.llms-table-filter",function(t){r.change_filter(a,i(this))}),a.parent().find(".llms-table-search").on("keyup","input",(e=function(t){switch(t.keyCode){case 37:case 38:case 39:case 40:return;default:r.search(a,i(this))}},s=250,n=null,function(){var t=this,a=arguments;window.clearTimeout(n),n=window.setTimeout(function(){e.apply(t,a)},s)}))})},this.change_order=function(t,a){this.reload(t,{order:a.attr("data-order"),orderby:a.attr("data-orderby"),page:1})},this.change_filter=function(t,a){this.reload(t,{filter:a.val(),filterby:a.attr("name"),page:1})},this.change_page=function(t,a){this.reload(t,{order:this.get_args(t,"order"),orderby:this.get_args(t,"orderby"),page:a.attr("data-page")})},this.export=function(s,n,t){var r=this;function l(){LLMS.Spinner.stop(n,"small"),n.removeAttr("disabled")}LLMS.Ajax.call({data:i.extend({action:"export_admin_table",handler:s.attr("data-handler"),file_path:t},JSON.parse(s.attr("data-args"))),beforeSend:function(){n.attr("disabled")||(n.attr("disabled","disabled"),LLMS.Spinner.start(n,"small"))},success:function(t){var a=s.find(".llms-table-export .llms-table-export-msg"),e=s.find(".llms-table-export .llms-table-progress");!t.success&&t.message?(l(),a.html('<span class="llms-error">'+t.message+"</span>")):t.success&&t.data&&t.data.progress&&(a.html(""),e.is("visible")||100===t.data.progress||e.css("display","inline-block"),e.find(".llms-table-progress-text").text(t.data.progress+"%"),e.find(".llms-table-progress-inner").css("width",t.data.progress+"%"),100!==t.data.progress?r.export(s,n,t.data.path):(window.location=t.data.url,setTimeout(function(){l(),e.hide()},1500)))}})},this.get_args=function(t,a){var e=JSON.parse(t.attr("data-args"));return a?!!e[a]&&e[a]:e},this.reload=function(a,t){t=i.extend({action:"get_admin_table_data",handler:a.attr("data-handler")},JSON.parse(a.attr("data-args")),t),LLMS.Ajax.call({data:t,beforeSend:function(){LLMS.Spinner.start(a.closest(".llms-table-wrap"))},success:function(t){LLMS.Spinner.stop(a.closest(".llms-table-wrap")),t.success&&(a.attr("data-args",t.data.args),a.find("thead").replaceWith(t.data.thead),a.find("tbody").replaceWith(t.data.tbody),a.find("tfoot").replaceWith(t.data.tfoot))}})},this.search=function(t,a){var e=a.val();len=e.length,(0===len||3<=len)&&this.reload(t,{page:1,search:a.val()})},this.init()}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
