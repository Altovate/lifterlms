!function(t){var i=function(){function i(){t("body").on("click",".llms-notification-dismiss",function(){r.dismiss(t(this).closest(".llms-notification"))})}function n(t){-1===u.indexOf(t)&&u.push(t)}function s(){clearInterval(a)}function o(t){pump(function(){t&&"unload"===t||!r.has_notifications||r.show_all()})}function e(){a=setInterval(o,f)}var a,r=this,l=window.llms&&window.llms.notification_settings?window.llms.notification_settings:{},f=l.heartbeat_interval?l.heartbeat_interval:2e4,c=[],u=[];return pump=function(t){var i=!!u.length;LLMS.Ajax.call({data:{action:"notifications_heartbeart",dismissals:u},beforeSend:function(){return r.block_ajax?(r.restart_heartbeat=!0,s(),t(),!1):void(r.block_ajax=!0)},complete:function(){r.restart_heartbeat&&(r.restart_heartbeat=!1,e()),r.block_ajax=!1},success:function(n){u=i?[]:u,n.success&&n.data&&r.queue(n.data["new"]),t()}})},this.block_ajax=!1,this.restart_heartbeat=!1,this.init=function(){this.is_user_logged_in()&&(window.onbeforeunload=function(){o("unload")},i(),o(),e())},this.queue=function(t){var i=this;for(var n in t)t.hasOwnProperty(n)&&!1===i.notification_exists(t[n].id)&&c.push(t[n])},this.dismiss=function(t){var i=this;t.removeClass("visible"),n(t.attr("data-id")),setTimeout(function(){i.reposition(t.next(".llms-notification.visible"))},10)},this.notification_exists=function(t){for(var i in c)if(c.hasOwnProperty(i)&&t===c[i].id)return i;return!1},this.get_offset=function(i){var n=12;if(i||(i=t(".llms-notification.visible").last()),!i.offset())return 24;var s=i.offset().top,o=i.outerHeight();return s+o+n},this.has_notifications=function(){return c.length},this.is_user_logged_in=function(){return t("body").hasClass("logged-in")},this.reposition=function(i){var n,s=this,o=".llms-notification.visible";i.length||(i=t(o).first()),i.css("top",s.get_offset(i.prevAll(o).first())),n=i.next(o),n.length&&setTimeout(function(){s.reposition(n)},150)},this.show_all=function(){var t,i=this,n=0;t=setInterval(function(){n<c.length?(c[n].shown||(c[n].shown=!0,i.show_one(c[n])),n++):clearInterval(t)},100)},this.show_one=function(i){var s=this,o=t(i.html);o.find("a").on("click",function(i){i.preventDefault();var s=t(this);n(o.attr("data-id")),window.location=s.attr("href")}),t("body").append(o),o.css("top",s.get_offset()),setTimeout(function(){o.addClass("visible")},1),o.attr("data-auto-dismiss")&&(n(o.attr("data-id")),setTimeout(function(){s.dismiss(o)},o.attr("data-auto-dismiss")))},this.init(),this};window.llms=window.llms||{},window.llms.notifications=new i}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxsbXMtbm90aWZpY2F0aW9ucy5qcyJdLCJuYW1lcyI6WyIkIiwibGxtc19ub3RpZmljYXRpb25zIiwiYmluZF9ldmVudHMiLCJvbiIsInNlbGYiLCJkaXNtaXNzIiwidGhpcyIsImNsb3Nlc3QiLCJhZGRfZGlzbWlzc2FsIiwiaWQiLCJkaXNtaXNzYWxzIiwiaW5kZXhPZiIsInB1c2giLCJjbGVhcl9oZWFydGJlYXQiLCJjbGVhckludGVydmFsIiwiaGVhcnRiZWF0IiwiZG9faGVhcnRiZWF0IiwidHJpZ2dlciIsInB1bXAiLCJoYXNfbm90aWZpY2F0aW9ucyIsInNob3dfYWxsIiwic3RhcnRfaGVhcnRiZWF0Iiwic2V0SW50ZXJ2YWwiLCJoZWFydGJlYXRfaW50ZXJ2YWwiLCJzZXR0aW5ncyIsIndpbmRvdyIsImxsbXMiLCJub3RpZmljYXRpb25fc2V0dGluZ3MiLCJub3RpZmljYXRpb25zIiwiY2IiLCJjbGVhcl9kaXNtaXNzYWxzIiwibGVuZ3RoIiwiTExNUyIsIkFqYXgiLCJjYWxsIiwiZGF0YSIsImFjdGlvbiIsImJlZm9yZVNlbmQiLCJibG9ja19hamF4IiwicmVzdGFydF9oZWFydGJlYXQiLCJjb21wbGV0ZSIsInN1Y2Nlc3MiLCJyIiwicXVldWUiLCJpbml0IiwiaXNfdXNlcl9sb2dnZWRfaW4iLCJvbmJlZm9yZXVubG9hZCIsIm5ld19ub3RpcyIsIm4iLCJoYXNPd25Qcm9wZXJ0eSIsIm5vdGlmaWNhdGlvbl9leGlzdHMiLCIkZWwiLCJyZW1vdmVDbGFzcyIsImF0dHIiLCJzZXRUaW1lb3V0IiwicmVwb3NpdGlvbiIsIm5leHQiLCJub3RpIiwiZ2V0X29mZnNldCIsIiRyZWxhdGl2ZV9lbCIsInNwYWNlciIsImxhc3QiLCJvZmZzZXQiLCJ0b3AiLCJoZWlnaHQiLCJvdXRlckhlaWdodCIsImhhc0NsYXNzIiwiJHN0YXJ0X2VsIiwiJG5leHRfZWwiLCJzZWxlY3RvciIsImZpcnN0IiwiY3NzIiwicHJldkFsbCIsImludGVydmFsIiwiaSIsInNob3duIiwic2hvd19vbmUiLCIkaHRtbCIsImh0bWwiLCJmaW5kIiwiZSIsInByZXZlbnREZWZhdWx0IiwiJHRoaXMiLCJsb2NhdGlvbiIsImFwcGVuZCIsImFkZENsYXNzIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQ0FLQyxTQUFZQSxHQUVaLEdBQUlDLEdBQXFCLFdBZXhCLFFBQVNDLEtBQ1JGLEVBQUcsUUFBU0csR0FBSSxRQUFTLDZCQUE4QixXQUN0REMsRUFBS0MsUUFBU0wsRUFBR00sTUFBT0MsUUFBUyx5QkFXbkMsUUFBU0MsR0FBZUMsUUFDWEMsRUFBV0MsUUFBU0YsSUFDL0JDLEVBQVdFLEtBQU1ILEdBVW5CLFFBQVNJLEtBQ1JDLGNBQWVDLEdBVWhCLFFBQVNDLEdBQWNDLEdBRXRCQyxLQUFNLFdBRUVELEdBQVcsV0FBYUEsSUFBZWIsRUFBS2UsbUJBR25EZixFQUFLZ0IsYUFpRVAsUUFBU0MsS0FDUk4sRUFBWU8sWUFBYU4sRUFBY08sR0ExSHhDLEdBS0NSLEdBTEdYLEVBQU9FLEtBQ1ZrQixFQUFhQyxPQUFPQyxNQUFRRCxPQUFPQyxLQUFLQyxzQkFBMEJGLE9BQU9DLEtBQUtDLHlCQUM5RUosRUFBcUJDLEVBQVNELG1CQUFxQkMsRUFBU0QsbUJBQXFCLElBQ2pGSyxLQUNBbEIsSUEyWEQsT0ExVEFRLE1BQU8sU0FBVVcsR0FFaEIsR0FBSUMsS0FBbUJwQixFQUFXcUIsTUFFbENDLE1BQUtDLEtBQUtDLE1BQ1RDLE1BQ0NDLE9BQVEsMkJBQ1IxQixXQUFZQSxHQUViMkIsV0FBWSxXQUVYLE1BQUtqQyxHQUFLa0MsWUFDVGxDLEVBQUttQyxtQkFBb0IsRUFDekIxQixJQUNBZ0IsS0FDTyxRQUdSekIsRUFBS2tDLFlBQWEsSUFHbkJFLFNBQVUsV0FFSnBDLEVBQUttQyxvQkFDVG5DLEVBQUttQyxtQkFBb0IsRUFDekJsQixLQUdEakIsRUFBS2tDLFlBQWEsR0FHbkJHLFFBQVMsU0FBVUMsR0FFbEJoQyxFQUFhb0IsS0FBd0JwQixFQUVoQ2dDLEVBQUVELFNBQVdDLEVBQUVQLE1BQ25CL0Is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anMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpZnRlckxNUyBCYXNpYyBOb3RpZmljYXRpb25zIERpc3BsYXllclxuICogQHNpbmNlICAgIDMuOC4wXG4gKiBAdmVyc2lvbiAgMy45LjVcbiAqL1xuOyggZnVuY3Rpb24oICQgKSB7XG5cblx0dmFyIGxsbXNfbm90aWZpY2F0aW9ucyA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0dmFyIHNlbGYgPSB0aGlzLFxuXHRcdFx0c2V0dGluZ3MgPSAoIHdpbmRvdy5sbG1zICYmIHdpbmRvdy5sbG1zLm5vdGlmaWNhdGlvbl9zZXR0aW5ncyApID8gd2luZG93LmxsbXMubm90aWZpY2F0aW9uX3NldHRpbmdzIDoge30sXG5cdFx0XHRoZWFydGJlYXRfaW50ZXJ2YWwgPSBzZXR0aW5ncy5oZWFydGJlYXRfaW50ZXJ2YWwgPyBzZXR0aW5ncy5oZWFydGJlYXRfaW50ZXJ2YWwgOiAyMDAwMCxcblx0XHRcdG5vdGlmaWNhdGlvbnMgPSBbXSxcblx0XHRcdGRpc21pc3NhbHMgPSBbXSxcblx0XHRcdGhlYXJ0YmVhdDtcblxuXHRcdC8qKlxuXHRcdCAqIEJpbmQgZG9tIGV2ZW50c1xuXHRcdCAqIEByZXR1cm4gICB2b2lkXG5cdFx0ICogQHNpbmNlICAgIDMuOC4wXG5cdFx0ICogQHZlcnNpb24gIDMuOC4wXG5cdFx0ICovXG5cdFx0ZnVuY3Rpb24gYmluZF9ldmVudHMoKSB7XG5cdFx0XHQkKCAnYm9keScgKS5vbiggJ2NsaWNrJywgJy5sbG1zLW5vdGlmaWNhdGlvbi1kaXNtaXNzJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHNlbGYuZGlzbWlzcyggJCggdGhpcyApLmNsb3Nlc3QoICcubGxtcy1ub3RpZmljYXRpb24nICkgKTtcblx0XHRcdH0gKTtcblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogQWRkIGEgZGlzbWlzc2FsIHRvIHRoZSBhcnJheSBvZiBkaXNtaXNzYWxzIHRvIGJlIHB1c2hlZCB0byB0aGUgc2VydmVyXG5cdFx0ICogZHVyaW5nIHRoZSBuZXh0IGhlYXJ0YmVhdFxuXHRcdCAqIEBwYXJhbSAgICBpbnQgICBpZCAgbm90aWZpY2F0aW9uIElEXG5cdFx0ICogQHNpbmNlICAgIDMuOC4wXG5cdFx0ICogQHZlcnNpb24gIDMuOC4wXG5cdFx0ICovXG5cdFx0ZnVuY3Rpb24gYWRkX2Rpc21pc3NhbCggaWQgKSB7XG5cdFx0XHRpZiAoIC0xID09PSBkaXNtaXNzYWxzLmluZGV4T2YoIGlkICkgKSB7XG5cdFx0XHRcdGRpc21pc3NhbHMucHVzaCggaWQgKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogQ2xlYXIgdGhlIGN1cnJlbnRseSBydW5uaW5nIGhlYXJ0YmVhdFxuXHRcdCAqIEByZXR1cm4gICB2b2lkXG5cdFx0ICogQHNpbmNlICAgIDMuOC4wXG5cdFx0ICogQHZlcnNpb24gIDMuOC4wXG5cdFx0ICovXG5cdFx0ZnVuY3Rpb24gY2xlYXJfaGVhcnRiZWF0KCkge1xuXHRcdFx0Y2xlYXJJbnRlcnZhbCggaGVhcnRiZWF0ICk7XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIEhlYXJ0YmVhdCBjYWxsYmFjayBmdW5jdGlvblxuXHRcdCAqIEBwYXJhbSAgICB7W3R5cGVdfSAgIHRyaWdnZXIgIFtkZXNjcmlwdGlvbl1cblx0XHQgKiBAcmV0dXJuICAge1t0eXBlXX0gICAgICAgICAgICBbZGVzY3JpcHRpb25dXG5cdFx0ICogQHNpbmNlICAgIDMuOC4wXG5cdFx0ICogQHZlcnNpb24gIDMuOC4wXG5cdFx0ICovXG5cdFx0ZnVuY3Rpb24gZG9faGVhcnRiZWF0KCB0cmlnZ2VyICkge1xuXG5cdFx0XHRwdW1wKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRpZiAoICggdHJpZ2dlciAmJiAndW5sb2FkJyA9PT0gdHJpZ2dlciApIHx8ICEgc2VsZi5oYXNfbm90aWZpY2F0aW9ucyApIHtcblx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdH1cblx0XHRcdFx0c2VsZi5zaG93X2FsbCgpO1xuXG5cdFx0XHR9ICk7XG5cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogSGVhcnRiZWF0IGZ1bmN0aW9uXG5cdFx0ICogQHBhcmFtICAgIHtGdW5jdGlvbn0gIGNiICBjYWxsYmFjZVxuXHRcdCAqIEByZXR1cm4gICB2b2lkXG5cdFx0ICogQHNpbmNlICAgIDMuOC4wXG5cdFx0ICogQHZlcnNpb24gIDMuOC4wXG5cdFx0ICovXG5cdFx0cHVtcCA9IGZ1bmN0aW9uKCBjYiApIHtcblxuXHRcdFx0dmFyIGNsZWFyX2Rpc21pc3NhbHMgPSBkaXNtaXNzYWxzLmxlbmd0aCA/IHRydWUgOiBmYWxzZTtcblxuXHRcdFx0TExNUy5BamF4LmNhbGwoIHtcblx0XHRcdFx0ZGF0YToge1xuXHRcdFx0XHRcdGFjdGlvbjogJ25vdGlmaWNhdGlvbnNfaGVhcnRiZWFydCcsXG5cdFx0XHRcdFx0ZGlzbWlzc2FsczogZGlzbWlzc2Fscyxcblx0XHRcdFx0fSxcblx0XHRcdFx0YmVmb3JlU2VuZDogZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRpZiAoIHNlbGYuYmxvY2tfYWpheCApIHtcblx0XHRcdFx0XHRcdHNlbGYucmVzdGFydF9oZWFydGJlYXQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0Y2xlYXJfaGVhcnRiZWF0KCk7XG5cdFx0XHRcdFx0XHRjYigpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHNlbGYuYmxvY2tfYWpheCA9IHRydWU7XG5cblx0XHRcdFx0fSxcblx0XHRcdFx0Y29tcGxldGU6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0aWYgKCBzZWxmLnJlc3RhcnRfaGVhcnRiZWF0ICkge1xuXHRcdFx0XHRcdFx0c2VsZi5yZXN0YXJ0X2hlYXJ0YmVhdCA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0c3RhcnRfaGVhcnRiZWF0KCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0c2VsZi5ibG9ja19hamF4ID0gZmFsc2U7XG5cblx0XHRcdFx0fSxcblx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24oIHIgKSB7XG5cblx0XHRcdFx0XHRkaXNtaXNzYWxzID0gY2xlYXJfZGlzbWlzc2FscyA/IFtdIDogZGlzbWlzc2FscztcblxuXHRcdFx0XHRcdGlmICggci5zdWNjZXNzICYmIHIuZGF0YSApIHtcblx0XHRcdFx0XHRcdHNlbGYucXVldWUoIHIuZGF0YS5uZXcgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRjYigpO1xuXG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblxuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBTdGFydCB0aGUgaGVhcnRiZWF0XG5cdFx0ICogQHJldHVybiAgIHZvaWRcblx0XHQgKiBAc2luY2UgICAgMy44LjBcblx0XHQgKiBAdmVyc2lvbiAgMy44LjBcblx0XHQgKi9cblx0XHRmdW5jdGlvbiBzdGFydF9oZWFydGJlYXQoKSB7XG5cdFx0XHRoZWFydGJlYXQgPSBzZXRJbnRlcnZhbCggZG9faGVhcnRiZWF0LCBoZWFydGJlYXRfaW50ZXJ2YWwgKTtcblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogUHJldmVudCBtdWx0aXBsZSBzaW11bHRhbmVvdXMgYWpheCBjYWxscyBmcm9tIGJlaW5nIG1hZGVcblx0XHQgKiBAdHlwZSAge0Jvb2xlYW59XG5cdFx0ICovXG5cdFx0dGhpcy5ibG9ja19hamF4ID0gZmFsc2U7XG5cblx0XHQvKipcblx0XHQgKiBJZiBhIGhlYXJ0YmVhdCByZXF1ZXN0IGlzIGJsb2NrZWQsIHRoaXMgd2lsbCBiZSB1c2VkIHRvIHJlc3RhcnQgaXRcblx0XHQgKiBAdHlwZSAge0Jvb2xlYW59XG5cdFx0ICovXG5cdFx0dGhpcy5yZXN0YXJ0X2hlYXJ0YmVhdCA9IGZhbHNlO1xuXG5cdFx0LyoqXG5cdFx0ICogSW5pdGlhbGl6ZVxuXHRcdCAqIEByZXR1cm4gICB2b2lkXG5cdFx0ICogQHNpbmNlICAgIDMuOC4wXG5cdFx0ICogQHZlcnNpb24gIDMuOC4wXG5cdFx0ICovXG5cdFx0dGhpcy5pbml0ID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdHZhciBzZWxmID0gdGhpcztcblxuXHRcdFx0aWYgKCAhIHRoaXMuaXNfdXNlcl9sb2dnZWRfaW4oKSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR3aW5kb3cub25iZWZvcmV1bmxvYWQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZG9faGVhcnRiZWF0KCAndW5sb2FkJyApO1xuXHRcdFx0fTtcblxuXHRcdFx0YmluZF9ldmVudHMoKTtcblxuXHRcdFx0ZG9faGVhcnRiZWF0KCk7XG5cdFx0XHRzdGFydF9oZWFydGJlYXQoKTtcblxuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBRdWV1ZSBub3RpZmljYXRpb25zIHRvIGJlIGRpc3BsYXllZFxuXHRcdCAqIEBwYXJhbSAgICBvYmplY3QgICBuZXdfbm90aXMgIGFycmF5IG9mIG5vdGlmaWNhdGlvbnNcblx0XHQgKiBAcmV0dXJuICAgdm9pZFxuXHRcdCAqIEBzaW5jZSAgICAzLjguMFxuXHRcdCAqIEB2ZXJzaW9uICAzLjguMFxuXHRcdCAqL1xuXHRcdHRoaXMucXVldWUgPSBmdW5jdGlvbiggbmV3X25vdGlzICkge1xuXG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRcdGZvciAoIHZhciBuIGluIG5ld19ub3RpcyApIHtcblxuXHRcdFx0XHRpZiAoICEgbmV3X25vdGlzLmhhc093blByb3BlcnR5KCBuICkgKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBhZGQgdGhlIG5ldyBub3RpZmljYXRpb24gaWYgaXQgZG9lc250IGV4aXN0XG5cdFx0XHRcdGlmICggZmFsc2UgPT09IHNlbGYubm90aWZpY2F0aW9uX2V4aXN0cyggbmV3X25vdGlzWyBuIF0uaWQgKSApIHtcblxuXHRcdFx0XHRcdG5vdGlmaWNhdGlvbnMucHVzaCggbmV3X25vdGlzWyBuIF0gKTtcblxuXHRcdFx0XHR9XG5cblx0XHRcdH1cblxuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBEaXNtaXNzIGEgbm90aWZpY2F0aW9uXG5cdFx0ICogQHBhcmFtICAgIG9iaiAgICRlbCAgbm90aWZpY2F0aW9uIGRvbSBlbGVtZW50XG5cdFx0ICogQHJldHVybiAgIHZvaWRcblx0XHQgKiBAc2luY2UgICAgMy44LjBcblx0XHQgKiBAdmVyc2lvbiAgMy44LjBcblx0XHQgKi9cblx0XHR0aGlzLmRpc21pc3MgPSBmdW5jdGlvbiggJGVsICkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0JGVsLnJlbW92ZUNsYXNzKCAndmlzaWJsZScgKTtcblx0XHRcdGFkZF9kaXNtaXNzYWwoICRlbC5hdHRyKCAnZGF0YS1pZCcgKSApO1xuXHRcdFx0c2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHNlbGYucmVwb3NpdGlvbiggJGVsLm5leHQoICcubGxtcy1ub3RpZmljYXRpb24udmlzaWJsZScgKSApO1xuXHRcdFx0fSwgMTAgKTtcblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogRGV0ZXJtaW5lIGlmIGEgbm90aWZpY2F0aW9uIGFscmVhZHkgZXhpc3RzIGluIHRoZSBub3RpZmljYXRpb25zIGFycmF5XG5cdFx0ICogQHBhcmFtICAgIGludCAgICAgICAgaWQgIG5vdGlmaWNhdGlvbiBpZFxuXHRcdCAqIEByZXR1cm4gICBpbnR8ZmFsc2UgICAgICBpbmRleCBvZiB0aGUgbm90aWZpY2F0aW9uIGluIHRoZSBhcnJheSBPUiBmYWxzZSBpZiBub3QgZm91bmRcblx0XHQgKiBAc2luY2UgICAgMy44LjBcblx0XHQgKiBAdmVyc2lvbiAgMy44LjBcblx0XHQgKi9cblx0XHR0aGlzLm5vdGlmaWNhdGlvbl9leGlzdHMgPSBmdW5jdGlvbiggaWQgKSB7XG5cblx0XHRcdGZvciAoIHZhciBub3RpIGluIG5vdGlmaWNhdGlvbnMgKSB7XG5cblx0XHRcdFx0aWYgKCAhIG5vdGlmaWNhdGlvbnMuaGFzT3duUHJvcGVydHkoIG5vdGkgKSApIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICggaWQgPT09IG5vdGlmaWNhdGlvbnNbIG5vdGkgXS5pZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gbm90aTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmYWxzZTtcblxuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBHZXQgdGhlIHZlcnRpYWNsIG9mZnNldCAob24gc2NyZWVuKSByZWxhdGl2ZSB0byBhbiBlbGVtZW50XG5cdFx0ICogdXNlZCBmb3Igbm90aWZpY2F0aW9uIHBvc2l0aWlvbmluZ1xuXHRcdCAqIEBwYXJhbSAgICBvYmogICAkcmVsYXRpdmVfZWwgIGVsZW1lbnQgdG8gZ2V0IGFuIG9mZnNldCByZWxhdGl2ZSB0b1xuXHRcdCAqIEByZXR1cm4gICBpbnRcblx0XHQgKiBAc2luY2UgICAgMy44LjBcblx0XHQgKiBAdmVyc2lvbiAgMy44LjBcblx0XHQgKi9cblx0XHR0aGlzLmdldF9vZmZzZXQgPSBmdW5jdGlvbiggJHJlbGF0aXZlX2VsICkge1xuXG5cdFx0XHR2YXIgc3BhY2VyID0gMTI7XG5cblx0XHRcdGlmICggISAkcmVsYXRpdmVfZWwgKSB7XG5cdFx0XHRcdCRyZWxhdGl2ZV9lbCA9ICQoICcubGxtcy1ub3RpZmljYXRpb24udmlzaWJsZScgKS5sYXN0KClcblx0XHRcdH1cblxuXHRcdFx0aWYgKCAhICRyZWxhdGl2ZV9lbC5vZmZzZXQoKSApIHtcblx0XHRcdFx0cmV0dXJuIDI0O1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgdG9wID0gJHJlbGF0aXZlX2VsLm9mZnNldCgpLnRvcCxcblx0XHRcdFx0aGVpZ2h0ID0gJHJlbGF0aXZlX2VsLm91dGVySGVpZ2h0KCk7XG5cblx0XHRcdHJldHVybiB0b3AgKyBoZWlnaHQgKyBzcGFjZXI7XG5cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogRGV0ZXJtaW5lIGlmIHRoZXJlIGFyZSBub3RpZmljYXRpb25zIHRvIHNob3dcblx0XHQgKiBAcmV0dXJuICAgQm9vbGVhblxuXHRcdCAqIEBzaW5jZSAgICAzLjguMFxuXHRcdCAqIEB2ZXJzaW9uICAzLjguMFxuXHRcdCAqL1xuXHRcdHRoaXMuaGFzX25vdGlmaWNhdGlvbnMgPSBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiAoIG5vdGlmaWNhdGlvbnMubGVuZ3RoICk7XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIERldGVybWluZSBpZiBhIHVzZXIgaXMgbG9nZ2VkIGluXG5cdFx0ICogQHJldHVybiAgIGJvb2xlYW5cblx0XHQgKiBAc2luY2UgICAgMy44LjBcblx0XHQgKiBAdmVyc2lvbiAgMy44LjBcblx0XHQgKi9cblx0XHR0aGlzLmlzX3VzZXJfbG9nZ2VkX2luID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gJCggJ2JvZHknICkuaGFzQ2xhc3MoICdsb2dnZWQtaW4nICk7XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIFJlcG9zaXRpb24gZWxlbWVudHMsIHN0YXJ0aW5nIHdpdGggdGhlIHNwZWNpZmllZCBlbGVtZW50XG5cdFx0ICogQHBhcmFtICAgIG9iaiAgICRzdGFydF9lbCAgZWxlbWVudCB0byBzdGFydCByZXBvc2l0aW9uaW5nIHdpdGhcblx0XHQgKiBAcmV0dXJuICAgdm9pZFxuXHRcdCAqIEBzaW5jZSAgICAzLjguMFxuXHRcdCAqIEB2ZXJzaW9uICAzLjguMFxuXHRcdCAqL1xuXHRcdHRoaXMucmVwb3NpdGlvbiA9IGZ1bmN0aW9uKCAkc3RhcnRfZWwgKSB7XG5cblx0XHRcdHZhciBzZWxmID0gdGhpcyxcblx0XHRcdFx0c2VsZWN0b3IgPSAnLmxsbXMtbm90aWZpY2F0aW9uLnZpc2libGUnLFxuXHRcdFx0XHQkbmV4dF9lbDtcblxuXHRcdFx0aWYgKCAhICRzdGFydF9lbC5sZW5ndGggKSB7XG5cdFx0XHRcdCRzdGFydF9lbCA9ICQoIHNlbGVjdG9yICkuZmlyc3QoKTtcblx0XHRcdH1cblxuXHRcdFx0JHN0YXJ0X2VsLmNzcyggJ3RvcCcsIHNlbGYuZ2V0X29mZnNldCggJHN0YXJ0X2VsLnByZXZBbGwoIHNlbGVjdG9yICkuZmlyc3QoKSApICk7XG5cblx0XHRcdCRuZXh0X2VsID0gJHN0YXJ0X2VsLm5leHQoIHNlbGVjdG9yICk7XG5cdFx0XHRpZiAoICRuZXh0X2VsLmxlbmd0aCApIHtcblx0XHRcdFx0c2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0c2VsZi5yZXBvc2l0aW9uKCAkbmV4dF9lbCApO1xuXHRcdFx0XHR9LCAxNTAgKTtcblx0XHRcdH1cblxuXG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIFNob3cgYWxsIHF1ZXVlZCBub3RpZmljYXRpb25zXG5cdFx0ICogQHJldHVybiAgIHZvaWRcblx0XHQgKiBAc2luY2UgICAgMy44LjBcblx0XHQgKiBAdmVyc2lvbiAgMy44LjBcblx0XHQgKi9cblx0XHR0aGlzLnNob3dfYWxsID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdHZhciBzZWxmID0gdGhpcyxcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdGludGVydmFsO1xuXG5cdFx0XHRpbnRlcnZhbCA9IHNldEludGVydmFsKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRpZiAoIGkgPCBub3RpZmljYXRpb25zLmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdGlmICggISBub3RpZmljYXRpb25zWyBpIF0uc2hvd24gKSB7XG5cdFx0XHRcdFx0XHRub3RpZmljYXRpb25zWyBpIF0uc2hvd24gPSB0cnVlO1xuXHRcdFx0XHRcdFx0c2VsZi5zaG93X29uZSggbm90aWZpY2F0aW9uc1sgaSBdICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGkrKztcblxuXHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbCggaW50ZXJ2YWwgKTtcblxuXHRcdFx0XHR9XG5cblx0XHRcdH0sIDEwMCApO1xuXG5cdFx0fVxuXG5cdFx0LyoqXG5cdFx0ICogU2hvdyBhIHNpbmdsZSBub3RpZmljYXRpb25cblx0XHQgKiBAcGFyYW0gICAgb2JqZWN0ICAgbiAgbm90aWZpY2F0aW9uIG9iamVjdCBkYXRhXG5cdFx0ICogQHJldHVybiAgIHZvaWRcblx0XHQgKiBAc2luY2UgICAgMy44LjBcblx0XHQgKiBAdmVyc2lvbiAgMy44LjBcblx0XHQgKi9cblx0XHR0aGlzLnNob3dfb25lID0gZnVuY3Rpb24oIG4gKSB7XG5cblx0XHRcdHZhciBzZWxmID0gdGhpcyxcblx0XHRcdFx0JGh0bWwgPSAkKCBuLmh0bWwgKTtcblxuXHRcdFx0JGh0bWwuZmluZCggJ2EnICkub24oICdjbGljaycsIGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdHZhciAkdGhpcyA9ICQoIHRoaXMgKTtcblx0XHRcdFx0YWRkX2Rpc21pc3NhbCggJGh0bWwuYXR0ciggJ2RhdGEtaWQnICkgKTtcblx0XHRcdFx0d2luZG93LmxvY2F0aW9uID0gJHRoaXMuYXR0ciggJ2hyZWYnICk7XG5cdFx0XHR9ICk7XG5cblx0XHRcdCQoICdib2R5JyApLmFwcGVuZCggJGh0bWwgKTtcblx0XHRcdCRodG1sLmNzcyggJ3RvcCcsIHNlbGYuZ2V0X29mZnNldCgpICk7XG5cblx0XHRcdHNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHQkaHRtbC5hZGRDbGFzcyggJ3Zpc2libGUnICk7XG5cdFx0XHR9LCAxICk7XG5cblx0XHRcdC8vIGlmIGl0J3MgYXV0byBkaXNtaXNzaW5nLCBzZXQgdXAgYSBkaXNtaXNzYWxcblx0XHRcdGlmICggJGh0bWwuYXR0ciggJ2RhdGEtYXV0by1kaXNtaXNzJyApICkge1xuXHRcdFx0XHQvLyBhdXRvbWF0aWNhbGx5IHNjaGVkdWxlIGF1dG9tYXRpYyBkaXNtaXNzYWxzXG5cdFx0XHRcdC8vIHRvIHByZXZlbnQgdGhlIG5vdGlmaWNhdGlvbiBmcm9tIGRpc3BsYXlpbmcgYWdhaW5cblx0XHRcdFx0Ly8gaWYgdGhlIGF1dG8tZGlzbWlzcyB0aW1lb3V0IGlzbid0IHJlYWNoZWRcblx0XHRcdFx0Ly8gYmVmb3JlIHRoZSBwYWdlIHVubG9hZHNcblx0XHRcdFx0YWRkX2Rpc21pc3NhbCggJGh0bWwuYXR0ciggJ2RhdGEtaWQnICkgKTtcblx0XHRcdFx0c2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0c2VsZi5kaXNtaXNzKCAkaHRtbCApO1xuXHRcdFx0XHR9LCAkaHRtbC5hdHRyKCAnZGF0YS1hdXRvLWRpc21pc3MnICkgKTtcblx0XHRcdH1cblxuXG5cdFx0fVxuXG5cdFx0Ly8gaW5pdGFsaXplXG5cdFx0dGhpcy5pbml0KCk7XG5cblx0XHRyZXR1cm4gdGhpcztcblxuXHR9O1xuXG5cdHdpbmRvdy5sbG1zID0gd2luZG93LmxsbXMgfHwge307XG5cdHdpbmRvdy5sbG1zLm5vdGlmaWNhdGlvbnMgPSBuZXcgbGxtc19ub3RpZmljYXRpb25zKCk7XG5cbn0gKSggalF1ZXJ5ICk7XG4iXX0=
