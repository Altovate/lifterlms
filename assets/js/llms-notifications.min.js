!function(o){window.llms=window.llms||{},window.llms.notifications=new function(){var i=this,n=[];return this.init=function(){this.is_user_logged_in()&&(window.llms.queued_notifications&&(this.queue(window.llms.queued_notifications),this.show_all()),o("body").on("click",".llms-notification-dismiss",function(){i.dismiss(o(this).closest(".llms-notification"))}))},this.queue=function(i){for(var t in i)i.hasOwnProperty(t)&&!1===this.notification_exists(i[t].id)&&n.push(i[t])},this.dismiss=function(i){var t=this;i.removeClass("visible"),setTimeout(function(){t.reposition(i.next(".llms-notification.visible"))},10)},this.notification_exists=function(i){for(var t in n)if(n.hasOwnProperty(t)&&i===n[t].id)return t;return!1},this.get_offset=function(i){return i||(i=o(".llms-notification.visible").last()),i.offset()?i.offset().top+i.outerHeight()+12:24},this.has_notifications=function(){return n.length},this.is_user_logged_in=function(){return o("body").hasClass("logged-in")},this.reposition=function(i){var t,s=this,n=".llms-notification.visible";i.length||(i=o(n).first()),i.css("top",s.get_offset(i.prevAll(n).first())),(t=i.next(n)).length&&setTimeout(function(){s.reposition(t)},150)},this.show_all=function(){var i,t=this,s=0;i=setInterval(function(){s<n.length?(n[s].shown||(n[s].shown=!0,t.show_one(n[s])),s++):clearInterval(i)},100)},this.show_one=function(i){var t=this,s=o(i.html);s.find("a").on("click",function(i){i.preventDefault();var t=o(this);window.location=t.attr("href")}),o("body").append(s),s.css("top",t.get_offset()),setTimeout(function(){s.addClass("visible")},1),s.attr("data-auto-dismiss")&&setTimeout(function(){t.dismiss(s)},s.attr("data-auto-dismiss"))},this.init(),this}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
