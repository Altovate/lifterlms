!function(e){e.fn.llmsCollapsible=function(){return this.on("click",".llms-collapsible-header",function(){var t=e(this).closest(".llms-collapsible"),a=t.siblings(".llms-collapsible");t.toggleClass("opened"),t.find(".llms-collapsible-body").slideToggle(400),a.each(function(){e(this).removeClass("opened"),e(this).find(".llms-collapsible-body").slideUp(400)})}),this},window.llms=window.llms||{};var t=function(){this.repeaters={metaboxes:this,$repeaters:null,init:function(){var t=this;t.$repeaters=e(".llms-mb-list.repeater"),t.$repeaters.length&&(LLMS.wait_for(function(){return"undefined"!=typeof tinyMCE},function(){t.load(),t.bind()}),e('#post input[type="submit"]').on("click",function(){e(this).attr("data-llms-clicked","yes")}),e("#post").on("submit",t.handle_submit))},bind:function(){var t=this;t.$repeaters.each(function(){var a=e(this),n=a.find(".llms-repeater-rows"),l=a.find(".llms-repeater-model");tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,l.find(".llms-mb-list.editor textarea").attr("id")),a.find(".llms-repeater-new-btn").on("click",function(){t.add_row(a,null,!0)}),n.sortable({handle:".llms-drag-handle",items:".llms-repeater-row",start:function(e,t){n.addClass("dragging")},stop:function(l,i){n.removeClass("dragging");var s=i.item.find("textarea.wp-editor-area");s.each(function(){var t=e(this).attr("id");tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,t),tinyMCE.EditorManager.execCommand("mceAddEditor",!0,t)}),t.save(a)}}),a.on("click",".llms-repeater-remove",function(n){n.stopPropagation();var l=e(this).closest(".llms-repeater-row");window.confirm(LLMS.l10n.translate("Are you sure you want to delete this row? This cannot be undone."))&&(l.remove(),setTimeout(function(){t.save(a)},1))})})},add_row:function(t,a,n){var l=this,i=t.find(".llms-repeater-rows"),s=t.find(".llms-repeater-model"),r=s.find(".llms-repeater-row").clone(),o=t.find(".llms-repeater-row").length,d=l.reindex(r,o);a&&e.each(a,function(t,a){var n=r.find('[name^="'+t+'"]');n.hasClass("llms-select2-student")?(e.each(a,function(e,t){n.append('<option value="'+t.key+'" selected="selected">'+t.title+"</option>")}),n.trigger("change")):n.val(a)}),setTimeout(function(){l.bind_row(r)},1),i.append(r),n&&r.find(".llms-collapsible-header").trigger("click"),tinyMCE.EditorManager.execCommand("mceAddEditor",!0,d),t.trigger("llms-new-repeater-row",{$row:r,data:a})},bind_row:function(e){this.bind_row_header(e),e.find(".llms-select2").llmsSelect2({width:"100%"}),e.find(".llms-select2-student").llmsStudentsSelect2(),this.metaboxes.bind_datepickers(e.find(".llms-datepicker")),this.metaboxes.bind_controllers(e.find("[data-is-controller]"))},bind_row_header:function(t){var a=t.find(".llms-repeater-title"),n=t.find(".llms-collapsible-header-title-field");a.attr("data-default",a.text()),n.on("keyup focusout blur",function(){var t=e(this).val();t||(t=a.attr("data-default")),a.text(t)}).trigger("keyup")},handle_submit:function(t){t.preventDefault();var a=e('#post [data-llms-clicked="yes"]'),n=a.parent().find(".spinner");e('#post input[type="submit"]').addClass("disabled"),n.addClass("is-active");var l,i=window.llms.metaboxes.repeaters,s=0;i.$repeaters.each(function(){i.save(e(this))}),l=setInterval(function(){s>=59||!e(".llms-mb-list.repeater.processing").length?(clearInterval(l),e("#post").off("submit",this.handle_submit),n.removeClass("is-active"),a.removeClass("disabled").trigger("click")):s++},1e3)},load:function(){var t=this;t.$repeaters.each(function(){var a=e(this);a.hasClass("is-loaded")||a.hasClass("processing")||t.store(a,"load",function(n){a.addClass("is-loaded"),e.each(n.data,function(e,n){t.add_row(a,n,!1)}),a.find(".llms-repeater-rows .llms-repeater-row").each(function(){t.bind_row(e(this))})})})},reindex:function(t,a){function n(t,n){t.each(function(){var t=e(this).attr(n);e(this).attr(n,t.replace(l,a))})}var l=t.attr("data-row-order"),i=t.find(".llms-mb-list.editor textarea");return tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,i.attr("id")),t.attr("data-row-order",a),n(t,"data-row-order"),n(t.find("button.insert-media"),"data-editor"),n(t.find('input[name^="_llms"], textarea[name^="_llms"], select[name^="_llms"]'),"id"),n(t.find('input[name^="_llms"], textarea[name^="_llms"], select[name^="_llms"]'),"name"),n(t.find("[data-controller]"),"data-controller"),n(t.find("[data-controller]"),"data-controller"),n(t.find("button.wp-switch-editor"),"data-wp-editor-id"),n(t.find("button.wp-switch-editor"),"id"),n(t.find(".wp-editor-tools"),"id"),n(t.find(".wp-editor-container"),"id"),i.attr("id")},save:function(e){e.trigger("llms-repeater-before-save",{$el:e}),this.store(e,"save")},serialize:function(t){var a=[];return t.find(".llms-repeater-rows .llms-repeater-row").each(function(){var t={};e(this).find('input[name^="_llms"], select[name^="_llms"]').each(function(){t[e(this).attr("name")]=e(this).val()}),e(this).find('textarea[name^="_llms"]').each(function(){var a=e(this).attr("name");tinyMCE.editors[a]?t[a]=tinyMCE.editors[a].getContent():t[a]=e(this).val()}),a.push(t)}),a},store:function(e,t,a){a=a||function(){};var n=this,l={action:e.find(".llms-repeater-field-handler").val(),store_action:t};"save"===t&&(l.rows=n.serialize(e)),LLMS.Ajax.call({data:l,beforeSend:function(){e.addClass("processing"),LLMS.Spinner.start(e)},success:function(t){a(t),LLMS.Spinner.stop(e),e.removeClass("processing")}})}},this.repeaters.init(),this.init=function(){var t=this;e(".llms-select2-post").each(function(){t.post_select(e(this))}),e(".llms-collapsible-group").llmsCollapsible(),this.bind_tabs();var a=[{selector:e(".llms-datepicker"),func:"bind_datepickers"},{selector:e(".llms-select2"),func:function(e){e.llmsSelect2({width:"100%"})}},{selector:e(".llms-select2-student"),func:function(e){e.llmsStudentsSelect2()}},{selector:e('input[type="checkbox"][data-controls]'),func:"bind_cb_controllers"},{selector:e("[data-is-controller]"),func:"bind_controllers"},{selector:e(".llms-table"),func:"bind_tables"},{selector:e(".llms-merge-code-wrapper"),func:"bind_merge_code_buttons"},{selector:e("a.llms-editable"),func:"bind_editables"}];if(e.each(a,function(a,n){if(n.selector.length){var l=n.selector.filter(function(){return 0===e(this).closest(".llms-repeater-model").length});"string"==typeof n.func?t[n.func](l):"function"==typeof n.func&&n.func(l)}}),window.llms.post.post_type){var n="bind_"+window.llms.post.post_type;"function"==typeof this[n]&&this[n]()}},this.bind_cb_controllers=function(t){t=t||e('input[type="checkbox"][data-controls]'),t.each(function(){var t=e(this),a=e(t.attr("data-controls")).closest(".llms-mb-list");t.on("change",function(){e(this).is(":checked")?a.slideDown(200):a.slideUp(200)}),t.trigger("change")})},this.bind_controllers=function(t){t=t||e("[data-is-controller]"),t.each(function(){var t,a=e(this),n=e('[data-controller="#'+a.attr("id")+'"]');a.on("change",function(){t="checkbox"===a.attr("type")?a.is(":checked")?a.val():"false":a.val(),n.each(function(){var a=e(this).attr("data-controller-value"),n=[];-1!==a.indexOf(",")?n=a.split(","):n.push(a),-1!==n.indexOf(t)?e(this).slideDown(200):e(this).slideUp(200)})}),a.trigger("change")})},this.bind_datepicker=function(e){var t=e.attr("data-format")||"mm/dd/yy",a=e.attr("data-max-date")||null,n=e.attr("data-min-date")||null;e.datepicker({dateFormat:t,maxDate:a,minDate:n})},this.bind_datepickers=function(t){var a=this;t=t||e(".llms-datepicker"),t.each(function(){a.bind_datepicker(e(this))})},this.bind_editables=function(){function t(t){var n,l=t.find("label").clone(),i=t.attr("data-llms-editable"),s=t.attr("data-llms-editable-type"),r=t.attr("data-llms-editable-required")||"no",o=t.attr("data-llms-editable-value");if(r="yes"===r?' required="required"':"","select"===s){var d,c=JSON.parse(t.attr("data-llms-editable-options"));n=e('<select name="'+i+'"'+r+" />");for(var m in c)d=o===m?' selected="selected"':"",n.append('<option value="'+m+'"'+d+">"+c[m]+"</option>")}else if("datetime"===s){n=e('<div class="llms-datetime-field" />'),o=JSON.parse(o);var u=t.attr("data-llms-editable-date-format")||"",f=t.attr("data-llms-editable-date-min")||"",p=t.attr("data-llms-editable-date-max")||"";$picker=e('<input class="llms-date-input llms-datepicker" data-format="'+u+'" data-max-date="'+p+'" data-min-date="'+f+'" name="'+i+'[date]" type="text" value="'+o.date+'">'),a.bind_datepicker($picker),n.append($picker),n.append("<em>@</em>"),n.append('<input class="llms-time-input" max="23" min="0" name="'+i+'[hour]" type="number" value="'+o.hour+'">'),n.append("<em>:</em>"),n.append('<input class="llms-time-input" max="59" min="0" name="'+i+'[minute]" type="number" value="'+o.minute+'">')}else n=e('<input name="'+i+'" type="'+s+'" value="'+o+'"'+r+">");t.empty().append(l).append(n)}var a=this;e("a.llms-editable").on("click",function(a){a.preventDefault();var n,l=e(this);n=l.attr("data-fields")?e(l.attr("data-fields")):l.closest(".llms-metabox-section").find("[data-llms-editable]"),l.remove(),n.each(function(){t(e(this))})})},this.bind_llms_engagement=function(){var t=this;e("#_llms_engagement_type").on("change",function(){e("#_llms_engagement").trigger("llms-engagement-type-change",e(this).val())}),e("#_llms_engagement").on("llms-engagement-type-change",function(a,n){var l=e(this);switch(n){case"achievement":case"certificate":case"email":var i="llms_"+n;l.val(null).attr("data-post-type",i).trigger("change"),t.post_select(l);break;default:l.trigger("llms-engagement-type-change-external",n)}})},this.bind_llms_membership=function(){e('a[href="#llms-course-remove"]').on("click",function(t){t.preventDefault();var a=e(this),n=a.closest("tr"),l=a.closest(".llms-mb-list");LLMS.Spinner.start(l),window.LLMS.Ajax.call({data:{action:"membership_remove_auto_enroll_course",course_id:a.attr("data-id")},beforeSend:function(){l.find("p.error").remove()},success:function(e){e.success?(n.fadeOut(200),setTimeout(function(){n.remove()},400)):l.prepend('<p class="error">'+e.message+"</p>"),LLMS.Spinner.stop(l)}})}),e('a[href="#llms-course-bulk-enroll"]').on("click",function(t){t.preventDefault();var a=e(this),n=(a.closest("tr"),a.closest(".llms-mb-list"));window.confirm(LLMS.l10n.translate("membership_bulk_enrollment_warning"))&&(LLMS.Spinner.start(n),window.LLMS.Ajax.call({data:{action:"bulk_enroll_membership_into_course",course_id:a.attr("data-id")},beforeSend:function(){n.find("p.error").remove()},success:function(e){e.success?a.replaceWith('<strong style="float:right;">'+e.data.message+"&nbsp;&nbsp;</strong>"):n.prepend('<p class="error">'+e.message+"</p>"),LLMS.Spinner.stop(n)}}))})},this.bind_llms_order=function(){e('button[name="llms-refund-toggle"]').on("click",function(){var t=e(this),a=t.closest("tr"),n=a.attr("data-transaction-id"),l=t.attr("data-refundable"),i="1"===t.attr("data-gateway-supports"),s=t.attr("data-gateway"),r=e("#llms-txn-refund-model .llms-txn-refund-form").clone(),o=r.find(".gateway-btn");"remove"!==t.attr("data-action")?(t.text(LLMS.l10n.translate("Cancel")),t.attr("data-action","remove"),r.find("input").removeAttr("disabled"),r.find('input[name="llms_refund_amount"]').attr("max",l),r.find('input[name="llms_refund_txn_id"]').val(n),i&&(o.find(".llms-gateway-title").text(s),o.show()),a.after(r)):(t.text(LLMS.l10n.translate("Refund")),t.attr("data-action",""),a.next("tr").remove())}),e('button[name="llms-manual-txn-toggle"]').on("click",function(){var t=e(this),a=t.closest("tr"),n=e("#llms-manual-txn-model .llms-manual-txn-form").clone();"remove"!==t.attr("data-action")?(t.text(LLMS.l10n.translate("Cancel")),t.attr("data-action","remove"),n.find("input").removeAttr("disabled"),a.after(n)):(t.text(LLMS.l10n.translate("Record a Manual Payment")),t.attr("data-action",""),a.next("tr").remove())}),e(".llms-metabox").one("focus",'.llms-metabox-field[data-llms-editable="payment_gateway"] select',function(){e(this).attr("data-original-value")||e(this).attr("data-original-value",e(this).val())}),e(".llms-metabox").on("change",'.llms-metabox-field[data-llms-editable="payment_gateway"] select',function(){var t=e(this),a=t.val(),n=JSON.parse(t.closest(".llms-metabox-field").attr("data-gateway-fields")),l=n[a];for(var i in l){var s=e('input[name="'+l[i].name+'"]'),r=s.closest(".llms-metabox-field");s.attr("value",""),l[i].enabled?(r.show(),s.attr("required","required"),a===t.attr("data-original-value")&&s.val(r.attr("data-llms-editable-value"))):(s.removeAttr("required"),r.hide())}})},this.bind_merge_code_buttons=function(t){t=t||e(".llms-merge-code-wrapper"),t.find(".llms-merge-code-button").on("click",function(){e(this).next(".llms-merge-codes").toggleClass("active")}),t.find(".llms-merge-codes li").on("click",function(){var t=e(this),a=t.closest(".llms-merge-codes"),n=a.attr("data-target"),l=t.attr("data-code");if(-1===n.indexOf("#")){var i=window.tinymce.editors[n];i?i.insertContent(l):alert(LLMS.l10n.translate("Copy this code and paste it into the desired area")+": "+l)}else e(n).val(e(n).val()+l);a.removeClass("active")})},this.bind_tabs=function(){e(".llms-nav-tab-wrapper .tabs li").on("click",function(){var t=e(this),a=t.closest(".llms-mb-container"),n=t.attr("data-tab");t.siblings().removeClass("llms-active"),a.find(".tab-content").removeClass("llms-active"),t.addClass("llms-active"),e("#"+n).addClass("llms-active")})},this.post_select=function(t){var a=t.attr("data-post-type")||post,n=t.attr("data-post-type")||!1;t.llmsSelect2({allowClear:n,ajax:{dataType:"JSON",delay:250,method:"POST",url:window.ajaxurl,data:function(e){return{action:"select2_query_posts",page:e.page?e.page-1:0,post_type:a,term:e.term,_ajax_nonce:wp_ajax_data.nonce}},processResults:function(t,a){function n(t){return Array.isArray(t)?e.map(t,function(e){return l(e)}):e.map(t,function(e){return{text:e.label,children:n(e.items)}})}function l(e){return{text:e.name,id:e.id}}return{results:n(t.items),pagination:{more:t.more}}}},cache:!0,width:"80%"});var l=LLMS.l10n.translate("View"),i=e('<a class="llms-button-secondary small" style="margin-left:5px;" target="_blank" href="#">'+l+' <i class="fa fa-external-link" aria-hidden="true"></i></a>');t.next(".select2").after(i),t.on("change",function(){var t=e(this).val();t?i.attr("href","/?p="+t).show():i.hide()}).trigger("change")},this.bind_tables=function(){e('.llms-table button[name="llms-expand-table"]').on("click",function(){var t=e(this),a=t.closest(".llms-table");if(t.attr("data-text")){var n=t.text();t.text(t.attr("data-text")),t.attr("data-text",n)}a.find(".expandable").each(function(){e(this).hasClass("closed")?e(this).addClass("opened").removeClass("closed"):e(this).addClass("closed").removeClass("opened")})})},this.init()};window.llms.metaboxes=new t}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
