!function(p){p.fn.llmsCollapsible=function(){return this.on("click",".llms-collapsible-header",function(){var e=p(this).closest(".llms-collapsible"),t=e.siblings(".llms-collapsible");e.toggleClass("opened"),e.find(".llms-collapsible-body").slideToggle(400),t.each(function(){p(this).removeClass("opened"),p(this).find(".llms-collapsible-body").slideUp(400)})}),this},window.llms=window.llms||{};window.llms.metaboxes=new function(){this.repeaters={metaboxes:this,$repeaters:null,init:function(){var e=this;e.$repeaters=p(".llms-mb-list.repeater"),e.$repeaters.length&&(LLMS.wait_for(function(){return"undefined"!=typeof tinyMCE},function(){e.load(),e.bind()}),p('#post input[type="submit"], #post-preview').on("click",function(){p(this).attr("data-llms-clicked","yes")}),p("#post").on("submit",e.handle_submit))},bind:function(){var n=this;n.$repeaters.each(function(){var a=p(this),l=a.find(".llms-repeater-rows"),e=a.find(".llms-repeater-model");tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,e.find(".llms-mb-list.editor textarea").attr("id")),a.find(".llms-repeater-new-btn").on("click",function(){n.add_row(a,null,!0)}),l.sortable({handle:".llms-drag-handle",items:".llms-repeater-row",start:function(e,t){l.addClass("dragging")},stop:function(e,t){l.removeClass("dragging"),t.item.find("textarea.wp-editor-area").each(function(){var e=p(this).attr("id");tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,e),tinyMCE.EditorManager.execCommand("mceAddEditor",!0,e)}),n.save(a)}}),a.on("click",".llms-repeater-remove",function(e){e.stopPropagation();var t=p(this).closest(".llms-repeater-row");window.confirm(LLMS.l10n.translate("Are you sure you want to delete this row? This cannot be undone."))&&(t.remove(),setTimeout(function(){n.save(a)},1))})})},add_row:function(e,t,a){var l=this,n=e.find(".llms-repeater-rows"),i=e.find(".llms-repeater-model").find(".llms-repeater-row").clone(),s=e.find(".llms-repeater-row").length,r=l.reindex(i,s);t&&p.each(t,function(e,t){var a=i.find('[name^="'+e+'"]');a.hasClass("llms-select2-student")?(p.each(t,function(e,t){a.append('<option value="'+t.key+'" selected="selected">'+t.title+"</option>")}),a.trigger("change")):a.val(t)}),setTimeout(function(){l.bind_row(i)},1),n.append(i),a&&i.find(".llms-collapsible-header").trigger("click"),tinyMCE.EditorManager.execCommand("mceAddEditor",!0,r),e.trigger("llms-new-repeater-row",{$row:i,data:t})},bind_row:function(e){this.bind_row_header(e),e.find(".llms-select2").llmsSelect2({width:"100%"}),e.find(".llms-select2-student").llmsStudentsSelect2(),this.metaboxes.bind_datepickers(e.find(".llms-datepicker")),this.metaboxes.bind_controllers(e.find("[data-is-controller]"))},bind_row_header:function(e){var t=e.find(".llms-repeater-title"),a=e.find(".llms-collapsible-header-title-field");t.attr("data-default",t.text()),a.on("keyup focusout blur",function(){var e=p(this).val();e||(e=t.attr("data-default")),t.text(e)}).trigger("keyup")},handle_submit:function(e){var t=p('#post [data-llms-clicked="yes"]'),a=t.parent().find(".spinner");if(t.is("#post-preview"))t.removeAttr("data-llms-clicked");else{e.preventDefault(),p('#post input[type="submit"]').addClass("disabled").attr("disabled","disabled"),a.addClass("is-active");var l,n=window.llms.metaboxes.repeaters,i=0;n.$repeaters.each(function(){n.save(p(this))}),l=setInterval(function(){59<=i||!p(".llms-mb-list.repeater.processing").length?(clearInterval(l),p("#post").off("submit",this.handle_submit),a.removeClass("is-active"),t.removeClass("disabled").removeAttr("disabled").trigger("click")):i++},1e3)}},load:function(){var l=this;l.$repeaters.each(function(){var a=p(this);a.hasClass("is-loaded")||a.hasClass("processing")||l.store(a,"load",function(e){a.addClass("is-loaded"),p.each(e.data,function(e,t){l.add_row(a,t,!1)}),a.find(".llms-repeater-rows .llms-repeater-row").each(function(){l.bind_row(p(this))})})})},reindex:function(e,a){var l=e.attr("data-row-order"),t=e.find(".llms-mb-list.editor textarea");function n(e,t){e.each(function(){var e=p(this).attr(t);p(this).attr(t,e.replace(l,a))})}return tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,t.attr("id")),e.attr("data-row-order",a),n(e,"data-row-order"),n(e.find("button.insert-media"),"data-editor"),n(e.find('input[name^="_llms"], textarea[name^="_llms"], select[name^="_llms"]'),"id"),n(e.find('input[name^="_llms"], textarea[name^="_llms"], select[name^="_llms"]'),"name"),n(e.find("[data-controller]"),"data-controller"),n(e.find("[data-controller]"),"data-controller"),n(e.find("button.wp-switch-editor"),"data-wp-editor-id"),n(e.find("button.wp-switch-editor"),"id"),n(e.find(".wp-editor-tools"),"id"),n(e.find(".wp-editor-container"),"id"),t.attr("id")},save:function(e){e.trigger("llms-repeater-before-save",{$el:e}),this.store(e,"save")},serialize:function(e){var a=[];return e.find(".llms-repeater-rows .llms-repeater-row").each(function(){var t={};p(this).find('input[name^="_llms"], select[name^="_llms"]').each(function(){t[p(this).attr("name")]=p(this).val()}),p(this).find('textarea[name^="_llms"]').each(function(){var e=p(this).attr("name");tinyMCE.editors[e]?t[e]=tinyMCE.editors[e].getContent():t[e]=p(this).val()}),a.push(t)}),a},store:function(t,e,a){a=a||function(){};var l={action:t.find(".llms-repeater-field-handler").val(),store_action:e};"save"===e&&(l.rows=this.serialize(t)),LLMS.Ajax.call({data:l,beforeSend:function(){t.addClass("processing"),LLMS.Spinner.start(t)},success:function(e){a(e),LLMS.Spinner.stop(t),t.removeClass("processing")}})}},this.repeaters.init(),this.init=function(){var l=this;p(".llms-select2-post").each(function(){l.post_select(p(this))}),p(".llms-collapsible-group").llmsCollapsible(),this.bind_tabs();var e=[{selector:p(".llms-datepicker"),func:"bind_datepickers"},{selector:p(".llms-select2"),func:function(e){e.llmsSelect2({width:"100%"})}},{selector:p(".llms-select2-student"),func:function(e){e.llmsStudentsSelect2()}},{selector:p('input[type="checkbox"][data-controls]'),func:"bind_cb_controllers"},{selector:p("[data-is-controller]"),func:"bind_controllers"},{selector:p(".llms-table"),func:"bind_tables"},{selector:p(".llms-merge-code-wrapper"),func:"bind_merge_code_buttons"},{selector:p("a.llms-editable"),func:"bind_editables"}];if(p.each(e,function(e,t){if(t.selector.length){var a=t.selector.filter(function(){return 0===p(this).closest(".llms-repeater-model").length});"string"==typeof t.func?l[t.func](a):"function"==typeof t.func&&t.func(a)}}),window.llms.post.post_type){var t="bind_"+window.llms.post.post_type;"function"==typeof this[t]&&this[t]()}},this.bind_cb_controllers=function(e){(e=e||p('input[type="checkbox"][data-controls]')).each(function(){var e=p(this),t=p(e.attr("data-controls")).closest(".llms-mb-list");e.on("change",function(){p(this).is(":checked")?t.slideDown(200):t.slideUp(200)}),e.trigger("change")})},this.bind_controllers=function(e){(e=e||p("[data-is-controller]")).each(function(){var a,e=p(this),t=p('[data-controller="#'+e.attr("id")+'"]');e.on("change",function(){a="checkbox"===e.attr("type")?e.is(":checked")?e.val():"false":e.val(),t.each(function(){var e=p(this).attr("data-controller-value"),t=[];-1!==e.indexOf(",")?t=e.split(","):t.push(e),-1!==t.indexOf(a)?p(this).slideDown(200):p(this).slideUp(200)})}),e.trigger("change")})},this.bind_datepicker=function(e){var t=e.attr("data-format")||"mm/dd/yy",a=e.attr("data-max-date")||null,l=e.attr("data-min-date")||null;e.datepicker({dateFormat:t,maxDate:a,minDate:l})},this.bind_datepickers=function(e){var t=this;(e=e||p(".llms-datepicker")).each(function(){t.bind_datepicker(p(this))})},this.bind_editables=function(){var f=this;p("a.llms-editable").on("click",function(e){e.preventDefault();var t,a=p(this);t=a.attr("data-fields")?p(a.attr("data-fields")):a.closest(".llms-metabox-section").find("[data-llms-editable]"),a.remove(),t.each(function(){!function(e){var t,a=e.find("label").clone(),l=e.attr("data-llms-editable"),n=e.attr("data-llms-editable-type"),i=e.attr("data-llms-editable-required")||"no",s=e.attr("data-llms-editable-value");if(i="yes"===i?' required="required"':"","select"===n){var r,o=JSON.parse(e.attr("data-llms-editable-options"));for(var d in t=p('<select name="'+l+'"'+i+" />"),o)r=s===d?' selected="selected"':"",t.append('<option value="'+d+'"'+r+">"+o[d]+"</option>")}else if("datetime"===n){t=p('<div class="llms-datetime-field" />'),s=JSON.parse(s);var c=e.attr("data-llms-editable-date-format")||"",m=e.attr("data-llms-editable-date-min")||"",u=e.attr("data-llms-editable-date-max")||"";$picker=p('<input class="llms-date-input llms-datepicker" data-format="'+c+'" data-max-date="'+u+'" data-min-date="'+m+'" name="'+l+'[date]" type="text" value="'+s.date+'">'),f.bind_datepicker($picker),t.append($picker),t.append("<em>@</em>"),t.append('<input class="llms-time-input" max="23" min="0" name="'+l+'[hour]" type="number" value="'+s.hour+'">'),t.append("<em>:</em>"),t.append('<input class="llms-time-input" max="59" min="0" name="'+l+'[minute]" type="number" value="'+s.minute+'">')}else t=p('<input name="'+l+'" type="'+n+'" value="'+s+'"'+i+">");e.empty().append(a).append(t),"select"===n&&setTimeout(function(){t.trigger("change")},100)}(p(this))})})},this.bind_llms_engagement=function(){var n=this;p("#_llms_engagement_type").on("change",function(){p("#_llms_engagement").trigger("llms-engagement-type-change",p(this).val())}),p("#_llms_engagement").on("llms-engagement-type-change",function(e,t){var a=p(this);switch(t){case"achievement":case"certificate":case"email":var l="llms_"+t;a.val(null).attr("data-post-type",l).trigger("change"),n.post_select(a);break;default:a.trigger("llms-engagement-type-change-external",t)}})},this.bind_llms_membership=function(){p('a[href="#llms-course-remove"]').on("click",function(e){e.preventDefault();var t=p(this),a=t.closest("tr"),l=t.closest(".llms-mb-list");LLMS.Spinner.start(l),window.LLMS.Ajax.call({data:{action:"membership_remove_auto_enroll_course",course_id:t.attr("data-id")},beforeSend:function(){l.find("p.error").remove()},success:function(e){e.success?(a.fadeOut(200),setTimeout(function(){a.remove()},400)):l.prepend('<p class="error">'+e.message+"</p>"),LLMS.Spinner.stop(l)}})}),p('a[href="#llms-course-bulk-enroll"]').on("click",function(e){e.preventDefault();var t=p(this),a=(t.closest("tr"),t.closest(".llms-mb-list"));window.confirm(LLMS.l10n.translate("Click okay to enroll all active members into the selected course. Enrollment will take place in the background and you may leave your site after confirmation. This action cannot be undone!"))&&(LLMS.Spinner.start(a),window.LLMS.Ajax.call({data:{action:"bulk_enroll_membership_into_course",course_id:t.attr("data-id")},beforeSend:function(){a.find("p.error").remove()},success:function(e){e.success?t.replaceWith('<strong style="float:right;">'+e.data.message+"&nbsp;&nbsp;</strong>"):a.prepend('<p class="error">'+e.message+"</p>"),LLMS.Spinner.stop(a)}}))})},this.bind_llms_order=function(){p('button[name="llms-refund-toggle"]').on("click",function(){var e=p(this),t=e.closest("tr"),a=t.attr("data-transaction-id"),l=e.attr("data-refundable"),n="1"===e.attr("data-gateway-supports"),i=e.attr("data-gateway"),s=p("#llms-txn-refund-model .llms-txn-refund-form").clone(),r=s.find(".gateway-btn");"remove"!==e.attr("data-action")?(e.text(LLMS.l10n.translate("Cancel")),e.attr("data-action","remove"),s.find("input").removeAttr("disabled"),s.find('input[name="llms_refund_amount"]').attr("max",l),s.find('input[name="llms_refund_txn_id"]').val(a),n&&(r.find(".llms-gateway-title").text(i),r.show()),t.after(s)):(e.text(LLMS.l10n.translate("Refund")),e.attr("data-action",""),t.next("tr").remove())}),p('button[name="llms-manual-txn-toggle"]').on("click",function(){var e=p(this),t=e.closest("tr"),a=p("#llms-manual-txn-model .llms-manual-txn-form").clone();"remove"!==e.attr("data-action")?(e.text(LLMS.l10n.translate("Cancel")),e.attr("data-action","remove"),a.find("input").removeAttr("disabled"),t.after(a)):(e.text(LLMS.l10n.translate("Record a Manual Payment")),e.attr("data-action",""),t.next("tr").remove())}),p(".llms-metabox").one("focus",'.llms-metabox-field[data-llms-editable="payment_gateway"] select',function(){p(this).attr("data-original-value")||p(this).attr("data-original-value",p(this).val())}),p(".llms-metabox").on("change",'.llms-metabox-field[data-llms-editable="payment_gateway"] select',function(){var e=p(this),t=e.val(),a=JSON.parse(e.closest(".llms-metabox-field").attr("data-gateway-fields"))[t];for(var l in a){var n=p('input[name="'+a[l].name+'"]'),i=n.closest(".llms-metabox-field");a[l].enabled?(i.show(),n.attr("required","required"),n.removeAttr("disabled"),t===e.attr("data-original-value")&&n.val(i.attr("data-llms-editable-value"))):(n.attr("value",""),n.removeAttr("required"),i.hide())}})},this.bind_merge_code_buttons=function(e){(e=e||p(".llms-merge-code-wrapper")).find(".llms-merge-code-button").on("click",function(){p(this).next(".llms-merge-codes").toggleClass("active")}),e.find(".llms-merge-codes li").on("click",function(){var e=p(this),t=e.closest(".llms-merge-codes"),a=t.attr("data-target"),l=e.attr("data-code");if(-1===a.indexOf("#")){var n=window.tinymce.editors[a];n?n.insertContent(l):alert(LLMS.l10n.translate("Copy this code and paste it into the desired area")+": "+l)}else p(a).val(p(a).val()+l);t.removeClass("active")})},this.bind_tabs=function(){p(".llms-nav-tab-wrapper .tabs li").on("click",function(){var e=p(this),t=e.closest(".llms-mb-container"),a=e.attr("data-tab");e.siblings().removeClass("llms-active"),t.find(".tab-content").removeClass("llms-active"),e.addClass("llms-active"),p("#"+a).addClass("llms-active")})},this.post_select=function(e){var t="multiple"===e.attr("multiple");if(e.llmsPostsSelect2({width:t?"100%":"65%"}),!t&&!e.attr("data-no-view-button")){var a=LLMS.l10n.translate("View"),l=p('<a class="llms-button-secondary small" style="margin-left:5px;" target="_blank" href="#">'+a+' <i class="fa fa-external-link" aria-hidden="true"></i></a>');e.next(".select2").after(l),e.on("change",function(){var e=p(this).val();e?l.attr("href","/?p="+e).show():l.hide()}).trigger("change")}},this.bind_tables=function(){p('.llms-table button[name="llms-expand-table"]').on("click",function(){var e=p(this),t=e.closest(".llms-table");if(e.attr("data-text")){var a=e.text();e.text(e.attr("data-text")),e.attr("data-text",a)}t.find(".expandable").each(function(){p(this).hasClass("closed")?p(this).addClass("opened").removeClass("closed"):p(this).addClass("closed").removeClass("opened")})})},this.init()}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
